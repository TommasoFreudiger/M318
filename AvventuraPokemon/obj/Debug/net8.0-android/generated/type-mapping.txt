net/minecraft/client/ClientBrandRetriever = Net.Minecraft.Client.ClientBrandRetriever
  <init>()V = .ctor()
  a = A
  getClientModName()Ljava/lang/String; = ClientModName
net/minecraftforge/client/event/RenderLevelStageEvent = Net.Minecraftforge.Client.Event.RenderLevelStageEvent
  <init>()V = .ctor()
net/minecraftforge/client/event/ViewportEvent = Net.Minecraftforge.Client.Event.ViewportEvent
  getPartialTick()D = PartialTick
net/minecraftforge/client/extensions/common/IClientBlockExtensions = Net.Minecraftforge.Client.Extensions.Common.IClientBlockExtensions
  DUMMY = Dummy
net/minecraftforge/client/extensions/common/IClientFluidTypeExtensions = Net.Minecraftforge.Client.Extensions.Common.IClientFluidTypeExtensions
  DUMMY = Dummy
  getColorTint()I = ColorTint
  of(Lnet/minecraftforge/fluids/FluidType;)Lnet/minecraftforge/client/extensions/common/IClientFluidTypeExtensions; = Of(Net.Minecraftforge.Fluids.FluidType)
net/minecraftforge/client/extensions/common/IClientItemExtensions = Net.Minecraftforge.Client.Extensions.Common.IClientItemExtensions
  DUMMY = Dummy
net/minecraftforge/client/extensions/common/IClientMobEffectExtensions = Net.Minecraftforge.Client.Extensions.Common.IClientMobEffectExtensions
  DUMMY = Dummy
net/minecraftforge/client/extensions/IForgeBakedModel = Net.Minecraftforge.Client.Extensions.IForgeBakedModel
net/minecraftforge/client/extensions/IForgeBlockAndTintGetter = Net.Minecraftforge.Client.Extensions.IForgeBlockAndTintGetter
net/minecraftforge/client/extensions/IForgeElytraLayer = Net.Minecraftforge.Client.Extensions.IForgeElytraLayer
net/minecraftforge/client/extensions/IForgeFont = Net.Minecraftforge.Client.Extensions.IForgeFont
net/minecraftforge/client/extensions/IForgeGuiGraphics = Net.Minecraftforge.Client.Extensions.IForgeGuiGraphics
net/minecraftforge/client/extensions/IForgeModelBaker = Net.Minecraftforge.Client.Extensions.IForgeModelBaker
net/minecraftforge/client/extensions/IForgePoseStack = Net.Minecraftforge.Client.Extensions.IForgePoseStack
net/minecraftforge/client/extensions/IForgeVertexConsumer = Net.Minecraftforge.Client.Extensions.IForgeVertexConsumer
net/minecraftforge/client/extensions/IForgeVertexFormat = Net.Minecraftforge.Client.Extensions.IForgeVertexFormat
net/minecraftforge/client/ForgeRenderTypes = Net.Minecraftforge.Client.ForgeRenderTypes
  <init>()V = .ctor()
net/minecraftforge/client/ICloudRenderHandler = Net.Minecraftforge.Client.ICloudRenderHandler
net/minecraftforge/client/ISkyRenderHandler = Net.Minecraftforge.Client.ISkyRenderHandler
net/minecraftforge/client/IWeatherParticleRenderHandler = Net.Minecraftforge.Client.IWeatherParticleRenderHandler
net/minecraftforge/client/IWeatherRenderHandler = Net.Minecraftforge.Client.IWeatherRenderHandler
net/minecraftforge/client/model/data/ModelData = Net.Minecraftforge.Client.Model.Data.ModelData
  <init>()V = .ctor()
  EMPTY = Empty
net/minecraftforge/client/model/data/ModelDataManager = Net.Minecraftforge.Client.Model.Data.ModelDataManager
net/minecraftforge/client/model/ForgeFaceData = Net.Minecraftforge.Client.Model.ForgeFaceData
  <init>(IIIZ)V = .ctor(int, int, int, bool)
  DEFAULT = Default
  ambientOcclusion()Z = AmbientOcclusion()
  blockLight()I = BlockLight()
  color()I = Color()
  equals(Ljava/lang/Object;)Z = Equals(Java.Lang.Object)
  hashCode()I = GetHashCode()
  skyLight()I = SkyLight()
  toString()Ljava/lang/String; = ToString()
net/minecraftforge/client/model/lighting/QuadLighter = Net.Minecraftforge.Client.Model.Lighting.QuadLighter
  <init>()V = .ctor()
  calculateShade(FFFZ)F = CalculateShade(float, float, float, bool)
net/minecraftforge/client/model/ModelDataManager = Net.Minecraftforge.Client.Model.ModelDataManager
  <init>()V = .ctor()
net/minecraftforge/client/RenderTypeHelper = Net.Minecraftforge.Client.RenderTypeHelper
  <init>()V = .ctor()
net/minecraftforge/client/textures/ForgeTextureMetadata = Net.Minecraftforge.Client.Textures.ForgeTextureMetadata
  <init>()V = .ctor()
net/minecraftforge/common/capabilities/CapabilityDispatcher = Net.Minecraftforge.Common.Capabilities.CapabilityDispatcher
  <init>()V = .ctor()
net/minecraftforge/common/capabilities/CapabilityProvider = Net.Minecraftforge.Common.Capabilities.CapabilityProvider
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  getCapabilities()Lnet/minecraftforge/common/capabilities/CapabilityDispatcher; = Capabilities
  gatherCapabilities()V = GatherCapabilities()
  invalidateCaps()V = InvalidateCaps()
net/minecraftforge/common/extensions/IForgeBlockEntity = Net.Minecraftforge.Common.Extensions.IForgeBlockEntity
  onChunkUnloaded()V = OnChunkUnloaded()
  requestModelDataUpdate()V = RequestModelDataUpdate()
net/minecraftforge/common/extensions/IForgeBlockState = Net.Minecraftforge.Common.Extensions.IForgeBlockState
net/minecraftforge/common/extensions/IForgeEntity = Net.Minecraftforge.Common.Extensions.IForgeEntity
  isAddedToWorld()Z = IsAddedToWorld
net/minecraftforge/common/extensions/IForgeLivingEntity = Net.Minecraftforge.Common.Extensions.IForgeLivingEntity
  jumpInFluid(Lnet/minecraftforge/fluids/FluidType;)V = JumpInFluid(Net.Minecraftforge.Fluids.FluidType)
net/minecraftforge/common/extensions/IForgePacketBuffer = Net.Minecraftforge.Common.Extensions.IForgePacketBuffer
net/minecraftforge/common/ForgeConfig = Net.Minecraftforge.Common.ForgeConfig
  <init>()V = .ctor()
  CLIENT = Client
  COMMON = Common
  SERVER = Server
net/minecraftforge/common/ForgeConfigSpec = Net.Minecraftforge.Common.ForgeConfigSpec
  <init>()V = .ctor()
net/minecraftforge/common/property/IUnlistedProperty = Net.Minecraftforge.Common.Property.IUnlistedProperty
  getName()Ljava/lang/String; = Name
  getType()Ljava/lang/Class; = Type
  isValid(Ljava/lang/Object;)Z = IsValid(Java.Lang.Object)
  valueToString(Ljava/lang/Object;)Ljava/lang/String; = ValueToString(Java.Lang.Object)
net/minecraftforge/entity/EntityEvent = Net.Minecraftforge.Entity.EntityEvent
  <init>()V = .ctor()
net/minecraftforge/event/entity/living/ILivingTargetType = Net.Minecraftforge.Event.Entity.Living.ILivingTargetType
net/minecraftforge/event/entity/living/LivingChangeTargetEvent = Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent
  <init>()V = .ctor()
net/minecraftforge/event/entity/living/LivingEvent = Net.Minecraftforge.Event.Entity.Living.LivingEvent
  <init>()V = .ctor()
net/minecraftforge/eventbus/api/Event = Net.Minecraftforge.Eventbus.Api.Event
  <init>()V = .ctor()
  isCanceled()Z = IsCanceled
  getResult()Lnet/minecraftforge/eventbus/api/Event$Result; = GetResult()
net/minecraftforge/fluids/FluidType = Net.Minecraftforge.Fluids.FluidType
  <init>()V = .ctor()
  isAir()Z = IsAir
net/minecraftforge/fml/common/registry/RegistryDelegate = Net.Minecraftforge.Fml.Common.Registry.IRegistryDelegate
  get()Ljava/lang/Object; = Get()
  type()Ljava/lang/Class; = Type()
net/minecraftforge/registries/IRegistryDelegate = Net.Minecraftforge.Registries.IRegistryDelegate
  get()Ljava/lang/Object; = Get()
  type()Ljava/lang/Class; = Type()
net/minecraftforge/resource/IResourceType = Net.Minecraftforge.Resource.IResourceType
net/minecraftforge/resource/ResourceCacheManager = Net.Minecraftforge.Resource.ResourceCacheManager
  index(Ljava/lang/String;)V = Index(string)
  shouldUseCache()Z = ShouldUseCache()
net/minecraftforge/resource/VanillaResourceType = Net.Minecraftforge.Resource.VanillaResourceType
  LANGUAGES = Languages
  MODELS = Models
  SHADERS = Shaders
  SOUNDS = Sounds
  TEXTURES = Textures
  valueOf(Ljava/lang/String;)Lnet/minecraftforge/resource/VanillaResourceType; = ValueOf(string)
  values()[Lnet/minecraftforge/resource/VanillaResourceType; = Values()
net/optifine/BetterGrass = Net.Optifine.BetterGrass
  <init>()V = .ctor()
  update()V = Update()
net/optifine/BetterGrass = Net.Optifine.BetterGrass
  <init>()V = .ctor()
  update()V = Update()
net/optifine/BetterSnow = Net.Optifine.BetterSnow
  <init>()V = .ctor()
  update()V = Update()
net/optifine/BetterSnow = Net.Optifine.BetterSnow
  <init>()V = .ctor()
  update()V = Update()
net/optifine/BlockDir = Net.Optifine.BlockDir
  DOWN = Down
  DOWN_EAST = DownEast
  DOWN_NORTH = DownNorth
  DOWN_SOUTH = DownSouth
  DOWN_WEST = DownWest
  EAST = East
  NORTH = North
  NORTH_EAST = NorthEast
  NORTH_WEST = NorthWest
  SOUTH = South
  SOUTH_EAST = SouthEast
  SOUTH_WEST = SouthWest
  UP = Up
  UP_EAST = UpEast
  UP_NORTH = UpNorth
  UP_SOUTH = UpSouth
  UP_WEST = UpWest
  WEST = West
  isDouble()Z = IsDouble
  getOffsetX()I = OffsetX
  getOffsetY()I = OffsetY
  getOffsetZ()I = OffsetZ
  valueOf(Ljava/lang/String;)Lnet/optifine/BlockDir; = ValueOf(string)
  values()[Lnet/optifine/BlockDir; = Values()
net/optifine/BlockDir = Net.Optifine.BlockDir
  DOWN = Down
  DOWN_EAST = DownEast
  DOWN_NORTH = DownNorth
  DOWN_SOUTH = DownSouth
  DOWN_WEST = DownWest
  EAST = East
  NORTH = North
  NORTH_EAST = NorthEast
  NORTH_WEST = NorthWest
  SOUTH = South
  SOUTH_EAST = SouthEast
  SOUTH_WEST = SouthWest
  UP = Up
  UP_EAST = UpEast
  UP_NORTH = UpNorth
  UP_SOUTH = UpSouth
  UP_WEST = UpWest
  WEST = West
  isDouble()Z = IsDouble
  getOffsetX()I = OffsetX
  getOffsetY()I = OffsetY
  getOffsetZ()I = OffsetZ
  valueOf(Ljava/lang/String;)Lnet/optifine/BlockDir; = ValueOf(string)
  values()[Lnet/optifine/BlockDir; = Values()
net/optifine/ChunkPosComparator = Net.Optifine.ChunkPosComparator
  <init>(IIDD)V = .ctor(int, int, double, double)
net/optifine/ClearWater = Net.Optifine.ClearWater
  <init>()V = .ctor()
net/optifine/ClearWater = Net.Optifine.ClearWater
  <init>()V = .ctor()
net/optifine/ComparableVersion = Net.Optifine.ComparableVersion
  <init>(Ljava/lang/String;)V = .ctor(string)
  getMajor()I = Major
  getMinor()I = Minor
  getPatch()I = Patch
  compareTo(Lnet/optifine/ComparableVersion;)I = CompareTo(Net.Optifine.ComparableVersion)
  toString()Ljava/lang/String; = ToString()
net/optifine/ComparableVersion = Net.Optifine.ComparableVersion
  <init>(Ljava/lang/String;)V = .ctor(string)
  getMajor()I = Major
  getMinor()I = Minor
  getPatch()I = Patch
  compareTo(Lnet/optifine/ComparableVersion;)I = CompareTo(Net.Optifine.ComparableVersion)
net/optifine/Config = Net.Optifine.Config
  DEF_ALPHA_FUNC_LEVEL = DefAlphaFuncLevel
  glslVersion = GlslVersion
  glVersion = GlVersion
  logDetail = LogDetail
  MC_VERSION = McVersion
  minecraftVersionInt = MinecraftVersionInt
  OF_EDITION = OfEdition
  OF_NAME = OfName
  OF_RELEASE = OfRelease
  openGlExtensions = OpenGlExtensions
  openGlRenderer = OpenGlRenderer
  openGlVendor = OpenGlVendor
  openGlVersion = OpenGlVersion
  VERSION = Version
  zoomMode = ZoomMode
  zoomSmoothCamera = ZoomSmoothCamera
  getAlphaFuncLevel()F = AlphaFuncLevel
  getAmbientOcclusionLevel()F = AmbientOcclusionLevel
  getAnisotropicFilterLevel()I = AnisotropicFilterLevel
  getAntialiasingLevel()I = AntialiasingLevel
  getAvailableProcessors()I = AvailableProcessors
  getAverageFrameFps()J = AverageFrameFps
  getAverageFrameTimeMs()J = AverageFrameTimeMs
  getAverageFrameTimeSec()F = AverageFrameTimeSec
  getBiomeBlendRadius()I = BiomeBlendRadius
  getBitsJre()I = BitsJre
  getBitsOs()I = BitsOs
  getBuild()Ljava/lang/String; = Build
  getChunkUpdates()I = ChunkUpdates
  getChunkViewDistance()I = ChunkViewDistance
  getFogStart()F = FogStart
  getFpsAverage()I = FpsAverage
  getFpsMin()I = FpsMin
  getFpsString()Ljava/lang/String; = FpsString
  getGlslVersion()Lnet/optifine/config/GlVersion; = GlslVersion
  getGlVersion()Lnet/optifine/config/GlVersion; = GlVersion
  isAlternateBlocks()Z = IsAlternateBlocks
  isAnimatedExplosion()Z = IsAnimatedExplosion
  isAnimatedFire()Z = IsAnimatedFire
  isAnimatedFlame()Z = IsAnimatedFlame
  isAnimatedLava()Z = IsAnimatedLava
  isAnimatedPortal()Z = IsAnimatedPortal
  isAnimatedRedstone()Z = IsAnimatedRedstone
  isAnimatedSmoke()Z = IsAnimatedSmoke
  isAnimatedTerrain()Z = IsAnimatedTerrain
  isAnimatedTextures()Z = IsAnimatedTextures
  isAnimatedWater()Z = IsAnimatedWater
  isAnisotropicFiltering()Z = IsAnisotropicFiltering
  isAntialiasing()Z = IsAntialiasing
  isAntialiasingConfigured()Z = IsAntialiasingConfigured
  isBetterGrass()Z = IsBetterGrass
  isBetterGrassFancy()Z = IsBetterGrassFancy
  isBetterSnow()Z = IsBetterSnow
  isCloudsFancy()Z = IsCloudsFancy
  isCloudsOff()Z = IsCloudsOff
  isConnectedModels()Z = IsConnectedModels
  isConnectedTextures()Z = IsConnectedTextures
  isConnectedTexturesFancy()Z = IsConnectedTexturesFancy
  isCullFacesLeaves()Z = IsCullFacesLeaves
  isCustomColors()Z = IsCustomColors
  isCustomEntityModels()Z = IsCustomEntityModels
  isCustomFonts()Z = IsCustomFonts
  isCustomGuis()Z = IsCustomGuis
  isCustomItems()Z = IsCustomItems
  isCustomSky()Z = IsCustomSky
  isDrippingWaterLava()Z = IsDrippingWaterLava
  isDynamicFov()Z = IsDynamicFov
  isDynamicHandLight()Z = IsDynamicHandLight
  isDynamicLights()Z = IsDynamicLights
  isDynamicLightsFast()Z = IsDynamicLightsFast
  isDynamicUpdates()Z = IsDynamicUpdates
  isEmissiveTextures()Z = IsEmissiveTextures
  isFastRender()Z = IsFastRender
  isFireworkParticles()Z = IsFireworkParticles
  isFogOff()Z = IsFogOff
  isFogOn()Z = IsFogOn
  isGeneratedLava()Z = IsGeneratedLava
  isGeneratedWater()Z = IsGeneratedWater
  isGraphicsFabulous()Z = IsGraphicsFabulous
  isGraphicsFancy()Z = IsGraphicsFancy
  isIntegratedServerRunning()Z = IsIntegratedServerRunning
  isLazyChunkLoading()Z = IsLazyChunkLoading
  isMinecraftThread()Z = IsMinecraftThread
  isMipmaps()Z = IsMipmaps
  isMoonTexture()Z = IsMoonTexture
  isMultiTexture()Z = IsMultiTexture
  isNaturalTextures()Z = IsNaturalTextures
  isPortalParticles()Z = IsPortalParticles
  isPotionParticles()Z = IsPotionParticles
  isQuadsToTriangles()Z = IsQuadsToTriangles
  isRainFancy()Z = IsRainFancy
  isRainOff()Z = IsRainOff
  isRainSplash()Z = IsRainSplash
  isRandomEntities()Z = IsRandomEntities
  isReloadingResources()Z = IsReloadingResources
  isRenderRegions()Z = IsRenderRegions
  isShaders()Z = IsShaders
  isShadersShadows()Z = IsShadersShadows
  isShowCapes()Z = IsShowCapes
  isShowFrameTime()Z = IsShowFrameTime
  isShowGlErrors()Z = IsShowGlErrors
  isSingleProcessor()Z = IsSingleProcessor
  isSkyEnabled()Z = IsSkyEnabled
  isSmoothBiomes()Z = IsSmoothBiomes
  isSmoothFps()Z = IsSmoothFps
  isSmoothWorld()Z = IsSmoothWorld
  isStarsEnabled()Z = IsStarsEnabled
  isSunMoonEnabled()Z = IsSunMoonEnabled
  isSunTexture()Z = IsSunTexture
  isSwampColors()Z = IsSwampColors
  isTelemetryAnonymous()Z = IsTelemetryAnonymous
  isTelemetryOn()Z = IsTelemetryOn
  isTimeDayOnly()Z = IsTimeDayOnly
  isTimeDefault()Z = IsTimeDefault
  isTimeNightOnly()Z = IsTimeNightOnly
  isTreesFancy()Z = IsTreesFancy
  isTreesSmart()Z = IsTreesSmart
  isUseAlphaFunc()Z = IsUseAlphaFunc
  isVbo()Z = IsVbo
  isVignetteEnabled()Z = IsVignetteEnabled
  isVoidParticles()Z = IsVoidParticles
  isWaterParticles()Z = IsWaterParticles
  isWeatherEnabled()Z = IsWeatherEnabled
  getLastFrameTimeMs()J = LastFrameTimeMs
  getMinecraftVersionInt()I = MinecraftVersionInt
  getMipmapLevels()I = MipmapLevels
  getMipmapType()I = MipmapType
  getNewRelease()Ljava/lang/String; = NewRelease
  setNewRelease(Ljava/lang/String;)V = NewRelease
  isNotify64BitJava()Z = Notify64BitJava
  setNotify64BitJava(Z)V = Notify64BitJava
  getOpenGlVersionString()Ljava/lang/String; = OpenGlVersionString
  getResourcePackNames()Ljava/lang/String; = ResourcePackNames
  getScreenshotSize()I = ScreenshotSize
  getUpdatesPerFrame()I = UpdatesPerFrame
  getVersion()Ljava/lang/String; = Version
  getVersionDebug()Ljava/lang/String; = VersionDebug
  addIntsToArray([I[I)[I = AddIntsToArray(int[], int[])
  addIntToArray([II)[I = AddIntToArray(int[], int)
  addObjectsToArray([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectsToArray(Java.Lang.Object[], Java.Lang.Object[])
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object)
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;I)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object, int)
  arrayToString([ZLjava/lang/String;)Ljava/lang/String; = ArrayToString(bool[], string)
  arrayToString([F)Ljava/lang/String; = ArrayToString(float[])
  arrayToString([FLjava/lang/String;)Ljava/lang/String; = ArrayToString(float[], string)
  arrayToString([I)Ljava/lang/String; = ArrayToString(int[])
  arrayToString([ILjava/lang/String;)Ljava/lang/String; = ArrayToString(int[], string)
  arrayToString([Ljava/lang/Object;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[])
  arrayToString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[], string)
  between(DDD)Z = Between(double, double, double)
  between(FFF)Z = Between(float, float, float)
  between(III)Z = Between(int, int, int)
  checkGlError(Ljava/lang/String;)V = CheckGlError(string)
  checkInitialized()V = CheckInitialized()
  checkNull(Ljava/lang/Object;Ljava/lang/String;)V = CheckNull(Java.Lang.Object, string)
  collectionToArray(Ljava/util/Collection;Ljava/lang/Class;)[Ljava/lang/Object; = CollectionToArray(System.Collections.ICollection, Java.Lang.Class)
  compareRelease(Ljava/lang/String;Ljava/lang/String;)I = CompareRelease(string, string)
  createDirectIntBuffer(I)Ljava/nio/IntBuffer; = CreateDirectIntBuffer(int)
  dbg(Ljava/lang/String;)V = Dbg(string)
  detail(Ljava/lang/String;)V = Detail(string)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  equalsOne(I[I)Z = EqualsOne(int, int[])
  equalsOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = EqualsOne(Java.Lang.Object, Java.Lang.Object[])
  error(Ljava/lang/String;)V = Error(string)
  error(Ljava/lang/String;Ljava/lang/Throwable;)V = Error(string, Java.Lang.Throwable)
  frameStart()V = FrameStart()
  getGlErrorString(I)Ljava/lang/String; = GetGlErrorString(int)
  getOpenGlExtensions()[Ljava/lang/String; = GetOpenGlExtensions()
  getOptiFineResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetOptiFineResourceStream(string)
  initDisplay()V = InitDisplay()
  intHash(I)I = IntHash(int)
  isFalse(Ljava/lang/Boolean;)Z = IsFalse(Java.Lang.Boolean)
  isKeyDown(I)Z = IsKeyDown(int)
  isSameOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = IsSameOne(Java.Lang.Object, Java.Lang.Object[])
  isTrue(Ljava/lang/Boolean;)Z = IsTrue(Java.Lang.Boolean)
  limit(DDD)D = Limit(double, double, double)
  limit(FFF)F = Limit(float, float, float)
  limit(III)I = Limit(int, int, int)
  limit(JJJ)J = Limit(long, long, long)
  limitTo1(F)F = LimitTo1(float)
  listToString(Ljava/util/List;)Ljava/lang/String; = ListToString(System.Collections.IList)
  listToString(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; = ListToString(System.Collections.IList, string)
  log(Ljava/lang/String;)V = Log(string)
  normalize(Ljava/lang/String;)Ljava/lang/String; = Normalize(string)
  openWebLink(Ljava/net/URI;)Z = OpenWebLink(Java.Net.URI)
  parseBoolean(Ljava/lang/String;Z)Z = ParseBoolean(string, bool)
  parseBoolean(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean; = ParseBoolean(string, Java.Lang.Boolean)
  parseFloat(Ljava/lang/String;F)F = ParseFloat(string, float)
  parseGlVersion(Ljava/lang/String;Lnet/optifine/config/GlVersion;)Lnet/optifine/config/GlVersion; = ParseGlVersion(string, Net.Optifine.Config.GlVersion)
  parseHexInt(Ljava/lang/String;I)I = ParseHexInt(string, int)
  parseInt(Ljava/lang/String;I)I = ParseInt(string, int)
  readAll(Ljava/io/InputStream;)[B = ReadAll(System.IO.Stream)
  readFile(Ljava/io/File;)Ljava/lang/String; = ReadFile(Java.IO.File)
  readInputStream(Ljava/io/InputStream;)Ljava/lang/String; = ReadInputStream(System.IO.Stream)
  readInputStream(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String; = ReadInputStream(System.IO.Stream, string)
  readLines(Ljava/io/File;)[Ljava/lang/String; = ReadLines(Java.IO.File)
  readLines(Ljava/io/InputStream;)[Ljava/lang/String; = ReadLines(System.IO.Stream)
  removeObjectFromArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = RemoveObjectFromArray(Java.Lang.Object[], Java.Lang.Object)
  showGuiMessage(Ljava/lang/String;Ljava/lang/String;)V = ShowGuiMessage(string, string)
  sleep(J)V = Sleep(long)
  tokenize(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = Tokenize(string, string)
  toPrimitive([Ljava/lang/Integer;)[I = ToPrimitive(Java.Lang.Integer[])
  updateAvailableProcessors()V = UpdateAvailableProcessors()
  updateFpsMin()V = UpdateFpsMin()
  updateTexturePackClouds()V = UpdateTexturePackClouds()
  updateThreadPriorities()V = UpdateThreadPriorities()
  warn(Ljava/lang/String;)V = Warn(string)
  warn(Ljava/lang/String;Ljava/lang/Throwable;)V = Warn(string, Java.Lang.Throwable)
  writeFile(Ljava/io/File;Ljava/lang/String;)V = WriteFile(Java.IO.File, string)
net/optifine/Config = Net.Optifine.Config
  DEF_ALPHA_FUNC_LEVEL = DefAlphaFuncLevel
  glslVersion = GlslVersion
  glVersion = GlVersion
  logDetail = LogDetail
  MC_VERSION = McVersion
  minecraftVersionInt = MinecraftVersionInt
  OF_EDITION = OfEdition
  OF_NAME = OfName
  OF_RELEASE = OfRelease
  openGlExtensions = OpenGlExtensions
  openGlRenderer = OpenGlRenderer
  openGlVendor = OpenGlVendor
  openGlVersion = OpenGlVersion
  VERSION = Version
  zoomMode = ZoomMode
  zoomSmoothCamera = ZoomSmoothCamera
  getAlphaFuncLevel()F = AlphaFuncLevel
  getAmbientOcclusionLevel()F = AmbientOcclusionLevel
  getAnisotropicFilterLevel()I = AnisotropicFilterLevel
  getAntialiasingLevel()I = AntialiasingLevel
  getAvailableProcessors()I = AvailableProcessors
  getAverageFrameFps()J = AverageFrameFps
  getAverageFrameTimeMs()J = AverageFrameTimeMs
  getAverageFrameTimeSec()F = AverageFrameTimeSec
  getBiomeBlendRadius()I = BiomeBlendRadius
  getBitsJre()I = BitsJre
  getBitsOs()I = BitsOs
  getBuild()Ljava/lang/String; = Build
  getChunkUpdates()I = ChunkUpdates
  getChunkViewDistance()I = ChunkViewDistance
  getFogStart()F = FogStart
  getFpsAverage()I = FpsAverage
  getFpsMin()I = FpsMin
  getFpsString()Ljava/lang/String; = FpsString
  getGlslVersion()Lnet/optifine/config/GlVersion; = GlslVersion
  getGlVersion()Lnet/optifine/config/GlVersion; = GlVersion
  isAlternateBlocks()Z = IsAlternateBlocks
  isAnimatedExplosion()Z = IsAnimatedExplosion
  isAnimatedFire()Z = IsAnimatedFire
  isAnimatedFlame()Z = IsAnimatedFlame
  isAnimatedLava()Z = IsAnimatedLava
  isAnimatedPortal()Z = IsAnimatedPortal
  isAnimatedRedstone()Z = IsAnimatedRedstone
  isAnimatedSmoke()Z = IsAnimatedSmoke
  isAnimatedTerrain()Z = IsAnimatedTerrain
  isAnimatedTextures()Z = IsAnimatedTextures
  isAnimatedWater()Z = IsAnimatedWater
  isAnisotropicFiltering()Z = IsAnisotropicFiltering
  isAntialiasing()Z = IsAntialiasing
  isAntialiasingConfigured()Z = IsAntialiasingConfigured
  isBetterGrass()Z = IsBetterGrass
  isBetterGrassFancy()Z = IsBetterGrassFancy
  isBetterSnow()Z = IsBetterSnow
  isCloudsFancy()Z = IsCloudsFancy
  isCloudsOff()Z = IsCloudsOff
  isConnectedModels()Z = IsConnectedModels
  isConnectedTextures()Z = IsConnectedTextures
  isConnectedTexturesFancy()Z = IsConnectedTexturesFancy
  isCullFacesLeaves()Z = IsCullFacesLeaves
  isCustomColors()Z = IsCustomColors
  isCustomEntityModels()Z = IsCustomEntityModels
  isCustomFonts()Z = IsCustomFonts
  isCustomGuis()Z = IsCustomGuis
  isCustomItems()Z = IsCustomItems
  isCustomSky()Z = IsCustomSky
  isDrippingWaterLava()Z = IsDrippingWaterLava
  isDynamicFov()Z = IsDynamicFov
  isDynamicHandLight()Z = IsDynamicHandLight
  isDynamicLights()Z = IsDynamicLights
  isDynamicLightsFast()Z = IsDynamicLightsFast
  isDynamicUpdates()Z = IsDynamicUpdates
  isEmissiveTextures()Z = IsEmissiveTextures
  isFastRender()Z = IsFastRender
  isFireworkParticles()Z = IsFireworkParticles
  isFogOff()Z = IsFogOff
  isFogOn()Z = IsFogOn
  isGeneratedLava()Z = IsGeneratedLava
  isGeneratedWater()Z = IsGeneratedWater
  isGraphicsFabulous()Z = IsGraphicsFabulous
  isGraphicsFancy()Z = IsGraphicsFancy
  isIntegratedServerRunning()Z = IsIntegratedServerRunning
  isLazyChunkLoading()Z = IsLazyChunkLoading
  isMinecraftThread()Z = IsMinecraftThread
  isMipmaps()Z = IsMipmaps
  isMoonTexture()Z = IsMoonTexture
  isMultiTexture()Z = IsMultiTexture
  isNaturalTextures()Z = IsNaturalTextures
  isPortalParticles()Z = IsPortalParticles
  isPotionParticles()Z = IsPotionParticles
  isQuadsToTriangles()Z = IsQuadsToTriangles
  isRainFancy()Z = IsRainFancy
  isRainOff()Z = IsRainOff
  isRainSplash()Z = IsRainSplash
  isRandomEntities()Z = IsRandomEntities
  isReloadingResources()Z = IsReloadingResources
  isRenderRegions()Z = IsRenderRegions
  isShaders()Z = IsShaders
  isShadersShadows()Z = IsShadersShadows
  isShowCapes()Z = IsShowCapes
  isShowFrameTime()Z = IsShowFrameTime
  isShowGlErrors()Z = IsShowGlErrors
  isSingleProcessor()Z = IsSingleProcessor
  isSkyEnabled()Z = IsSkyEnabled
  isSmoothBiomes()Z = IsSmoothBiomes
  isSmoothFps()Z = IsSmoothFps
  isSmoothWorld()Z = IsSmoothWorld
  isStarsEnabled()Z = IsStarsEnabled
  isSunMoonEnabled()Z = IsSunMoonEnabled
  isSunTexture()Z = IsSunTexture
  isSwampColors()Z = IsSwampColors
  isTelemetryAnonymous()Z = IsTelemetryAnonymous
  isTelemetryOn()Z = IsTelemetryOn
  isTimeDayOnly()Z = IsTimeDayOnly
  isTimeDefault()Z = IsTimeDefault
  isTimeNightOnly()Z = IsTimeNightOnly
  isTreesFancy()Z = IsTreesFancy
  isTreesSmart()Z = IsTreesSmart
  isUseAlphaFunc()Z = IsUseAlphaFunc
  isVbo()Z = IsVbo
  isVignetteEnabled()Z = IsVignetteEnabled
  isVoidParticles()Z = IsVoidParticles
  isWaterParticles()Z = IsWaterParticles
  isWeatherEnabled()Z = IsWeatherEnabled
  getLastFrameTimeMs()J = LastFrameTimeMs
  getMinecraftVersionInt()I = MinecraftVersionInt
  getMipmapLevels()I = MipmapLevels
  getMipmapType()I = MipmapType
  getNewRelease()Ljava/lang/String; = NewRelease
  setNewRelease(Ljava/lang/String;)V = NewRelease
  isNotify64BitJava()Z = Notify64BitJava
  setNotify64BitJava(Z)V = Notify64BitJava
  getOpenGlVersionString()Ljava/lang/String; = OpenGlVersionString
  getResourcePackNames()Ljava/lang/String; = ResourcePackNames
  getScreenshotSize()I = ScreenshotSize
  getUpdatesPerFrame()I = UpdatesPerFrame
  getVersion()Ljava/lang/String; = Version
  getVersionDebug()Ljava/lang/String; = VersionDebug
  addIntsToArray([I[I)[I = AddIntsToArray(int[], int[])
  addIntToArray([II)[I = AddIntToArray(int[], int)
  addObjectsToArray([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectsToArray(Java.Lang.Object[], Java.Lang.Object[])
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object)
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;I)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object, int)
  arrayToString([ZLjava/lang/String;)Ljava/lang/String; = ArrayToString(bool[], string)
  arrayToString([F)Ljava/lang/String; = ArrayToString(float[])
  arrayToString([FLjava/lang/String;)Ljava/lang/String; = ArrayToString(float[], string)
  arrayToString([I)Ljava/lang/String; = ArrayToString(int[])
  arrayToString([ILjava/lang/String;)Ljava/lang/String; = ArrayToString(int[], string)
  arrayToString([Ljava/lang/Object;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[])
  arrayToString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[], string)
  between(DDD)Z = Between(double, double, double)
  between(FFF)Z = Between(float, float, float)
  between(III)Z = Between(int, int, int)
  checkGlError(Ljava/lang/String;)V = CheckGlError(string)
  checkInitialized()V = CheckInitialized()
  checkNull(Ljava/lang/Object;Ljava/lang/String;)V = CheckNull(Java.Lang.Object, string)
  collectionToArray(Ljava/util/Collection;Ljava/lang/Class;)[Ljava/lang/Object; = CollectionToArray(System.Collections.ICollection, Java.Lang.Class)
  compareRelease(Ljava/lang/String;Ljava/lang/String;)I = CompareRelease(string, string)
  createDirectIntBuffer(I)Ljava/nio/IntBuffer; = CreateDirectIntBuffer(int)
  dbg(Ljava/lang/String;)V = Dbg(string)
  detail(Ljava/lang/String;)V = Detail(string)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  equalsOne(I[I)Z = EqualsOne(int, int[])
  equalsOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = EqualsOne(Java.Lang.Object, Java.Lang.Object[])
  error(Ljava/lang/String;)V = Error(string)
  error(Ljava/lang/String;Ljava/lang/Throwable;)V = Error(string, Java.Lang.Throwable)
  frameStart()V = FrameStart()
  getGlErrorString(I)Ljava/lang/String; = GetGlErrorString(int)
  getOpenGlExtensions()[Ljava/lang/String; = GetOpenGlExtensions()
  getOptiFineResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetOptiFineResourceStream(string)
  initDisplay()V = InitDisplay()
  intHash(I)I = IntHash(int)
  isFalse(Ljava/lang/Boolean;)Z = IsFalse(Java.Lang.Boolean)
  isKeyDown(I)Z = IsKeyDown(int)
  isSameOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = IsSameOne(Java.Lang.Object, Java.Lang.Object[])
  isTrue(Ljava/lang/Boolean;)Z = IsTrue(Java.Lang.Boolean)
  limit(DDD)D = Limit(double, double, double)
  limit(FFF)F = Limit(float, float, float)
  limit(III)I = Limit(int, int, int)
  limit(JJJ)J = Limit(long, long, long)
  limitTo1(F)F = LimitTo1(float)
  listToString(Ljava/util/List;)Ljava/lang/String; = ListToString(System.Collections.IList)
  listToString(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; = ListToString(System.Collections.IList, string)
  log(Ljava/lang/String;)V = Log(string)
  normalize(Ljava/lang/String;)Ljava/lang/String; = Normalize(string)
  openWebLink(Ljava/net/URI;)Z = OpenWebLink(Java.Net.URI)
  parseBoolean(Ljava/lang/String;Z)Z = ParseBoolean(string, bool)
  parseBoolean(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean; = ParseBoolean(string, Java.Lang.Boolean)
  parseFloat(Ljava/lang/String;F)F = ParseFloat(string, float)
  parseGlVersion(Ljava/lang/String;Lnet/optifine/config/GlVersion;)Lnet/optifine/config/GlVersion; = ParseGlVersion(string, Net.Optifine.Config.GlVersion)
  parseHexInt(Ljava/lang/String;I)I = ParseHexInt(string, int)
  parseInt(Ljava/lang/String;I)I = ParseInt(string, int)
  readAll(Ljava/io/InputStream;)[B = ReadAll(System.IO.Stream)
  readFile(Ljava/io/File;)Ljava/lang/String; = ReadFile(Java.IO.File)
  readInputStream(Ljava/io/InputStream;)Ljava/lang/String; = ReadInputStream(System.IO.Stream)
  readInputStream(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String; = ReadInputStream(System.IO.Stream, string)
  readLines(Ljava/io/File;)[Ljava/lang/String; = ReadLines(Java.IO.File)
  readLines(Ljava/io/InputStream;)[Ljava/lang/String; = ReadLines(System.IO.Stream)
  removeObjectFromArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = RemoveObjectFromArray(Java.Lang.Object[], Java.Lang.Object)
  showGuiMessage(Ljava/lang/String;Ljava/lang/String;)V = ShowGuiMessage(string, string)
  sleep(J)V = Sleep(long)
  tokenize(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = Tokenize(string, string)
  toPrimitive([Ljava/lang/Integer;)[I = ToPrimitive(Java.Lang.Integer[])
  updateAvailableProcessors()V = UpdateAvailableProcessors()
  updateFpsMin()V = UpdateFpsMin()
  updateTexturePackClouds()V = UpdateTexturePackClouds()
  updateThreadPriorities()V = UpdateThreadPriorities()
  warn(Ljava/lang/String;)V = Warn(string)
  warn(Ljava/lang/String;Ljava/lang/Throwable;)V = Warn(string, Java.Lang.Throwable)
  writeFile(Ljava/io/File;Ljava/lang/String;)V = WriteFile(Java.IO.File, string)
net/optifine/config/BiomeId = Net.Optifine.Config.BiomeId
  toString()Ljava/lang/String; = ToString()
net/optifine/config/BiomeId = Net.Optifine.Config.BiomeId
net/optifine/config/ConfigUtils = Net.Optifine.Config.ConfigUtils
  <init>()V = .ctor()
  readProperties(Ljava/lang/String;)Ljava/util/Properties; = ReadProperties(string)
  readString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReadString(string, string)
net/optifine/config/ConfigUtils = Net.Optifine.Config.ConfigUtils
  <init>()V = .ctor()
  readProperties(Ljava/lang/String;)Ljava/util/Properties; = ReadProperties(string)
  readString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReadString(string, string)
net/optifine/config/ConnectedParser = Net.Optifine.Config.ConnectedParser
  <init>(Ljava/lang/String;)V = .ctor(string)
  PROFESSIONS_INVALID = ProfessionsInvalid
  dbg(Ljava/lang/String;)V = Dbg(string)
  getBiomeId(Ljava/lang/String;)Lnet/optifine/config/BiomeId; = GetBiomeId(string)
  getPropertyValue(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/Comparable; = GetPropertyValue(string, System.Collections.ICollection)
  isFullBlockName([Ljava/lang/String;)Z = IsFullBlockName(string[])
  parseBasePath(Ljava/lang/String;)Ljava/lang/String; = ParseBasePath(string)
  parseBiomes(Ljava/lang/String;)[Lnet/optifine/config/BiomeId; = ParseBiomes(string)
  parseBoolean(Ljava/lang/String;Z)Z = ParseBoolean(string, bool)
  parseBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; = ParseBooleanObject(string)
  parseColor(Ljava/lang/String;I)I = ParseColor(string, int)
  parseColor4(Ljava/lang/String;I)I = ParseColor4(string, int)
  parseEntities(Ljava/lang/String;)[I = ParseEntities(string)
  parseEnum(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum; = ParseEnum(string, Java.Lang.Enum[], string)
  parseEnums(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;[Ljava/lang/Enum;)[Ljava/lang/Enum; = ParseEnums(string, Java.Lang.Enum[], string, Java.Lang.Enum[])
  parseFaces(Ljava/lang/String;[Z)[Z = ParseFaces(string, bool[])
  parseInt(Ljava/lang/String;I)I = ParseInt(string, int)
  parseIntList(Ljava/lang/String;)[I = ParseIntList(string)
  parseIntNeg(Ljava/lang/String;I)I = ParseIntNeg(string, int)
  parseItems(Ljava/lang/String;)[I = ParseItems(string)
  parseMatchBlock(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock; = ParseMatchBlock(string)
  parseMatchBlocks(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock; = ParseMatchBlocks(string)
  parseName(Ljava/lang/String;)Ljava/lang/String; = ParseName(string)
  parseNbtTagValue(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/config/NbtTagValue; = ParseNbtTagValue(string, string)
  parseNbtTagValues(Ljava/util/Properties;Ljava/lang/String;)[Lnet/optifine/config/NbtTagValue; = ParseNbtTagValues(Java.Util.Properties, string)
  parseObject(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;)Ljava/lang/Object; = ParseObject(string, Java.Lang.Object[], Net.Optifine.Config.INameGetter, string)
  parseObjects(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object; = ParseObjects(string, Java.Lang.Object[], Net.Optifine.Config.INameGetter, string, Java.Lang.Object[])
  parseProfessions(Ljava/lang/String;)[Lnet/optifine/config/MatchProfession; = ParseProfessions(string)
  parseRangeListInt(Ljava/lang/String;)Lnet/optifine/config/RangeListInt; = ParseRangeListInt(string)
  parseRangeListIntNeg(Ljava/lang/String;)Lnet/optifine/config/RangeListInt; = ParseRangeListIntNeg(string)
  parseValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Comparable; = ParseValue(string, Java.Lang.Class)
  parseWeather(Ljava/lang/String;Ljava/lang/String;[Lnet/optifine/config/Weather;)[Lnet/optifine/config/Weather; = ParseWeather(string, string, Net.Optifine.Config.Weather[])
  startsWithDigit(Ljava/lang/String;)Z = StartsWithDigit(string)
  warn(Ljava/lang/String;)V = Warn(string)
net/optifine/config/ConnectedParser = Net.Optifine.Config.ConnectedParser
  <init>(Ljava/lang/String;)V = .ctor(string)
  PROFESSIONS_INVALID = ProfessionsInvalid
  dbg(Ljava/lang/String;)V = Dbg(string)
  getBiomeId(Ljava/lang/String;)Lnet/optifine/config/BiomeId; = GetBiomeId(string)
  getPropertyValue(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/Comparable; = GetPropertyValue(string, System.Collections.ICollection)
  isFullBlockName([Ljava/lang/String;)Z = IsFullBlockName(string[])
  parseBasePath(Ljava/lang/String;)Ljava/lang/String; = ParseBasePath(string)
  parseBiomes(Ljava/lang/String;)[Lnet/optifine/config/BiomeId; = ParseBiomes(string)
  parseBoolean(Ljava/lang/String;Z)Z = ParseBoolean(string, bool)
  parseBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; = ParseBooleanObject(string)
  parseColor(Ljava/lang/String;I)I = ParseColor(string, int)
  parseColor4(Ljava/lang/String;I)I = ParseColor4(string, int)
  parseEntities(Ljava/lang/String;)[I = ParseEntities(string)
  parseEnum(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum; = ParseEnum(string, Java.Lang.Enum[], string)
  parseEnums(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;[Ljava/lang/Enum;)[Ljava/lang/Enum; = ParseEnums(string, Java.Lang.Enum[], string, Java.Lang.Enum[])
  parseFaces(Ljava/lang/String;[Z)[Z = ParseFaces(string, bool[])
  parseInt(Ljava/lang/String;I)I = ParseInt(string, int)
  parseIntList(Ljava/lang/String;)[I = ParseIntList(string)
  parseIntNeg(Ljava/lang/String;I)I = ParseIntNeg(string, int)
  parseItems(Ljava/lang/String;)[I = ParseItems(string)
  parseMatchBlock(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock; = ParseMatchBlock(string)
  parseMatchBlocks(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock; = ParseMatchBlocks(string)
  parseName(Ljava/lang/String;)Ljava/lang/String; = ParseName(string)
  parseNbtTagValue(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/config/NbtTagValue; = ParseNbtTagValue(string, string)
  parseNbtTagValues(Ljava/util/Properties;Ljava/lang/String;)[Lnet/optifine/config/NbtTagValue; = ParseNbtTagValues(Java.Util.Properties, string)
  parseObject(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;)Ljava/lang/Object; = ParseObject(string, Java.Lang.Object[], Net.Optifine.Config.INameGetter, string)
  parseObjects(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object; = ParseObjects(string, Java.Lang.Object[], Net.Optifine.Config.INameGetter, string, Java.Lang.Object[])
  parseProfessions(Ljava/lang/String;)[Lnet/optifine/config/MatchProfession; = ParseProfessions(string)
  parseRangeListInt(Ljava/lang/String;)Lnet/optifine/config/RangeListInt; = ParseRangeListInt(string)
  parseRangeListIntNeg(Ljava/lang/String;)Lnet/optifine/config/RangeListInt; = ParseRangeListIntNeg(string)
  parseValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Comparable; = ParseValue(string, Java.Lang.Class)
  parseWeather(Ljava/lang/String;Ljava/lang/String;[Lnet/optifine/config/Weather;)[Lnet/optifine/config/Weather; = ParseWeather(string, string, Net.Optifine.Config.Weather[])
  startsWithDigit(Ljava/lang/String;)Z = StartsWithDigit(string)
  warn(Ljava/lang/String;)V = Warn(string)
net/optifine/config/EntityTypeNameLocator = Net.Optifine.Config.EntityTypeNameLocator
  <init>()V = .ctor()
net/optifine/config/EntityTypeNameLocator = Net.Optifine.Config.EntityTypeNameLocator
  <init>()V = .ctor()
net/optifine/config/FloatOptions = Net.Optifine.Config.FloatOptions
  <init>()V = .ctor()
net/optifine/config/FloatOptions = Net.Optifine.Config.FloatOptions
  <init>()V = .ctor()
net/optifine/config/GlVersion = Net.Optifine.Config.GlVersion
  <init>(II)V = .ctor(int, int)
  <init>(III)V = .ctor(int, int, int)
  <init>(IIILjava/lang/String;)V = .ctor(int, int, int, string)
  getMajor()I = Major
  getMinor()I = Minor
  getRelease()I = Release
  toInt()I = ToInt()
  toString()Ljava/lang/String; = ToString()
net/optifine/config/GlVersion = Net.Optifine.Config.GlVersion
  <init>(II)V = .ctor(int, int)
  <init>(III)V = .ctor(int, int, int)
  <init>(IIILjava/lang/String;)V = .ctor(int, int, int, string)
  getMajor()I = Major
  getMinor()I = Minor
  getRelease()I = Release
  toInt()I = ToInt()
net/optifine/config/INameGetter = Net.Optifine.Config.INameGetter
  getName(Ljava/lang/Object;)Ljava/lang/String; = GetName(Java.Lang.Object)
net/optifine/config/INameGetter = Net.Optifine.Config.INameGetter
  getName(Ljava/lang/Object;)Ljava/lang/String; = GetName(Java.Lang.Object)
net/optifine/config/IObjectLocator = Net.Optifine.Config.IObjectLocator
net/optifine/config/IParserInt = Net.Optifine.Config.IParserInt
  parse(Ljava/lang/String;I)I = Parse(string, int)
net/optifine/config/IParserInt = Net.Optifine.Config.IParserInt
  parse(Ljava/lang/String;I)I = Parse(string, int)
net/optifine/config/IPersitentOption = Net.Optifine.Config.IPersitentOption
  getSaveKey()Ljava/lang/String; = SaveKey
net/optifine/config/ItemLocator = Net.Optifine.Config.ItemLocator
  <init>()V = .ctor()
net/optifine/config/MatchBlock = Net.Optifine.Config.MatchBlock
  <init>(I)V = .ctor(int)
  <init>(I[I)V = .ctor(int, int[])
  <init>(II)V = .ctor(int, int)
  getBlockId()I = BlockId
  addMetadata(I)V = AddMetadata(int)
  addMetadatas([I)V = AddMetadatas(int[])
  getMetadatas()[I = GetMetadatas()
  matches(II)Z = Matches(int, int)
  toString()Ljava/lang/String; = ToString()
net/optifine/config/MatchBlock = Net.Optifine.Config.MatchBlock
  <init>(I)V = .ctor(int)
  <init>(I[I)V = .ctor(int, int[])
  <init>(II)V = .ctor(int, int)
  getBlockId()I = BlockId
  addMetadata(I)V = AddMetadata(int)
  addMetadatas([I)V = AddMetadatas(int[])
  getMetadatas()[I = GetMetadatas()
  matches(II)Z = Matches(int, int)
net/optifine/config/Matches = Net.Optifine.Config.Matches
  <init>()V = .ctor()
  block(II[Lnet/optifine/config/MatchBlock;)Z = Block(int, int, Net.Optifine.Config.MatchBlock[])
  blockId(I[Lnet/optifine/config/MatchBlock;)Z = BlockId(int, Net.Optifine.Config.MatchBlock[])
  metadata(I[I)Z = Metadata(int, int[])
net/optifine/config/Matches = Net.Optifine.Config.Matches
  <init>()V = .ctor()
  block(II[Lnet/optifine/config/MatchBlock;)Z = Block(int, int, Net.Optifine.Config.MatchBlock[])
  blockId(I[Lnet/optifine/config/MatchBlock;)Z = BlockId(int, Net.Optifine.Config.MatchBlock[])
  metadata(I[I)Z = Metadata(int, int[])
net/optifine/config/MatchProfession = Net.Optifine.Config.MatchProfession
  addLevel(I)Z = AddLevel(int)
  getLevels()[I = GetLevels()
  toString()Ljava/lang/String; = ToString()
net/optifine/config/MatchProfession = Net.Optifine.Config.MatchProfession
  addLevel(I)Z = AddLevel(int)
  getLevels()[I = GetLevels()
net/optifine/config/NbtTagValue = Net.Optifine.Config.NbtTagValue
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  matchesValue(Ljava/lang/String;)Z = MatchesValue(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/config/NbtTagValue = Net.Optifine.Config.NbtTagValue
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  matchesValue(Ljava/lang/String;)Z = MatchesValue(string)
net/optifine/config/ObjBooleanConsumer = Net.Optifine.Config.IObjBooleanConsumer
  accept(Ljava/lang/Object;Ljava/lang/Boolean;)V = Accept(Java.Lang.Object, Java.Lang.Boolean)
net/optifine/config/ObjBooleanConsumer = Net.Optifine.Config.IObjBooleanConsumer
  accept(Ljava/lang/Object;Ljava/lang/Boolean;)V = Accept(Java.Lang.Object, Java.Lang.Boolean)
net/optifine/config/Option = Net.Optifine.Config.Option
  <init>()V = .ctor()
  ANIM_GENERATED = AnimGenerated
  ANIM_OFF = AnimOff
  ANIM_ON = AnimOn
  COMPACT = Compact
  COMPACT_FULL_DETAILED = CompactFullDetailed
  DEFAULT = Default
  DETAILED = Detailed
  FANCY = Fancy
  FAST = Fast
  FULL = Full
  OFF = Off
  OFF_COMPACT_FULL = OffCompactFull
  SMART = Smart
  isCompact(I)Z = IsCompact(int)
  isDefault(I)Z = IsDefault(int)
  isDetailed(I)Z = IsDetailed(int)
  isFancy(I)Z = IsFancy(int)
  isFast(I)Z = IsFast(int)
  isFull(I)Z = IsFull(int)
  isOff(I)Z = IsOff(int)
  isSmart(I)Z = IsSmart(int)
net/optifine/config/Option = Net.Optifine.Config.Option
  <init>()V = .ctor()
  ANIM_GENERATED = AnimGenerated
  ANIM_OFF = AnimOff
  ANIM_ON = AnimOn
  COMPACT = Compact
  COMPACT_FULL_DETAILED = CompactFullDetailed
  DEFAULT = Default
  DETAILED = Detailed
  FANCY = Fancy
  FAST = Fast
  FULL = Full
  OFF = Off
  OFF_COMPACT_FULL = OffCompactFull
  SMART = Smart
  isCompact(I)Z = IsCompact(int)
  isDefault(I)Z = IsDefault(int)
  isDetailed(I)Z = IsDetailed(int)
  isFancy(I)Z = IsFancy(int)
  isFast(I)Z = IsFast(int)
  isFull(I)Z = IsFull(int)
  isOff(I)Z = IsOff(int)
  isSmart(I)Z = IsSmart(int)
net/optifine/config/OptionValueInt = Net.Optifine.Config.OptionValueInt
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  isCompact()Z = IsCompact
  isFull()Z = IsFull
  isOff()Z = IsOff
  getResourceKey()Ljava/lang/String; = ResourceKey
  getValue()I = Value
  toString()Ljava/lang/String; = ToString()
net/optifine/config/OptionValueInt = Net.Optifine.Config.OptionValueInt
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  isCompact()Z = IsCompact
  isFull()Z = IsFull
  isOff()Z = IsOff
  getResourceKey()Ljava/lang/String; = ResourceKey
  getValue()I = Value
net/optifine/config/ParserEnchantmentId = Net.Optifine.Config.ParserEnchantmentId
  <init>()V = .ctor()
  parse(Ljava/lang/String;I)I = Parse(string, int)
net/optifine/config/ParserEnchantmentId = Net.Optifine.Config.ParserEnchantmentId
  <init>()V = .ctor()
  parse(Ljava/lang/String;I)I = Parse(string, int)
net/optifine/config/RangeInt = Net.Optifine.Config.RangeInt
  <init>(II)V = .ctor(int, int)
  getMax()I = Max
  getMin()I = Min
  isInRange(I)Z = IsInRange(int)
  toString()Ljava/lang/String; = ToString()
net/optifine/config/RangeInt = Net.Optifine.Config.RangeInt
  <init>(II)V = .ctor(int, int)
  getMax()I = Max
  getMin()I = Min
  isInRange(I)Z = IsInRange(int)
net/optifine/config/RangeListInt = Net.Optifine.Config.RangeListInt
  <init>()V = .ctor()
  <init>(Lnet/optifine/config/RangeInt;)V = .ctor(Net.Optifine.Config.RangeInt)
  getCountRanges()I = CountRanges
  addRange(Lnet/optifine/config/RangeInt;)V = AddRange(Net.Optifine.Config.RangeInt)
  getRange(I)Lnet/optifine/config/RangeInt; = GetRange(int)
  isInRange(I)Z = IsInRange(int)
  toString()Ljava/lang/String; = ToString()
net/optifine/config/RangeListInt = Net.Optifine.Config.RangeListInt
  <init>()V = .ctor()
  <init>(Lnet/optifine/config/RangeInt;)V = .ctor(Net.Optifine.Config.RangeInt)
  getCountRanges()I = CountRanges
  addRange(Lnet/optifine/config/RangeInt;)V = AddRange(Net.Optifine.Config.RangeInt)
  getRange(I)Lnet/optifine/config/RangeInt; = GetRange(int)
  isInRange(I)Z = IsInRange(int)
net/optifine/config/ToBooleanFunction = Net.Optifine.Config.IToBooleanFunction
  applyAsBool(Ljava/lang/Object;)Z = ApplyAsBool(Java.Lang.Object)
net/optifine/config/ToBooleanFunction = Net.Optifine.Config.IToBooleanFunction
  applyAsBool(Ljava/lang/Object;)Z = ApplyAsBool(Java.Lang.Object)
net/optifine/config/Weather = Net.Optifine.Config.Weather
  CLEAR = Clear
  RAIN = Rain
  THUNDER = Thunder
  valueOf(Ljava/lang/String;)Lnet/optifine/config/Weather; = ValueOf(string)
  values()[Lnet/optifine/config/Weather; = Values()
net/optifine/config/Weather = Net.Optifine.Config.Weather
  CLEAR = Clear
  RAIN = Rain
  THUNDER = Thunder
  valueOf(Ljava/lang/String;)Lnet/optifine/config/Weather; = ValueOf(string)
  values()[Lnet/optifine/config/Weather; = Values()
net/optifine/ConnectedProperties = Net.Optifine.ConnectedProperties
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  basePath = BasePath
  biomes = Biomes
  connect = Connect
  CONNECT_BLOCK = ConnectBlock
  connectBlocks = ConnectBlocks
  CONNECT_NONE = ConnectNone
  CONNECT_STATE = ConnectState
  CONNECT_TILE = ConnectTile
  connectTiles = ConnectTiles
  CONNECT_UNKNOWN = ConnectUnknown
  ctmTileIndexes = CtmTileIndexes
  FACE_ALL = FaceAll
  FACE_BOTTOM = FaceBottom
  FACE_EAST = FaceEast
  FACE_NORTH = FaceNorth
  faces = Faces
  FACE_SIDES = FaceSides
  FACE_SOUTH = FaceSouth
  FACE_TOP = FaceTop
  FACE_UNKNOWN = FaceUnknown
  FACE_WEST = FaceWest
  height = Height
  heights = Heights
  innerSeams = InnerSeams
  linked = Linked
  matchBlocks = MatchBlocks
  matchTiles = MatchTiles
  metadatas = Metadatas
  method = Method
  METHOD_CTM = MethodCtm
  METHOD_CTM_COMPACT = MethodCtmCompact
  METHOD_FIXED = MethodFixed
  METHOD_HORIZONTAL = MethodHorizontal
  METHOD_HORIZONTAL_VERTICAL = MethodHorizontalVertical
  METHOD_NONE = MethodNone
  METHOD_OVERLAY = MethodOverlay
  METHOD_OVERLAY_CTM = MethodOverlayCtm
  METHOD_OVERLAY_FIXED = MethodOverlayFixed
  METHOD_OVERLAY_RANDOM = MethodOverlayRandom
  METHOD_OVERLAY_REPEAT = MethodOverlayRepeat
  METHOD_RANDOM = MethodRandom
  METHOD_REPEAT = MethodRepeat
  METHOD_TOP = MethodTop
  METHOD_VERTICAL = MethodVertical
  METHOD_VERTICAL_HORIZONTAL = MethodVerticalHorizontal
  name = Name
  nbtName = NbtName
  randomLoops = RandomLoops
  renderPass = RenderPass
  sumAllWeights = SumAllWeights
  sumWeights = SumWeights
  symmetry = Symmetry
  SYMMETRY_ALL = SymmetryAll
  SYMMETRY_NONE = SymmetryNone
  SYMMETRY_OPPOSITE = SymmetryOpposite
  SYMMETRY_UNKNOWN = SymmetryUnknown
  TILE_DEFAULT_PNG = TileDefaultPng
  tiles = Tiles
  TILE_SKIP_PNG = TileSkipPng
  tintIndex = TintIndex
  weights = Weights
  width = Width
  isValid(Ljava/lang/String;)Z = IsValid(string)
  matchesBlock(II)Z = MatchesBlock(int, int)
  matchesBlockId(I)Z = MatchesBlockId(int)
  toString()Ljava/lang/String; = ToString()
net/optifine/ConnectedProperties = Net.Optifine.ConnectedProperties
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  basePath = BasePath
  biomes = Biomes
  connect = Connect
  CONNECT_BLOCK = ConnectBlock
  connectBlocks = ConnectBlocks
  CONNECT_NONE = ConnectNone
  CONNECT_STATE = ConnectState
  CONNECT_TILE = ConnectTile
  connectTiles = ConnectTiles
  CONNECT_UNKNOWN = ConnectUnknown
  ctmTileIndexes = CtmTileIndexes
  FACE_ALL = FaceAll
  FACE_BOTTOM = FaceBottom
  FACE_EAST = FaceEast
  FACE_NORTH = FaceNorth
  faces = Faces
  FACE_SIDES = FaceSides
  FACE_SOUTH = FaceSouth
  FACE_TOP = FaceTop
  FACE_UNKNOWN = FaceUnknown
  FACE_WEST = FaceWest
  height = Height
  heights = Heights
  innerSeams = InnerSeams
  linked = Linked
  matchBlocks = MatchBlocks
  matchTiles = MatchTiles
  metadatas = Metadatas
  method = Method
  METHOD_CTM = MethodCtm
  METHOD_CTM_COMPACT = MethodCtmCompact
  METHOD_FIXED = MethodFixed
  METHOD_HORIZONTAL = MethodHorizontal
  METHOD_HORIZONTAL_VERTICAL = MethodHorizontalVertical
  METHOD_NONE = MethodNone
  METHOD_OVERLAY = MethodOverlay
  METHOD_OVERLAY_CTM = MethodOverlayCtm
  METHOD_OVERLAY_FIXED = MethodOverlayFixed
  METHOD_OVERLAY_RANDOM = MethodOverlayRandom
  METHOD_OVERLAY_REPEAT = MethodOverlayRepeat
  METHOD_RANDOM = MethodRandom
  METHOD_REPEAT = MethodRepeat
  METHOD_TOP = MethodTop
  METHOD_VERTICAL = MethodVertical
  METHOD_VERTICAL_HORIZONTAL = MethodVerticalHorizontal
  name = Name
  nbtName = NbtName
  randomLoops = RandomLoops
  renderPass = RenderPass
  sumAllWeights = SumAllWeights
  sumWeights = SumWeights
  symmetry = Symmetry
  SYMMETRY_ALL = SymmetryAll
  SYMMETRY_NONE = SymmetryNone
  SYMMETRY_OPPOSITE = SymmetryOpposite
  SYMMETRY_UNKNOWN = SymmetryUnknown
  TILE_DEFAULT_PNG = TileDefaultPng
  tiles = Tiles
  TILE_SKIP_PNG = TileSkipPng
  tintIndex = TintIndex
  weights = Weights
  width = Width
  isValid(Ljava/lang/String;)Z = IsValid(string)
  matchesBlock(II)Z = MatchesBlock(int, int)
  matchesBlockId(I)Z = MatchesBlockId(int)
net/optifine/ConnectedTextures = Net.Optifine.ConnectedTextures
  <init>()V = .ctor()
  UNKNOWN = Unknown
  X_NEG_WEST = XNegWest
  X_POS_EAST = XPosEast
  Y_NEG_DOWN = YNegDown
  Y_POS_UP = YPosUp
  Z_NEG_NORTH = ZNegNorth
  Z_POS_SOUTH = ZPosSouth
  getSpriteQuadCompactMaps()[[Ljava/util/Map; = GetSpriteQuadCompactMaps()
net/optifine/ConnectedTextures = Net.Optifine.ConnectedTextures
  <init>()V = .ctor()
  UNKNOWN = Unknown
  X_NEG_WEST = XNegWest
  X_POS_EAST = XPosEast
  Y_NEG_DOWN = YNegDown
  Y_POS_UP = YPosUp
  Z_NEG_NORTH = ZNegNorth
  Z_POS_SOUTH = ZPosSouth
  getSpriteQuadCompactMaps()[[Ljava/util/Map; = GetSpriteQuadCompactMaps()
net/optifine/ConnectedTexturesCompact = Net.Optifine.ConnectedTexturesCompact
  <init>()V = .ctor()
net/optifine/ConnectedTexturesCompact = Net.Optifine.ConnectedTexturesCompact
  <init>()V = .ctor()
net/optifine/CrashReporter = Net.Optifine.CrashReporter
  <init>()V = .ctor()
net/optifine/CrashReporter = Net.Optifine.CrashReporter
  <init>()V = .ctor()
net/optifine/CustomBlockLayers = Net.Optifine.CustomBlockLayers
  <init>()V = .ctor()
  active = Active
  isActive()Z = IsActive
  update()V = Update()
net/optifine/CustomBlockLayers = Net.Optifine.CustomBlockLayers
  <init>()V = .ctor()
  active = Active
  isActive()Z = IsActive
  update()V = Update()
net/optifine/CustomColorFader = Net.Optifine.CustomColorFader
  <init>()V = .ctor()
net/optifine/CustomColorFader = Net.Optifine.CustomColorFader
  <init>()V = .ctor()
net/optifine/CustomColormap = Net.Optifine.CustomColormap
  <init>(Ljava/util/Properties;Ljava/lang/String;IILjava/lang/String;)V = .ctor(Java.Util.Properties, string, int, int, string)
  basePath = BasePath
  FORMAT_FIXED_STRING = FormatFixedString
  FORMAT_GRID_STRING = FormatGridString
  FORMAT_STRINGS = FormatStrings
  FORMAT_VANILLA_STRING = FormatVanillaString
  KEY_BLOCKS = KeyBlocks
  KEY_COLOR = KeyColor
  KEY_FORMAT = KeyFormat
  KEY_SOURCE = KeySource
  KEY_Y_OFFSET = KeyYOffset
  KEY_Y_VARIANCE = KeyYVariance
  name = Name
  getColorRandom()I = ColorRandom
  getHeight()I = Height
  isColorConstant()Z = IsColorConstant
  getLength()I = Length
  getWidth()I = Width
  addMatchBlock(II)V = AddMatchBlock(int, int)
  addMatchBlock(Lnet/optifine/config/MatchBlock;)V = AddMatchBlock(Net.Optifine.Config.MatchBlock)
  getColor(I)I = GetColor(int)
  getColor(II)I = GetColor(int, int)
  getColorsRgb()[[F = GetColorsRgb()
  getMatchBlockIds()[I = GetMatchBlockIds()
  isValid(Ljava/lang/String;)Z = IsValid(string)
  isValidMatchBlocks(Ljava/lang/String;)Z = IsValidMatchBlocks(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/CustomColormap = Net.Optifine.CustomColormap
  <init>(Ljava/util/Properties;Ljava/lang/String;IILjava/lang/String;)V = .ctor(Java.Util.Properties, string, int, int, string)
  basePath = BasePath
  FORMAT_FIXED_STRING = FormatFixedString
  FORMAT_GRID_STRING = FormatGridString
  FORMAT_STRINGS = FormatStrings
  FORMAT_VANILLA_STRING = FormatVanillaString
  KEY_BLOCKS = KeyBlocks
  KEY_COLOR = KeyColor
  KEY_FORMAT = KeyFormat
  KEY_SOURCE = KeySource
  KEY_Y_OFFSET = KeyYOffset
  KEY_Y_VARIANCE = KeyYVariance
  name = Name
  getColorRandom()I = ColorRandom
  getHeight()I = Height
  isColorConstant()Z = IsColorConstant
  getLength()I = Length
  getWidth()I = Width
  addMatchBlock(II)V = AddMatchBlock(int, int)
  addMatchBlock(Lnet/optifine/config/MatchBlock;)V = AddMatchBlock(Net.Optifine.Config.MatchBlock)
  getColor(I)I = GetColor(int)
  getColor(II)I = GetColor(int, int)
  getColorsRgb()[[F = GetColorsRgb()
  getMatchBlockIds()[I = GetMatchBlockIds()
  isValid(Ljava/lang/String;)Z = IsValid(string)
  isValidMatchBlocks(Ljava/lang/String;)Z = IsValidMatchBlocks(string)
net/optifine/CustomColors = Net.Optifine.CustomColors
  <init>()V = .ctor()
  random = Random
  getBossTextColor(I)I = GetBossTextColor(int)
  getCustomColors(Ljava/lang/String;II)Lnet/optifine/CustomColormap; = GetCustomColors(string, int, int)
  getDurabilityColor(FI)I = GetDurabilityColor(float, int)
  getExpBarTextColor(I)I = GetExpBarTextColor(int)
  getPotionColor(II)I = GetPotionColor(int, int)
  getSignTextColor(I)I = GetSignTextColor(int)
  getTextColor(II)I = GetTextColor(int, int)
  getXpOrbColor(F)I = GetXpOrbColor(float)
  getXpOrbTimer(F)F = GetXpOrbTimer(float)
  update()V = Update()
  updateUseDefaultGrassFoliageColors()V = UpdateUseDefaultGrassFoliageColors()
net/optifine/CustomColors = Net.Optifine.CustomColors
  <init>()V = .ctor()
  random = Random
  getBossTextColor(I)I = GetBossTextColor(int)
  getCustomColors(Ljava/lang/String;II)Lnet/optifine/CustomColormap; = GetCustomColors(string, int, int)
  getDurabilityColor(FI)I = GetDurabilityColor(float, int)
  getExpBarTextColor(I)I = GetExpBarTextColor(int)
  getPotionColor(II)I = GetPotionColor(int, int)
  getSignTextColor(I)I = GetSignTextColor(int)
  getTextColor(II)I = GetTextColor(int, int)
  getXpOrbColor(F)I = GetXpOrbColor(float)
  getXpOrbTimer(F)F = GetXpOrbTimer(float)
  update()V = Update()
  updateUseDefaultGrassFoliageColors()V = UpdateUseDefaultGrassFoliageColors()
net/optifine/CustomGuiProperties = Net.Optifine.CustomGuiProperties
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  getContainer()Lnet/optifine/CustomGuiProperties$EnumContainer; = Container
  isValid(Ljava/lang/String;)Z = IsValid(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/CustomGuiProperties = Net.Optifine.CustomGuiProperties
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  getContainer()Lnet/optifine/CustomGuiProperties$EnumContainer; = Container
  isValid(Ljava/lang/String;)Z = IsValid(string)
net/optifine/CustomGuis = Net.Optifine.CustomGuis
  <init>()V = .ctor()
  isChristmas = IsChristmas
  update()V = Update()
net/optifine/CustomGuis = Net.Optifine.CustomGuis
  <init>()V = .ctor()
  isChristmas = IsChristmas
  update()V = Update()
net/optifine/CustomItemProperties = Net.Optifine.CustomItemProperties
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  basePath = BasePath
  blend = Blend
  damage = Damage
  damageMask = DamageMask
  damagePercent = DamagePercent
  duration = Duration
  enchantmentIds = EnchantmentIds
  enchantmentLevels = EnchantmentLevels
  hand = Hand
  HAND_ANY = HandAny
  HAND_MAIN = HandMain
  HAND_OFF = HandOff
  INVENTORY = Inventory
  items = Items
  layer = Layer
  mapBakedModelsFull = MapBakedModelsFull
  mapBakedModelsTexture = MapBakedModelsTexture
  mapModels = MapModels
  mapSprites = MapSprites
  mapTextureLocations = MapTextureLocations
  mapTextures = MapTextures
  model = Model
  modelSpriteLocations = ModelSpriteLocations
  name = Name
  nbtTagValues = NbtTagValues
  rotation = Rotation
  speed = Speed
  stackSize = StackSize
  texture = Texture
  type = Type
  TYPE_ARMOR = TypeArmor
  TYPE_ELYTRA = TypeElytra
  TYPE_ENCHANTMENT = TypeEnchantment
  TYPE_ITEM = TypeItem
  TYPE_UNKNOWN = TypeUnknown
  weight = Weight
  isValid(Ljava/lang/String;)Z = IsValid(string)
  toString()Ljava/lang/String; = ToString()
  updateModelsFull()V = UpdateModelsFull()
net/optifine/CustomItemProperties = Net.Optifine.CustomItemProperties
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  basePath = BasePath
  blend = Blend
  damage = Damage
  damageMask = DamageMask
  damagePercent = DamagePercent
  duration = Duration
  enchantmentIds = EnchantmentIds
  enchantmentLevels = EnchantmentLevels
  hand = Hand
  HAND_ANY = HandAny
  HAND_MAIN = HandMain
  HAND_OFF = HandOff
  INVENTORY = Inventory
  items = Items
  layer = Layer
  mapModels = MapModels
  mapSprites = MapSprites
  mapTextureLocations = MapTextureLocations
  mapTextures = MapTextures
  model = Model
  name = Name
  nbtTagValues = NbtTagValues
  rotation = Rotation
  speed = Speed
  stackSize = StackSize
  texture = Texture
  type = Type
  TYPE_ARMOR = TypeArmor
  TYPE_ELYTRA = TypeElytra
  TYPE_ENCHANTMENT = TypeEnchantment
  TYPE_ITEM = TypeItem
  TYPE_UNKNOWN = TypeUnknown
  weight = Weight
  isValid(Ljava/lang/String;)Z = IsValid(string)
  updateModelsFull()V = UpdateModelsFull()
net/optifine/CustomItems = Net.Optifine.CustomItems
  <init>()V = .ctor()
  DEFAULT_TEXTURE_DRINKABLE = DefaultTextureDrinkable
  DEFAULT_TEXTURE_OVERLAY = DefaultTextureOverlay
  DEFAULT_TEXTURE_SPLASH = DefaultTextureSplash
  KEY_TEXTURE_DRINKABLE = KeyTextureDrinkable
  KEY_TEXTURE_OVERLAY = KeyTextureOverlay
  KEY_TEXTURE_SPLASH = KeyTextureSplash
  MASK_POTION_EXTENDED = MaskPotionExtended
  MASK_POTION_NAME = MaskPotionName
  MASK_POTION_SPLASH = MaskPotionSplash
  isUseGlint()Z = IsUseGlint
  setRenderOffHand(Z)V = SetRenderOffHand(bool)
  update()V = Update()
  updateModels()V = UpdateModels()
net/optifine/CustomItems = Net.Optifine.CustomItems
  <init>()V = .ctor()
  DEFAULT_TEXTURE_DRINKABLE = DefaultTextureDrinkable
  DEFAULT_TEXTURE_OVERLAY = DefaultTextureOverlay
  DEFAULT_TEXTURE_SPLASH = DefaultTextureSplash
  KEY_TEXTURE_DRINKABLE = KeyTextureDrinkable
  KEY_TEXTURE_OVERLAY = KeyTextureOverlay
  KEY_TEXTURE_SPLASH = KeyTextureSplash
  MASK_POTION_EXTENDED = MaskPotionExtended
  MASK_POTION_NAME = MaskPotionName
  MASK_POTION_SPLASH = MaskPotionSplash
  isUseGlint()Z = IsUseGlint
  setRenderOffHand(Z)V = SetRenderOffHand(bool)
  update()V = Update()
  updateModels()V = UpdateModels()
net/optifine/CustomItemsComparator = Net.Optifine.CustomItemsComparator
  <init>()V = .ctor()
  compare(Ljava/lang/Object;Ljava/lang/Object;)I = Compare(Java.Lang.Object, Java.Lang.Object)
net/optifine/CustomItemsComparator = Net.Optifine.CustomItemsComparator
  <init>()V = .ctor()
  compare(Ljava/lang/Object;Ljava/lang/Object;)I = Compare(Java.Lang.Object, Java.Lang.Object)
net/optifine/CustomLoadingScreen = Net.Optifine.CustomLoadingScreen
  drawBackground(II)V = DrawBackground(int, int)
  parseScreen(Ljava/lang/String;ILjava/util/Properties;)Lnet/optifine/CustomLoadingScreen; = ParseScreen(string, int, Java.Util.Properties)
net/optifine/CustomLoadingScreen = Net.Optifine.CustomLoadingScreen
  drawBackground(II)V = DrawBackground(int, int)
  parseScreen(Ljava/lang/String;ILjava/util/Properties;)Lnet/optifine/CustomLoadingScreen; = ParseScreen(string, int, Java.Util.Properties)
net/optifine/CustomLoadingScreens = Net.Optifine.CustomLoadingScreens
  <init>()V = .ctor()
  getCustomLoadingScreen()Lnet/optifine/CustomLoadingScreen; = CustomLoadingScreen
  dbg(Ljava/lang/String;)V = Dbg(string)
  update()V = Update()
  warn(Ljava/lang/String;)V = Warn(string)
net/optifine/CustomLoadingScreens = Net.Optifine.CustomLoadingScreens
  <init>()V = .ctor()
  getCustomLoadingScreen()Lnet/optifine/CustomLoadingScreen; = CustomLoadingScreen
  dbg(Ljava/lang/String;)V = Dbg(string)
  update()V = Update()
  warn(Ljava/lang/String;)V = Warn(string)
net/optifine/CustomPanorama = Net.Optifine.CustomPanorama
  <init>()V = .ctor()
  getCustomPanoramaProperties()Lnet/optifine/CustomPanoramaProperties; = CustomPanoramaProperties
  update()V = Update()
net/optifine/CustomPanorama = Net.Optifine.CustomPanorama
  <init>()V = .ctor()
  getCustomPanoramaProperties()Lnet/optifine/CustomPanoramaProperties; = CustomPanoramaProperties
  update()V = Update()
net/optifine/CustomPanoramaProperties = Net.Optifine.CustomPanoramaProperties
  <init>(Ljava/lang/String;Ljava/util/Properties;)V = .ctor(string, Java.Util.Properties)
  getBlur1()I = Blur1
  getBlur2()I = Blur2
  getBlur3()I = Blur3
  getOverlay1Bottom()I = Overlay1Bottom
  getOverlay1Top()I = Overlay1Top
  getOverlay2Bottom()I = Overlay2Bottom
  getOverlay2Top()I = Overlay2Top
  getWeight()I = Weight
  toString()Ljava/lang/String; = ToString()
net/optifine/CustomPanoramaProperties = Net.Optifine.CustomPanoramaProperties
  <init>(Ljava/lang/String;Ljava/util/Properties;)V = .ctor(string, Java.Util.Properties)
  getBlur1()I = Blur1
  getBlur2()I = Blur2
  getBlur3()I = Blur3
  getOverlay1Bottom()I = Overlay1Bottom
  getOverlay1Top()I = Overlay1Top
  getOverlay2Bottom()I = Overlay2Bottom
  getOverlay2Top()I = Overlay2Top
  getWeight()I = Weight
net/optifine/CustomSky = Net.Optifine.CustomSky
  <init>()V = .ctor()
  reset()V = Reset()
  update()V = Update()
net/optifine/CustomSky = Net.Optifine.CustomSky
  <init>()V = .ctor()
  reset()V = Reset()
  update()V = Update()
net/optifine/CustomSkyLayer = Net.Optifine.CustomSkyLayer
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  biomes = Biomes
  DEFAULT_AXIS = DefaultAxis
  heights = Heights
  source = Source
  textureId = TextureId
  isValid(Ljava/lang/String;)Z = IsValid(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/CustomSkyLayer = Net.Optifine.CustomSkyLayer
  <init>(Ljava/util/Properties;Ljava/lang/String;)V = .ctor(Java.Util.Properties, string)
  biomes = Biomes
  DEFAULT_AXIS = DefaultAxis
  heights = Heights
  source = Source
  textureId = TextureId
  isValid(Ljava/lang/String;)Z = IsValid(string)
net/optifine/DynamicLight = Net.Optifine.DynamicLight
  getLastLightLevel()I = LastLightLevel
  getLastPosX()D = LastPosX
  getLastPosY()D = LastPosY
  getLastPosZ()D = LastPosZ
  getOffsetY()D = OffsetY
  toString()Ljava/lang/String; = ToString()
net/optifine/DynamicLight = Net.Optifine.DynamicLight
  getLastLightLevel()I = LastLightLevel
  getLastPosX()D = LastPosX
  getLastPosY()D = LastPosY
  getLastPosZ()D = LastPosZ
  getOffsetY()D = OffsetY
net/optifine/DynamicLights = Net.Optifine.DynamicLights
  <init>()V = .ctor()
  getCount()I = Count
  clear()V = Clear()
  getCombinedLight(DI)I = GetCombinedLight(double, int)
net/optifine/DynamicLights = Net.Optifine.DynamicLights
  <init>()V = .ctor()
  getCount()I = Count
  clear()V = Clear()
  getCombinedLight(DI)I = GetCombinedLight(double, int)
net/optifine/DynamicLightsMap = Net.Optifine.DynamicLightsMap
  <init>()V = .ctor()
  clear()V = Clear()
  get(I)Lnet/optifine/DynamicLight; = Get(int)
  put(ILnet/optifine/DynamicLight;)Lnet/optifine/DynamicLight; = Put(int, Net.Optifine.DynamicLight)
  remove(I)Lnet/optifine/DynamicLight; = Remove(int)
  size()I = Size()
  valueList()Ljava/util/List; = ValueList()
net/optifine/DynamicLightsMap = Net.Optifine.DynamicLightsMap
  <init>()V = .ctor()
  clear()V = Clear()
  get(I)Lnet/optifine/DynamicLight; = Get(int)
  put(ILnet/optifine/DynamicLight;)Lnet/optifine/DynamicLight; = Put(int, Net.Optifine.DynamicLight)
  remove(I)Lnet/optifine/DynamicLight; = Remove(int)
  size()I = Size()
  valueList()Ljava/util/List; = ValueList()
net/optifine/EmissiveTextures = Net.Optifine.EmissiveTextures
  <init>()V = .ctor()
  hasEmissive()Z = HasEmissive
  isActive()Z = IsActive
  isRenderEmissive()Z = IsRenderEmissive
  getSuffixEmissive()Ljava/lang/String; = SuffixEmissive
  beginRender()V = BeginRender()
  beginRenderEmissive()V = BeginRenderEmissive()
  endRender()V = EndRender()
  endRenderEmissive()V = EndRenderEmissive()
  update()V = Update()
net/optifine/EmissiveTextures = Net.Optifine.EmissiveTextures
  <init>()V = .ctor()
  hasEmissive()Z = HasEmissive
  isActive()Z = IsActive
  isRenderEmissive()Z = IsRenderEmissive
  getSuffixEmissive()Ljava/lang/String; = SuffixEmissive
  beginRender()V = BeginRender()
  beginRenderEmissive()V = BeginRenderEmissive()
  endRender()V = EndRender()
  endRenderEmissive()V = EndRenderEmissive()
  update()V = Update()
net/optifine/entity/model/anim/EntityVariableBool = Net.Optifine.Entity.Model.Anim.EntityVariableBool
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()Z = Value
  setValue(Z)V = Value
  eval()Z = Eval()
net/optifine/entity/model/anim/EntityVariableBool = Net.Optifine.Entity.Model.Anim.EntityVariableBool
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()Z = Value
  setValue(Z)V = Value
  eval()Z = Eval()
net/optifine/entity/model/anim/EntityVariableFloat = Net.Optifine.Entity.Model.Anim.EntityVariableFloat
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()F = Value
  setValue(F)V = Value
  eval()F = Eval()
  getEntityValue(Ljava/lang/String;)F = GetEntityValue(string)
  setEntityValue(Ljava/lang/String;F)V = SetEntityValue(string, float)
net/optifine/entity/model/anim/EntityVariableFloat = Net.Optifine.Entity.Model.Anim.EntityVariableFloat
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()F = Value
  setValue(F)V = Value
  eval()F = Eval()
  getEntityValue(Ljava/lang/String;)F = GetEntityValue(string)
  setEntityValue(Ljava/lang/String;F)V = SetEntityValue(string, float)
net/optifine/entity/model/anim/IModelRendererVariable = Net.Optifine.Entity.Model.Anim.IModelRendererVariable
net/optifine/entity/model/anim/IModelResolver = Net.Optifine.Entity.Model.Anim.IModelResolver
  getModelVariable(Ljava/lang/String;)Lnet/optifine/entity/model/anim/IModelVariable; = GetModelVariable(string)
net/optifine/entity/model/anim/IModelVariable = Net.Optifine.Entity.Model.Anim.IModelVariable
  setValue(Lnet/optifine/expr/IExpression;)V = SetValue(Net.Optifine.Expr.IExpression)
net/optifine/entity/model/anim/IModelVariable = Net.Optifine.Entity.Model.Anim.IModelVariable
  setValue(Lnet/optifine/expr/IExpression;)V = SetValue(Net.Optifine.Expr.IExpression)
net/optifine/entity/model/anim/IModelVariableBool = Net.Optifine.Entity.Model.Anim.IModelVariableBool
  getValue()Z = Value
  setValue(Z)V = Value
  setValue(Lnet/optifine/expr/IExpression;)V = SetValue(Net.Optifine.Expr.IExpression)
net/optifine/entity/model/anim/IModelVariableBool = Net.Optifine.Entity.Model.Anim.IModelVariableBool
  getValue()Z = Value
  setValue(Z)V = Value
  setValue(Lnet/optifine/expr/IExpression;)V = SetValue(Net.Optifine.Expr.IExpression)
net/optifine/entity/model/anim/IModelVariableFloat = Net.Optifine.Entity.Model.Anim.IModelVariableFloat
  getValue()F = Value
  setValue(F)V = Value
  setValue(Lnet/optifine/expr/IExpression;)V = SetValue(Net.Optifine.Expr.IExpression)
net/optifine/entity/model/anim/IModelVariableFloat = Net.Optifine.Entity.Model.Anim.IModelVariableFloat
  getValue()F = Value
  setValue(F)V = Value
  setValue(Lnet/optifine/expr/IExpression;)V = SetValue(Net.Optifine.Expr.IExpression)
net/optifine/entity/model/anim/IRenderResolver = Net.Optifine.Entity.Model.Anim.IRenderResolver
  isTileEntity()Z = IsTileEntity
  getParameter(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetParameter(string)
net/optifine/entity/model/anim/IRenderResolver = Net.Optifine.Entity.Model.Anim.IRenderResolver
  isTileEntity()Z = IsTileEntity
  getParameter(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetParameter(string)
net/optifine/entity/model/anim/ModelResolver = Net.Optifine.Entity.Model.Anim.ModelResolver
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
  getModelVariable(Ljava/lang/String;)Lnet/optifine/entity/model/anim/IModelVariable; = GetModelVariable(string)
net/optifine/entity/model/anim/ModelResolver = Net.Optifine.Entity.Model.Anim.ModelResolver
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
  getModelVariable(Ljava/lang/String;)Lnet/optifine/entity/model/anim/IModelVariable; = GetModelVariable(string)
net/optifine/entity/model/anim/ModelUpdater = Net.Optifine.Entity.Model.Anim.ModelUpdater
  <init>([Lnet/optifine/entity/model/anim/ModelVariableUpdater;)V = .ctor(Net.Optifine.Entity.Model.Anim.ModelVariableUpdater[])
  getModelVariableUpdaters()[Lnet/optifine/entity/model/anim/ModelVariableUpdater; = GetModelVariableUpdaters()
  initialize(Lnet/optifine/entity/model/anim/IModelResolver;)Z = Initialize(Net.Optifine.Entity.Model.Anim.IModelResolver)
  update()V = Update()
net/optifine/entity/model/anim/ModelUpdater = Net.Optifine.Entity.Model.Anim.ModelUpdater
  <init>([Lnet/optifine/entity/model/anim/ModelVariableUpdater;)V = .ctor(Net.Optifine.Entity.Model.Anim.ModelVariableUpdater[])
  getModelVariableUpdaters()[Lnet/optifine/entity/model/anim/ModelVariableUpdater; = GetModelVariableUpdaters()
  initialize(Lnet/optifine/entity/model/anim/IModelResolver;)Z = Initialize(Net.Optifine.Entity.Model.Anim.IModelResolver)
  update()V = Update()
net/optifine/entity/model/anim/ModelVariableBool = Net.Optifine.Entity.Model.Anim.ModelVariableBool
  getValue()Z = Value
  setValue(Z)V = Value
  eval()Z = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/entity/model/anim/ModelVariableBool = Net.Optifine.Entity.Model.Anim.ModelVariableBool
  getValue()Z = Value
  setValue(Z)V = Value
  eval()Z = Eval()
net/optifine/entity/model/anim/ModelVariableFloat = Net.Optifine.Entity.Model.Anim.ModelVariableFloat
  getValue()F = Value
  setValue(F)V = Value
  eval()F = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/entity/model/anim/ModelVariableFloat = Net.Optifine.Entity.Model.Anim.ModelVariableFloat
  getValue()F = Value
  setValue(F)V = Value
  eval()F = Eval()
net/optifine/entity/model/anim/ModelVariableType = Net.Optifine.Entity.Model.Anim.ModelVariableType
  ANGLE_X = AngleX
  ANGLE_Y = AngleY
  ANGLE_Z = AngleZ
  POS_X = PosX
  POS_Y = PosY
  POS_Z = PosZ
  SCALE_X = ScaleX
  SCALE_Y = ScaleY
  SCALE_Z = ScaleZ
  VALUES = Values
  VISIBLE = Visible
  VISIBLE_BOXES = VisibleBoxes
  getName()Ljava/lang/String; = Name
  getType()Lnet/optifine/expr/ExpressionType; = Type
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/ModelVariableType; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/ModelVariableType; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/ModelVariableType; = Values()
net/optifine/entity/model/anim/ModelVariableType = Net.Optifine.Entity.Model.Anim.ModelVariableType
  ANGLE_X = AngleX
  ANGLE_Y = AngleY
  ANGLE_Z = AngleZ
  POS_X = PosX
  POS_Y = PosY
  POS_Z = PosZ
  SCALE_X = ScaleX
  SCALE_Y = ScaleY
  SCALE_Z = ScaleZ
  VALUES = Values
  VISIBLE = Visible
  VISIBLE_BOXES = VisibleBoxes
  getName()Ljava/lang/String; = Name
  getType()Lnet/optifine/expr/ExpressionType; = Type
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/ModelVariableType; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/ModelVariableType; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/ModelVariableType; = Values()
net/optifine/entity/model/anim/ModelVariableUpdater = Net.Optifine.Entity.Model.Anim.ModelVariableUpdater
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getModelVariable()Lnet/optifine/entity/model/anim/IModelVariable; = ModelVariable
  initialize(Lnet/optifine/entity/model/anim/IModelResolver;)Z = Initialize(Net.Optifine.Entity.Model.Anim.IModelResolver)
  toString()Ljava/lang/String; = ToString()
  update()V = Update()
net/optifine/entity/model/anim/ModelVariableUpdater = Net.Optifine.Entity.Model.Anim.ModelVariableUpdater
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getModelVariable()Lnet/optifine/entity/model/anim/IModelVariable; = ModelVariable
  initialize(Lnet/optifine/entity/model/anim/IModelResolver;)Z = Initialize(Net.Optifine.Entity.Model.Anim.IModelResolver)
  update()V = Update()
net/optifine/entity/model/anim/RenderEntityParameterBool = Net.Optifine.Entity.Model.Anim.RenderEntityParameterBool
  IS_AGGRESSIVE = IsAggressive
  IS_ALIVE = IsAlive
  IS_BURNING = IsBurning
  IS_CHILD = IsChild
  IS_GLOWING = IsGlowing
  IS_HURT = IsHurt
  IS_IN_GROUND = IsInGround
  IS_IN_GUI = IsInGui
  IS_IN_HAND = IsInHand
  IS_IN_ITEM_FRAME = IsInItemFrame
  IS_IN_LAVA = IsInLava
  IS_INVISIBLE = IsInvisible
  IS_IN_WATER = IsInWater
  IS_ON_GROUND = IsOnGround
  IS_ON_HEAD = IsOnHead
  IS_ON_SHOULDER = IsOnShoulder
  IS_RIDDEN = IsRidden
  IS_RIDING = IsRiding
  IS_SITTING = IsSitting
  IS_SNEAKING = IsSneaking
  IS_SPRINTING = IsSprinting
  IS_TAMED = IsTamed
  IS_WET = IsWet
  isBlockEntity()Z = IsBlockEntity
  getName()Ljava/lang/String; = Name
  eval()Z = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterBool; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterBool; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/RenderEntityParameterBool; = Values()
net/optifine/entity/model/anim/RenderEntityParameterBool = Net.Optifine.Entity.Model.Anim.RenderEntityParameterBool
  IS_AGGRESSIVE = IsAggressive
  IS_ALIVE = IsAlive
  IS_BURNING = IsBurning
  IS_CHILD = IsChild
  IS_GLOWING = IsGlowing
  IS_HURT = IsHurt
  IS_IN_GROUND = IsInGround
  IS_IN_GUI = IsInGui
  IS_IN_HAND = IsInHand
  IS_IN_ITEM_FRAME = IsInItemFrame
  IS_IN_LAVA = IsInLava
  IS_INVISIBLE = IsInvisible
  IS_IN_WATER = IsInWater
  IS_ON_GROUND = IsOnGround
  IS_ON_HEAD = IsOnHead
  IS_ON_SHOULDER = IsOnShoulder
  IS_RIDDEN = IsRidden
  IS_RIDING = IsRiding
  IS_SITTING = IsSitting
  IS_SNEAKING = IsSneaking
  IS_SPRINTING = IsSprinting
  IS_TAMED = IsTamed
  IS_WET = IsWet
  isBlockEntity()Z = IsBlockEntity
  getName()Ljava/lang/String; = Name
  eval()Z = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterBool; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterBool; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/RenderEntityParameterBool; = Values()
net/optifine/entity/model/anim/RenderEntityParameterFloat = Net.Optifine.Entity.Model.Anim.RenderEntityParameterFloat
  AGE = Age
  ANGER_TIME = AngerTime
  ANGER_TIME_START = AngerTimeStart
  DEATH_TIME = DeathTime
  DIMENSION = Dimension
  FRAME_COUNTER = FrameCounter
  FRAME_TIME = FrameTime
  HEAD_PITCH = HeadPitch
  HEAD_YAW = HeadYaw
  HEALTH = Health
  HURT_TIME = HurtTime
  ID = Id
  IDLE_TIME = IdleTime
  LIMB_SWING = LimbSwing
  LIMB_SWING_SPEED = LimbSwingSpeed
  MAX_HEALTH = MaxHealth
  MOVE_FORWARD = MoveForward
  MOVE_STRAFING = MoveStrafing
  PLAYER_POS_X = PlayerPosX
  PLAYER_POS_Y = PlayerPosY
  PLAYER_POS_Z = PlayerPosZ
  PLAYER_ROT_X = PlayerRotX
  PLAYER_ROT_Y = PlayerRotY
  POS_X = PosX
  POS_Y = PosY
  POS_Z = PosZ
  ROT_X = RotX
  ROT_Y = RotY
  RULE_INDEX = RuleIndex
  SWING_PROGRESS = SwingProgress
  isBlockEntity()Z = IsBlockEntity
  getName()Ljava/lang/String; = Name
  eval()F = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterFloat; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterFloat; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/RenderEntityParameterFloat; = Values()
net/optifine/entity/model/anim/RenderEntityParameterFloat = Net.Optifine.Entity.Model.Anim.RenderEntityParameterFloat
  AGE = Age
  ANGER_TIME = AngerTime
  ANGER_TIME_START = AngerTimeStart
  DEATH_TIME = DeathTime
  DIMENSION = Dimension
  FRAME_COUNTER = FrameCounter
  FRAME_TIME = FrameTime
  HEAD_PITCH = HeadPitch
  HEAD_YAW = HeadYaw
  HEALTH = Health
  HURT_TIME = HurtTime
  ID = Id
  IDLE_TIME = IdleTime
  LIMB_SWING = LimbSwing
  LIMB_SWING_SPEED = LimbSwingSpeed
  MAX_HEALTH = MaxHealth
  MOVE_FORWARD = MoveForward
  MOVE_STRAFING = MoveStrafing
  PLAYER_POS_X = PlayerPosX
  PLAYER_POS_Y = PlayerPosY
  PLAYER_POS_Z = PlayerPosZ
  PLAYER_ROT_X = PlayerRotX
  PLAYER_ROT_Y = PlayerRotY
  POS_X = PosX
  POS_Y = PosY
  POS_Z = PosZ
  ROT_X = RotX
  ROT_Y = RotY
  RULE_INDEX = RuleIndex
  SWING_PROGRESS = SwingProgress
  isBlockEntity()Z = IsBlockEntity
  getName()Ljava/lang/String; = Name
  eval()F = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterFloat; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RenderEntityParameterFloat; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/RenderEntityParameterFloat; = Values()
net/optifine/entity/model/anim/RendererVariableFloat = Net.Optifine.Entity.Model.Anim.RendererVariableFloat
  LEASH_OFFSET_X = LeashOffsetX
  LEASH_OFFSET_Y = LeashOffsetY
  LEASH_OFFSET_Z = LeashOffsetZ
  SHADOW_OFFSET_X = ShadowOffsetX
  SHADOW_OFFSET_Z = ShadowOffsetZ
  SHADOW_OPACITY = ShadowOpacity
  SHADOW_SIZE = ShadowSize
  getName()Ljava/lang/String; = Name
  getValue()F = Value
  setValue(F)V = Value
  eval()F = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RendererVariableFloat; = Parse(string)
  toString()Ljava/lang/String; = ToString()
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RendererVariableFloat; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/RendererVariableFloat; = Values()
net/optifine/entity/model/anim/RendererVariableFloat = Net.Optifine.Entity.Model.Anim.RendererVariableFloat
  LEASH_OFFSET_X = LeashOffsetX
  LEASH_OFFSET_Y = LeashOffsetY
  LEASH_OFFSET_Z = LeashOffsetZ
  SHADOW_OFFSET_X = ShadowOffsetX
  SHADOW_OFFSET_Z = ShadowOffsetZ
  SHADOW_OPACITY = ShadowOpacity
  SHADOW_SIZE = ShadowSize
  getName()Ljava/lang/String; = Name
  getValue()F = Value
  setValue(F)V = Value
  eval()F = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RendererVariableFloat; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/entity/model/anim/RendererVariableFloat; = ValueOf(string)
  values()[Lnet/optifine/entity/model/anim/RendererVariableFloat; = Values()
net/optifine/entity/model/anim/RenderResolverEntity = Net.Optifine.Entity.Model.Anim.RenderResolverEntity
  <init>()V = .ctor()
  isTileEntity()Z = IsTileEntity
  getParameter(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetParameter(string)
net/optifine/entity/model/anim/RenderResolverEntity = Net.Optifine.Entity.Model.Anim.RenderResolverEntity
  <init>()V = .ctor()
  isTileEntity()Z = IsTileEntity
  getParameter(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetParameter(string)
net/optifine/entity/model/anim/RenderResolverTileEntity = Net.Optifine.Entity.Model.Anim.RenderResolverTileEntity
  <init>()V = .ctor()
  isTileEntity()Z = IsTileEntity
  getParameter(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetParameter(string)
net/optifine/entity/model/anim/RenderResolverTileEntity = Net.Optifine.Entity.Model.Anim.RenderResolverTileEntity
  <init>()V = .ctor()
  isTileEntity()Z = IsTileEntity
  getParameter(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetParameter(string)
net/optifine/entity/model/CustomEntityModelParser = Net.Optifine.Entity.Model.CustomEntityModelParser
  <init>()V = .ctor()
  BOX_COORDINATES = BoxCoordinates
  BOX_SIZE_ADD = BoxSizeAdd
  BOX_TEXTURE_OFFSET = BoxTextureOffset
  ENTITY = Entity
  ENTITY_MODEL = EntityModel
  ENTITY_MODEL_PART = EntityModelPart
  ITEM_ANIMATIONS = ItemAnimations
  ITEM_MODELS = ItemModels
  ITEM_TEXTURE_SIZE = ItemTextureSize
  ITEM_TYPE = ItemType
  ITEM_USE_PLAYER_TEXTURE = ItemUsePlayerTexture
  MODEL_ATTACH = ModelAttach
  MODEL_BASE_ID = ModelBaseId
  MODEL_BOXES = ModelBoxes
  MODEL_ID = ModelId
  MODEL_INVERT_AXIS = ModelInvertAxis
  MODEL_MIRROR_TEXTURE = ModelMirrorTexture
  MODEL_MODEL = ModelModel
  MODEL_PART = ModelPart
  MODEL_ROTATE = ModelRotate
  MODEL_SCALE = ModelScale
  MODEL_SPRITES = ModelSprites
  MODEL_SUBMODEL = ModelSubmodel
  MODEL_SUBMODELS = ModelSubmodels
  MODEL_TRANSLATE = ModelTranslate
  MODEL_TYPE = ModelType
  SHADOW_SIZE = ShadowSize
  TEXTURE = Texture
net/optifine/entity/model/CustomEntityModelParser = Net.Optifine.Entity.Model.CustomEntityModelParser
  <init>()V = .ctor()
  BOX_COORDINATES = BoxCoordinates
  BOX_SIZE_ADD = BoxSizeAdd
  BOX_TEXTURE_OFFSET = BoxTextureOffset
  ENTITY = Entity
  ENTITY_MODEL = EntityModel
  ENTITY_MODEL_PART = EntityModelPart
  ITEM_ANIMATIONS = ItemAnimations
  ITEM_MODELS = ItemModels
  ITEM_TEXTURE_SIZE = ItemTextureSize
  ITEM_TYPE = ItemType
  ITEM_USE_PLAYER_TEXTURE = ItemUsePlayerTexture
  MODEL_ATTACH = ModelAttach
  MODEL_BASE_ID = ModelBaseId
  MODEL_BOXES = ModelBoxes
  MODEL_ID = ModelId
  MODEL_INVERT_AXIS = ModelInvertAxis
  MODEL_MIRROR_TEXTURE = ModelMirrorTexture
  MODEL_MODEL = ModelModel
  MODEL_PART = ModelPart
  MODEL_ROTATE = ModelRotate
  MODEL_SCALE = ModelScale
  MODEL_SPRITES = ModelSprites
  MODEL_SUBMODEL = ModelSubmodel
  MODEL_SUBMODELS = ModelSubmodels
  MODEL_TRANSLATE = ModelTranslate
  MODEL_TYPE = ModelType
  SHADOW_SIZE = ShadowSize
  TEXTURE = Texture
net/optifine/entity/model/CustomEntityModels = Net.Optifine.Entity.Model.CustomEntityModels
  <init>()V = .ctor()
  PREFIX_OPTIFINE_CEM = PrefixOptifineCem
  SUFFIX_JEM = SuffixJem
  SUFFIX_PROPERTIES = SuffixProperties
  isActive()Z = IsActive
  getMatchingRuleIndex()I = MatchingRuleIndex
  update()V = Update()
net/optifine/entity/model/CustomEntityModels = Net.Optifine.Entity.Model.CustomEntityModels
  <init>()V = .ctor()
  PREFIX_OPTIFINE_CEM = PrefixOptifineCem
  SUFFIX_JEM = SuffixJem
  SUFFIX_PROPERTIES = SuffixProperties
  isActive()Z = IsActive
  getMatchingRuleIndex()I = MatchingRuleIndex
  update()V = Update()
net/optifine/entity/model/CustomEntityRenderer = Net.Optifine.Entity.Model.CustomEntityRenderer
  getBasePath()Ljava/lang/String; = BasePath
  getName()Ljava/lang/String; = Name
  getShadowSize()F = ShadowSize
  getCustomModelRenderers()[Lnet/optifine/entity/model/CustomModelRenderer; = GetCustomModelRenderers()
net/optifine/entity/model/CustomEntityRenderer = Net.Optifine.Entity.Model.CustomEntityRenderer
  getBasePath()Ljava/lang/String; = BasePath
  getName()Ljava/lang/String; = Name
  getShadowSize()F = ShadowSize
  getCustomModelRenderers()[Lnet/optifine/entity/model/CustomModelRenderer; = GetCustomModelRenderers()
net/optifine/entity/model/CustomModelRegistry = Net.Optifine.Entity.Model.CustomModelRegistry
  <init>()V = .ctor()
  getModelAdapter(Ljava/lang/String;)Lnet/optifine/entity/model/ModelAdapter; = GetModelAdapter(string)
  getModelNames()[Ljava/lang/String; = GetModelNames()
net/optifine/entity/model/CustomModelRegistry = Net.Optifine.Entity.Model.CustomModelRegistry
  <init>()V = .ctor()
  getModelAdapter(Ljava/lang/String;)Lnet/optifine/entity/model/ModelAdapter; = GetModelAdapter(string)
  getModelNames()[Ljava/lang/String; = GetModelNames()
net/optifine/entity/model/CustomModelRenderer = Net.Optifine.Entity.Model.CustomModelRenderer
  isAttach()Z = IsAttach
  getModelPart()Ljava/lang/String; = ModelPart
  getModelUpdater()Lnet/optifine/entity/model/anim/ModelUpdater; = ModelUpdater
net/optifine/entity/model/CustomModelRenderer = Net.Optifine.Entity.Model.CustomModelRenderer
  isAttach()Z = IsAttach
  getModelPart()Ljava/lang/String; = ModelPart
  getModelUpdater()Lnet/optifine/entity/model/anim/ModelUpdater; = ModelUpdater
net/optifine/entity/model/IEntityRenderer = Net.Optifine.Entity.Model.IEntityRenderer
net/optifine/entity/model/ModelAdapter = Net.Optifine.Entity.Model.ModelAdapter
  getName()Ljava/lang/String; = Name
  getShadowSize()F = ShadowSize
  getAliases()[Ljava/lang/String; = GetAliases()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapter = Net.Optifine.Entity.Model.ModelAdapter
  getName()Ljava/lang/String; = Name
  getShadowSize()F = ShadowSize
  getAliases()[Ljava/lang/String; = GetAliases()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterAllay = Net.Optifine.Entity.Model.ModelAdapterAllay
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterAllay = Net.Optifine.Entity.Model.ModelAdapterAllay
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterArmorStand = Net.Optifine.Entity.Model.ModelAdapterArmorStand
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterArmorStand = Net.Optifine.Entity.Model.ModelAdapterArmorStand
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterArrow = Net.Optifine.Entity.Model.ModelAdapterArrow
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterArrow = Net.Optifine.Entity.Model.ModelAdapterArrow
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterAxolotl = Net.Optifine.Entity.Model.ModelAdapterAxolotl
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterAxolotl = Net.Optifine.Entity.Model.ModelAdapterAxolotl
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBanner = Net.Optifine.Entity.Model.ModelAdapterBanner
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBanner = Net.Optifine.Entity.Model.ModelAdapterBanner
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBat = Net.Optifine.Entity.Model.ModelAdapterBat
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBat = Net.Optifine.Entity.Model.ModelAdapterBat
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBed = Net.Optifine.Entity.Model.ModelAdapterBed
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBed = Net.Optifine.Entity.Model.ModelAdapterBed
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBee = Net.Optifine.Entity.Model.ModelAdapterBee
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBee = Net.Optifine.Entity.Model.ModelAdapterBee
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBell = Net.Optifine.Entity.Model.ModelAdapterBell
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBell = Net.Optifine.Entity.Model.ModelAdapterBell
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBiped = Net.Optifine.Entity.Model.ModelAdapterBiped
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBiped = Net.Optifine.Entity.Model.ModelAdapterBiped
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBlaze = Net.Optifine.Entity.Model.ModelAdapterBlaze
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBlaze = Net.Optifine.Entity.Model.ModelAdapterBlaze
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBoat = Net.Optifine.Entity.Model.ModelAdapterBoat
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBoat = Net.Optifine.Entity.Model.ModelAdapterBoat
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBook = Net.Optifine.Entity.Model.ModelAdapterBook
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBook = Net.Optifine.Entity.Model.ModelAdapterBook
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBookLectern = Net.Optifine.Entity.Model.ModelAdapterBookLectern
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterBookLectern = Net.Optifine.Entity.Model.ModelAdapterBookLectern
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterBreeze = Net.Optifine.Entity.Model.ModelAdapterBreeze
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBreeze = Net.Optifine.Entity.Model.ModelAdapterBreeze
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterBreezeEyes = Net.Optifine.Entity.Model.ModelAdapterBreezeEyes
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterBreezeEyes = Net.Optifine.Entity.Model.ModelAdapterBreezeEyes
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterBreezeWind = Net.Optifine.Entity.Model.ModelAdapterBreezeWind
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterBreezeWind = Net.Optifine.Entity.Model.ModelAdapterBreezeWind
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCamel = Net.Optifine.Entity.Model.ModelAdapterCamel
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterCamel = Net.Optifine.Entity.Model.ModelAdapterCamel
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterCat = Net.Optifine.Entity.Model.ModelAdapterCat
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCat = Net.Optifine.Entity.Model.ModelAdapterCat
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCatCollar = Net.Optifine.Entity.Model.ModelAdapterCatCollar
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCatCollar = Net.Optifine.Entity.Model.ModelAdapterCatCollar
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCaveSpider = Net.Optifine.Entity.Model.ModelAdapterCaveSpider
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCaveSpider = Net.Optifine.Entity.Model.ModelAdapterCaveSpider
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterChest = Net.Optifine.Entity.Model.ModelAdapterChest
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterChest = Net.Optifine.Entity.Model.ModelAdapterChest
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterChestBoat = Net.Optifine.Entity.Model.ModelAdapterChestBoat
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterChestBoat = Net.Optifine.Entity.Model.ModelAdapterChestBoat
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterChestLarge = Net.Optifine.Entity.Model.ModelAdapterChestLarge
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterChestLarge = Net.Optifine.Entity.Model.ModelAdapterChestLarge
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterChestRaft = Net.Optifine.Entity.Model.ModelAdapterChestRaft
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterChestRaft = Net.Optifine.Entity.Model.ModelAdapterChestRaft
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterChicken = Net.Optifine.Entity.Model.ModelAdapterChicken
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterChicken = Net.Optifine.Entity.Model.ModelAdapterChicken
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterCod = Net.Optifine.Entity.Model.ModelAdapterCod
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterCod = Net.Optifine.Entity.Model.ModelAdapterCod
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterConduit = Net.Optifine.Entity.Model.ModelAdapterConduit
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterConduit = Net.Optifine.Entity.Model.ModelAdapterConduit
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterCow = Net.Optifine.Entity.Model.ModelAdapterCow
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCow = Net.Optifine.Entity.Model.ModelAdapterCow
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCreeper = Net.Optifine.Entity.Model.ModelAdapterCreeper
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterCreeper = Net.Optifine.Entity.Model.ModelAdapterCreeper
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterCreeperCharge = Net.Optifine.Entity.Model.ModelAdapterCreeperCharge
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterCreeperCharge = Net.Optifine.Entity.Model.ModelAdapterCreeperCharge
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterDecoratedPot = Net.Optifine.Entity.Model.ModelAdapterDecoratedPot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterDecoratedPot = Net.Optifine.Entity.Model.ModelAdapterDecoratedPot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterDolphin = Net.Optifine.Entity.Model.ModelAdapterDolphin
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterDolphin = Net.Optifine.Entity.Model.ModelAdapterDolphin
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterDonkey = Net.Optifine.Entity.Model.ModelAdapterDonkey
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterDonkey = Net.Optifine.Entity.Model.ModelAdapterDonkey
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterDragon = Net.Optifine.Entity.Model.ModelAdapterDragon
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterDragon = Net.Optifine.Entity.Model.ModelAdapterDragon
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterDrowned = Net.Optifine.Entity.Model.ModelAdapterDrowned
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterDrowned = Net.Optifine.Entity.Model.ModelAdapterDrowned
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterDrownedOuter = Net.Optifine.Entity.Model.ModelAdapterDrownedOuter
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterDrownedOuter = Net.Optifine.Entity.Model.ModelAdapterDrownedOuter
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterElderGuardian = Net.Optifine.Entity.Model.ModelAdapterElderGuardian
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterElderGuardian = Net.Optifine.Entity.Model.ModelAdapterElderGuardian
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterEnderChest = Net.Optifine.Entity.Model.ModelAdapterEnderChest
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterEnderChest = Net.Optifine.Entity.Model.ModelAdapterEnderChest
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterEnderCrystal = Net.Optifine.Entity.Model.ModelAdapterEnderCrystal
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterEnderCrystal = Net.Optifine.Entity.Model.ModelAdapterEnderCrystal
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterEnderman = Net.Optifine.Entity.Model.ModelAdapterEnderman
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterEnderman = Net.Optifine.Entity.Model.ModelAdapterEnderman
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterEndermite = Net.Optifine.Entity.Model.ModelAdapterEndermite
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterEndermite = Net.Optifine.Entity.Model.ModelAdapterEndermite
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterEvoker = Net.Optifine.Entity.Model.ModelAdapterEvoker
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterEvoker = Net.Optifine.Entity.Model.ModelAdapterEvoker
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterEvokerFangs = Net.Optifine.Entity.Model.ModelAdapterEvokerFangs
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterEvokerFangs = Net.Optifine.Entity.Model.ModelAdapterEvokerFangs
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterFox = Net.Optifine.Entity.Model.ModelAdapterFox
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterFox = Net.Optifine.Entity.Model.ModelAdapterFox
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterFrog = Net.Optifine.Entity.Model.ModelAdapterFrog
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterFrog = Net.Optifine.Entity.Model.ModelAdapterFrog
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterGhast = Net.Optifine.Entity.Model.ModelAdapterGhast
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterGhast = Net.Optifine.Entity.Model.ModelAdapterGhast
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterGiant = Net.Optifine.Entity.Model.ModelAdapterGiant
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterGiant = Net.Optifine.Entity.Model.ModelAdapterGiant
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterGlowSquid = Net.Optifine.Entity.Model.ModelAdapterGlowSquid
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterGlowSquid = Net.Optifine.Entity.Model.ModelAdapterGlowSquid
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterGoat = Net.Optifine.Entity.Model.ModelAdapterGoat
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterGoat = Net.Optifine.Entity.Model.ModelAdapterGoat
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterGuardian = Net.Optifine.Entity.Model.ModelAdapterGuardian
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterGuardian = Net.Optifine.Entity.Model.ModelAdapterGuardian
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHangingSign = Net.Optifine.Entity.Model.ModelAdapterHangingSign
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHangingSign = Net.Optifine.Entity.Model.ModelAdapterHangingSign
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHead = Net.Optifine.Entity.Model.ModelAdapterHead
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHead = Net.Optifine.Entity.Model.ModelAdapterHead
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHeadCreeper = Net.Optifine.Entity.Model.ModelAdapterHeadCreeper
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadCreeper = Net.Optifine.Entity.Model.ModelAdapterHeadCreeper
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadDragon = Net.Optifine.Entity.Model.ModelAdapterHeadDragon
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHeadDragon = Net.Optifine.Entity.Model.ModelAdapterHeadDragon
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadPiglin = Net.Optifine.Entity.Model.ModelAdapterHeadPiglin
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHeadPiglin = Net.Optifine.Entity.Model.ModelAdapterHeadPiglin
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadPlayer = Net.Optifine.Entity.Model.ModelAdapterHeadPlayer
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadPlayer = Net.Optifine.Entity.Model.ModelAdapterHeadPlayer
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadSkeleton = Net.Optifine.Entity.Model.ModelAdapterHeadSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadSkeleton = Net.Optifine.Entity.Model.ModelAdapterHeadSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadWitherSkeleton = Net.Optifine.Entity.Model.ModelAdapterHeadWitherSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadWitherSkeleton = Net.Optifine.Entity.Model.ModelAdapterHeadWitherSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadZombie = Net.Optifine.Entity.Model.ModelAdapterHeadZombie
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHeadZombie = Net.Optifine.Entity.Model.ModelAdapterHeadZombie
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHoglin = Net.Optifine.Entity.Model.ModelAdapterHoglin
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHoglin = Net.Optifine.Entity.Model.ModelAdapterHoglin
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHorse = Net.Optifine.Entity.Model.ModelAdapterHorse
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHorse = Net.Optifine.Entity.Model.ModelAdapterHorse
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterHorseArmor = Net.Optifine.Entity.Model.ModelAdapterHorseArmor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHorseArmor = Net.Optifine.Entity.Model.ModelAdapterHorseArmor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHusk = Net.Optifine.Entity.Model.ModelAdapterHusk
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterHusk = Net.Optifine.Entity.Model.ModelAdapterHusk
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterIllager = Net.Optifine.Entity.Model.ModelAdapterIllager
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterIllager = Net.Optifine.Entity.Model.ModelAdapterIllager
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterIllusioner = Net.Optifine.Entity.Model.ModelAdapterIllusioner
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterIllusioner = Net.Optifine.Entity.Model.ModelAdapterIllusioner
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterIronGolem = Net.Optifine.Entity.Model.ModelAdapterIronGolem
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterIronGolem = Net.Optifine.Entity.Model.ModelAdapterIronGolem
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterLeadKnot = Net.Optifine.Entity.Model.ModelAdapterLeadKnot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterLeadKnot = Net.Optifine.Entity.Model.ModelAdapterLeadKnot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterLlama = Net.Optifine.Entity.Model.ModelAdapterLlama
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterLlama = Net.Optifine.Entity.Model.ModelAdapterLlama
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterLlamaDecor = Net.Optifine.Entity.Model.ModelAdapterLlamaDecor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterLlamaDecor = Net.Optifine.Entity.Model.ModelAdapterLlamaDecor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterLlamaSpit = Net.Optifine.Entity.Model.ModelAdapterLlamaSpit
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterLlamaSpit = Net.Optifine.Entity.Model.ModelAdapterLlamaSpit
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterMagmaCube = Net.Optifine.Entity.Model.ModelAdapterMagmaCube
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterMagmaCube = Net.Optifine.Entity.Model.ModelAdapterMagmaCube
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterMinecart = Net.Optifine.Entity.Model.ModelAdapterMinecart
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterMinecart = Net.Optifine.Entity.Model.ModelAdapterMinecart
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterMinecartChest = Net.Optifine.Entity.Model.ModelAdapterMinecartChest
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartChest = Net.Optifine.Entity.Model.ModelAdapterMinecartChest
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartCommandBlock = Net.Optifine.Entity.Model.ModelAdapterMinecartCommandBlock
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartCommandBlock = Net.Optifine.Entity.Model.ModelAdapterMinecartCommandBlock
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartFurnace = Net.Optifine.Entity.Model.ModelAdapterMinecartFurnace
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartFurnace = Net.Optifine.Entity.Model.ModelAdapterMinecartFurnace
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartHopper = Net.Optifine.Entity.Model.ModelAdapterMinecartHopper
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartHopper = Net.Optifine.Entity.Model.ModelAdapterMinecartHopper
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartMobSpawner = Net.Optifine.Entity.Model.ModelAdapterMinecartMobSpawner
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartMobSpawner = Net.Optifine.Entity.Model.ModelAdapterMinecartMobSpawner
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartTnt = Net.Optifine.Entity.Model.ModelAdapterMinecartTnt
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMinecartTnt = Net.Optifine.Entity.Model.ModelAdapterMinecartTnt
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMooshroom = Net.Optifine.Entity.Model.ModelAdapterMooshroom
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMooshroom = Net.Optifine.Entity.Model.ModelAdapterMooshroom
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterMule = Net.Optifine.Entity.Model.ModelAdapterMule
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterMule = Net.Optifine.Entity.Model.ModelAdapterMule
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterOcelot = Net.Optifine.Entity.Model.ModelAdapterOcelot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterOcelot = Net.Optifine.Entity.Model.ModelAdapterOcelot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPanda = Net.Optifine.Entity.Model.ModelAdapterPanda
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPanda = Net.Optifine.Entity.Model.ModelAdapterPanda
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterParrot = Net.Optifine.Entity.Model.ModelAdapterParrot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterParrot = Net.Optifine.Entity.Model.ModelAdapterParrot
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPhantom = Net.Optifine.Entity.Model.ModelAdapterPhantom
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPhantom = Net.Optifine.Entity.Model.ModelAdapterPhantom
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPig = Net.Optifine.Entity.Model.ModelAdapterPig
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPig = Net.Optifine.Entity.Model.ModelAdapterPig
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPiglin = Net.Optifine.Entity.Model.ModelAdapterPiglin
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPiglin = Net.Optifine.Entity.Model.ModelAdapterPiglin
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPiglinBrute = Net.Optifine.Entity.Model.ModelAdapterPiglinBrute
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPiglinBrute = Net.Optifine.Entity.Model.ModelAdapterPiglinBrute
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPigSaddle = Net.Optifine.Entity.Model.ModelAdapterPigSaddle
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPigSaddle = Net.Optifine.Entity.Model.ModelAdapterPigSaddle
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPillager = Net.Optifine.Entity.Model.ModelAdapterPillager
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPillager = Net.Optifine.Entity.Model.ModelAdapterPillager
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPlayer = Net.Optifine.Entity.Model.ModelAdapterPlayer
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPlayer = Net.Optifine.Entity.Model.ModelAdapterPlayer
net/optifine/entity/model/ModelAdapterPolarBear = Net.Optifine.Entity.Model.ModelAdapterPolarBear
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPolarBear = Net.Optifine.Entity.Model.ModelAdapterPolarBear
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterPufferFishBig = Net.Optifine.Entity.Model.ModelAdapterPufferFishBig
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPufferFishBig = Net.Optifine.Entity.Model.ModelAdapterPufferFishBig
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPufferFishMedium = Net.Optifine.Entity.Model.ModelAdapterPufferFishMedium
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPufferFishMedium = Net.Optifine.Entity.Model.ModelAdapterPufferFishMedium
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPufferFishSmall = Net.Optifine.Entity.Model.ModelAdapterPufferFishSmall
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterPufferFishSmall = Net.Optifine.Entity.Model.ModelAdapterPufferFishSmall
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterQuadruped = Net.Optifine.Entity.Model.ModelAdapterQuadruped
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterQuadruped = Net.Optifine.Entity.Model.ModelAdapterQuadruped
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterRabbit = Net.Optifine.Entity.Model.ModelAdapterRabbit
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterRabbit = Net.Optifine.Entity.Model.ModelAdapterRabbit
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterRaft = Net.Optifine.Entity.Model.ModelAdapterRaft
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterRaft = Net.Optifine.Entity.Model.ModelAdapterRaft
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterRavager = Net.Optifine.Entity.Model.ModelAdapterRavager
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterRavager = Net.Optifine.Entity.Model.ModelAdapterRavager
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSalmon = Net.Optifine.Entity.Model.ModelAdapterSalmon
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSalmon = Net.Optifine.Entity.Model.ModelAdapterSalmon
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSheep = Net.Optifine.Entity.Model.ModelAdapterSheep
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSheep = Net.Optifine.Entity.Model.ModelAdapterSheep
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSheepWool = Net.Optifine.Entity.Model.ModelAdapterSheepWool
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSheepWool = Net.Optifine.Entity.Model.ModelAdapterSheepWool
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterShield = Net.Optifine.Entity.Model.ModelAdapterShield
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterShield = Net.Optifine.Entity.Model.ModelAdapterShield
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterShulker = Net.Optifine.Entity.Model.ModelAdapterShulker
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterShulker = Net.Optifine.Entity.Model.ModelAdapterShulker
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterShulkerBox = Net.Optifine.Entity.Model.ModelAdapterShulkerBox
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterShulkerBox = Net.Optifine.Entity.Model.ModelAdapterShulkerBox
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterShulkerBullet = Net.Optifine.Entity.Model.ModelAdapterShulkerBullet
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterShulkerBullet = Net.Optifine.Entity.Model.ModelAdapterShulkerBullet
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSign = Net.Optifine.Entity.Model.ModelAdapterSign
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSign = Net.Optifine.Entity.Model.ModelAdapterSign
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSilverfish = Net.Optifine.Entity.Model.ModelAdapterSilverfish
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSilverfish = Net.Optifine.Entity.Model.ModelAdapterSilverfish
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSkeleton = Net.Optifine.Entity.Model.ModelAdapterSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSkeleton = Net.Optifine.Entity.Model.ModelAdapterSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSkeletonHorse = Net.Optifine.Entity.Model.ModelAdapterSkeletonHorse
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSkeletonHorse = Net.Optifine.Entity.Model.ModelAdapterSkeletonHorse
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSlime = Net.Optifine.Entity.Model.ModelAdapterSlime
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSlime = Net.Optifine.Entity.Model.ModelAdapterSlime
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSlimeOuter = Net.Optifine.Entity.Model.ModelAdapterSlimeOuter
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSlimeOuter = Net.Optifine.Entity.Model.ModelAdapterSlimeOuter
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSniffer = Net.Optifine.Entity.Model.ModelAdapterSniffer
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSniffer = Net.Optifine.Entity.Model.ModelAdapterSniffer
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSnowman = Net.Optifine.Entity.Model.ModelAdapterSnowman
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSnowman = Net.Optifine.Entity.Model.ModelAdapterSnowman
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSpectralArrow = Net.Optifine.Entity.Model.ModelAdapterSpectralArrow
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSpectralArrow = Net.Optifine.Entity.Model.ModelAdapterSpectralArrow
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterSpider = Net.Optifine.Entity.Model.ModelAdapterSpider
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSpider = Net.Optifine.Entity.Model.ModelAdapterSpider
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSquid = Net.Optifine.Entity.Model.ModelAdapterSquid
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterSquid = Net.Optifine.Entity.Model.ModelAdapterSquid
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterStray = Net.Optifine.Entity.Model.ModelAdapterStray
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterStray = Net.Optifine.Entity.Model.ModelAdapterStray
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterStrayOuter = Net.Optifine.Entity.Model.ModelAdapterStrayOuter
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterStrayOuter = Net.Optifine.Entity.Model.ModelAdapterStrayOuter
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterStrider = Net.Optifine.Entity.Model.ModelAdapterStrider
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterStrider = Net.Optifine.Entity.Model.ModelAdapterStrider
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterStriderSaddle = Net.Optifine.Entity.Model.ModelAdapterStriderSaddle
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterStriderSaddle = Net.Optifine.Entity.Model.ModelAdapterStriderSaddle
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTadpole = Net.Optifine.Entity.Model.ModelAdapterTadpole
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTadpole = Net.Optifine.Entity.Model.ModelAdapterTadpole
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTraderLlama = Net.Optifine.Entity.Model.ModelAdapterTraderLlama
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTraderLlama = Net.Optifine.Entity.Model.ModelAdapterTraderLlama
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTraderLlamaDecor = Net.Optifine.Entity.Model.ModelAdapterTraderLlamaDecor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTraderLlamaDecor = Net.Optifine.Entity.Model.ModelAdapterTraderLlamaDecor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTrappedChest = Net.Optifine.Entity.Model.ModelAdapterTrappedChest
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTrappedChest = Net.Optifine.Entity.Model.ModelAdapterTrappedChest
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTrappedChestLarge = Net.Optifine.Entity.Model.ModelAdapterTrappedChestLarge
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTrappedChestLarge = Net.Optifine.Entity.Model.ModelAdapterTrappedChestLarge
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTrident = Net.Optifine.Entity.Model.ModelAdapterTrident
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTrident = Net.Optifine.Entity.Model.ModelAdapterTrident
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTropicalFishA = Net.Optifine.Entity.Model.ModelAdapterTropicalFishA
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTropicalFishA = Net.Optifine.Entity.Model.ModelAdapterTropicalFishA
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTropicalFishB = Net.Optifine.Entity.Model.ModelAdapterTropicalFishB
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTropicalFishB = Net.Optifine.Entity.Model.ModelAdapterTropicalFishB
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTropicalFishPatternA = Net.Optifine.Entity.Model.ModelAdapterTropicalFishPatternA
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTropicalFishPatternA = Net.Optifine.Entity.Model.ModelAdapterTropicalFishPatternA
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTropicalFishPatternB = Net.Optifine.Entity.Model.ModelAdapterTropicalFishPatternB
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTropicalFishPatternB = Net.Optifine.Entity.Model.ModelAdapterTropicalFishPatternB
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterTurtle = Net.Optifine.Entity.Model.ModelAdapterTurtle
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterTurtle = Net.Optifine.Entity.Model.ModelAdapterTurtle
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterVex = Net.Optifine.Entity.Model.ModelAdapterVex
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterVex = Net.Optifine.Entity.Model.ModelAdapterVex
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterVillager = Net.Optifine.Entity.Model.ModelAdapterVillager
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterVillager = Net.Optifine.Entity.Model.ModelAdapterVillager
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterVindicator = Net.Optifine.Entity.Model.ModelAdapterVindicator
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterVindicator = Net.Optifine.Entity.Model.ModelAdapterVindicator
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWanderingTrader = Net.Optifine.Entity.Model.ModelAdapterWanderingTrader
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWanderingTrader = Net.Optifine.Entity.Model.ModelAdapterWanderingTrader
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWarden = Net.Optifine.Entity.Model.ModelAdapterWarden
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWarden = Net.Optifine.Entity.Model.ModelAdapterWarden
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWindCharge = Net.Optifine.Entity.Model.ModelAdapterWindCharge
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWindCharge = Net.Optifine.Entity.Model.ModelAdapterWindCharge
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWitch = Net.Optifine.Entity.Model.ModelAdapterWitch
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWitch = Net.Optifine.Entity.Model.ModelAdapterWitch
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWither = Net.Optifine.Entity.Model.ModelAdapterWither
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWither = Net.Optifine.Entity.Model.ModelAdapterWither
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWitherArmor = Net.Optifine.Entity.Model.ModelAdapterWitherArmor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWitherArmor = Net.Optifine.Entity.Model.ModelAdapterWitherArmor
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWitherSkeleton = Net.Optifine.Entity.Model.ModelAdapterWitherSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWitherSkeleton = Net.Optifine.Entity.Model.ModelAdapterWitherSkeleton
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWitherSkull = Net.Optifine.Entity.Model.ModelAdapterWitherSkull
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWitherSkull = Net.Optifine.Entity.Model.ModelAdapterWitherSkull
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWolf = Net.Optifine.Entity.Model.ModelAdapterWolf
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWolf = Net.Optifine.Entity.Model.ModelAdapterWolf
  <init>()V = .ctor()
  getModelRendererNames()[Ljava/lang/String; = GetModelRendererNames()
net/optifine/entity/model/ModelAdapterWolfCollar = Net.Optifine.Entity.Model.ModelAdapterWolfCollar
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterWolfCollar = Net.Optifine.Entity.Model.ModelAdapterWolfCollar
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZoglin = Net.Optifine.Entity.Model.ModelAdapterZoglin
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZoglin = Net.Optifine.Entity.Model.ModelAdapterZoglin
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombie = Net.Optifine.Entity.Model.ModelAdapterZombie
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombie = Net.Optifine.Entity.Model.ModelAdapterZombie
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombieHorse = Net.Optifine.Entity.Model.ModelAdapterZombieHorse
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombieHorse = Net.Optifine.Entity.Model.ModelAdapterZombieHorse
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombieVillager = Net.Optifine.Entity.Model.ModelAdapterZombieVillager
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombieVillager = Net.Optifine.Entity.Model.ModelAdapterZombieVillager
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombifiedPiglin = Net.Optifine.Entity.Model.ModelAdapterZombifiedPiglin
  <init>()V = .ctor()
net/optifine/entity/model/ModelAdapterZombifiedPiglin = Net.Optifine.Entity.Model.ModelAdapterZombifiedPiglin
  <init>()V = .ctor()
net/optifine/entity/model/ModelRendererUtils = Net.Optifine.Entity.Model.ModelRendererUtils
  <init>()V = .ctor()
net/optifine/entity/model/ModelRendererUtils = Net.Optifine.Entity.Model.ModelRendererUtils
  <init>()V = .ctor()
net/optifine/entity/model/RendererCache = Net.Optifine.Entity.Model.RendererCache
  <init>()V = .ctor()
  clear()V = Clear()
net/optifine/entity/model/RendererCache = Net.Optifine.Entity.Model.RendererCache
  <init>()V = .ctor()
  clear()V = Clear()
net/optifine/entity/model/VirtualEntityRenderer = Net.Optifine.Entity.Model.VirtualEntityRenderer
net/optifine/entity/model/VirtualEntityRenderer = Net.Optifine.Entity.Model.VirtualEntityRenderer
net/optifine/expr/ConstantFloat = Net.Optifine.Expr.ConstantFloat
  <init>(F)V = .ctor(float)
  eval()F = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/expr/ConstantFloat = Net.Optifine.Expr.ConstantFloat
  <init>(F)V = .ctor(float)
  eval()F = Eval()
net/optifine/expr/ExpressionFloatArrayCached = Net.Optifine.Expr.ExpressionFloatArrayCached
  <init>(Lnet/optifine/expr/IExpressionFloatArray;)V = .ctor(Net.Optifine.Expr.IExpressionFloatArray)
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()[F = Eval()
  reset()V = Reset()
  toString()Ljava/lang/String; = ToString()
net/optifine/expr/ExpressionFloatArrayCached = Net.Optifine.Expr.ExpressionFloatArrayCached
  <init>(Lnet/optifine/expr/IExpressionFloatArray;)V = .ctor(Net.Optifine.Expr.IExpressionFloatArray)
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()[F = Eval()
  reset()V = Reset()
net/optifine/expr/ExpressionFloatCached = Net.Optifine.Expr.ExpressionFloatCached
  <init>(Lnet/optifine/expr/IExpressionFloat;)V = .ctor(Net.Optifine.Expr.IExpressionFloat)
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()F = Eval()
  reset()V = Reset()
  toString()Ljava/lang/String; = ToString()
net/optifine/expr/ExpressionFloatCached = Net.Optifine.Expr.ExpressionFloatCached
  <init>(Lnet/optifine/expr/IExpressionFloat;)V = .ctor(Net.Optifine.Expr.IExpressionFloat)
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()F = Eval()
  reset()V = Reset()
net/optifine/expr/ExpressionParser = Net.Optifine.Expr.ExpressionParser
  <init>(Lnet/optifine/expr/IExpressionResolver;)V = .ctor(Net.Optifine.Expr.IExpressionResolver)
  parse(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = Parse(string)
  parseBool(Ljava/lang/String;)Lnet/optifine/expr/IExpressionBool; = ParseBool(string)
  parseFloat(Ljava/lang/String;)Lnet/optifine/expr/IExpressionFloat; = ParseFloat(string)
net/optifine/expr/ExpressionParser = Net.Optifine.Expr.ExpressionParser
  <init>(Lnet/optifine/expr/IExpressionResolver;)V = .ctor(Net.Optifine.Expr.IExpressionResolver)
  parse(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = Parse(string)
  parseBool(Ljava/lang/String;)Lnet/optifine/expr/IExpressionBool; = ParseBool(string)
  parseFloat(Ljava/lang/String;)Lnet/optifine/expr/IExpressionFloat; = ParseFloat(string)
net/optifine/expr/ExpressionType = Net.Optifine.Expr.ExpressionType
  BOOL = Bool
  FLOAT = Float
  FLOAT_ARRAY = FloatArray
  valueOf(Ljava/lang/String;)Lnet/optifine/expr/ExpressionType; = ValueOf(string)
  values()[Lnet/optifine/expr/ExpressionType; = Values()
net/optifine/expr/ExpressionType = Net.Optifine.Expr.ExpressionType
  BOOL = Bool
  FLOAT = Float
  FLOAT_ARRAY = FloatArray
  valueOf(Ljava/lang/String;)Lnet/optifine/expr/ExpressionType; = ValueOf(string)
  values()[Lnet/optifine/expr/ExpressionType; = Values()
net/optifine/expr/FunctionBool = Net.Optifine.Expr.FunctionBool
  <init>(Lnet/optifine/expr/FunctionType;[Lnet/optifine/expr/IExpression;)V = .ctor(Net.Optifine.Expr.FunctionType, Net.Optifine.Expr.IExpression[])
  eval()Z = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/expr/FunctionBool = Net.Optifine.Expr.FunctionBool
  <init>(Lnet/optifine/expr/FunctionType;[Lnet/optifine/expr/IExpression;)V = .ctor(Net.Optifine.Expr.FunctionType, Net.Optifine.Expr.IExpression[])
  eval()Z = Eval()
net/optifine/expr/FunctionFloat = Net.Optifine.Expr.FunctionFloat
  <init>(Lnet/optifine/expr/FunctionType;[Lnet/optifine/expr/IExpression;)V = .ctor(Net.Optifine.Expr.FunctionType, Net.Optifine.Expr.IExpression[])
  eval()F = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/expr/FunctionFloat = Net.Optifine.Expr.FunctionFloat
  <init>(Lnet/optifine/expr/FunctionType;[Lnet/optifine/expr/IExpression;)V = .ctor(Net.Optifine.Expr.FunctionType, Net.Optifine.Expr.IExpression[])
  eval()F = Eval()
net/optifine/expr/FunctionFloatArray = Net.Optifine.Expr.FunctionFloatArray
  <init>(Lnet/optifine/expr/FunctionType;[Lnet/optifine/expr/IExpression;)V = .ctor(Net.Optifine.Expr.FunctionType, Net.Optifine.Expr.IExpression[])
  eval()[F = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/expr/FunctionFloatArray = Net.Optifine.Expr.FunctionFloatArray
  <init>(Lnet/optifine/expr/FunctionType;[Lnet/optifine/expr/IExpression;)V = .ctor(Net.Optifine.Expr.FunctionType, Net.Optifine.Expr.IExpression[])
  eval()[F = Eval()
net/optifine/expr/FunctionType = Net.Optifine.Expr.FunctionType
  ABS = Abs
  ACOS = Acos
  AND = And
  ASIN = Asin
  ATAN = Atan
  ATAN2 = Atan2
  BETWEEN = Between
  CEIL = Ceil
  CLAMP = Clamp
  COS = Cos
  DAY_COUNT = DayCount
  DAY_TIME = DayTime
  DIV = Div
  EQUAL = Equal
  EQUALS = Equals
  EXP = Exp
  FALSE = False
  FLOOR = Floor
  FMOD = Fmod
  FRAC = Frac
  GREATER = Greater
  GREATER_OR_EQUAL = GreaterOrEqual
  IF = If
  IFB = Ifb
  IN = In
  LERP = Lerp
  LOG = Log
  MAX = Max
  MIN = Min
  MINUS = Minus
  MOD = Mod
  MUL = Mul
  NEG = Neg
  NOT = Not
  NOT_EQUAL = NotEqual
  OR = Or
  PI = Pi
  PLUS = Plus
  POW = Pow
  PRINT = Print
  PRINTB = Printb
  RANDOM = Random
  ROUND = Round
  SIGNUM = Signum
  SIN = Sin
  SMALLER = Smaller
  SMALLER_OR_EQUAL = SmallerOrEqual
  SMOOTH = Smooth
  SQRT = Sqrt
  TAN = Tan
  TIME = Time
  TODEG = Todeg
  TORAD = Torad
  TRUE = True
  VALUES = Values
  VEC2 = Vec2
  VEC3 = Vec3
  VEC4 = Vec4
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  getName()Ljava/lang/String; = Name
  getParameters()Lnet/optifine/expr/IParameters; = Parameters
  getPrecedence()I = Precedence
  evalBool([Lnet/optifine/expr/IExpression;)Z = EvalBool(Net.Optifine.Expr.IExpression[])
  evalFloat([Lnet/optifine/expr/IExpression;)F = EvalFloat(Net.Optifine.Expr.IExpression[])
  evalFloatArray([Lnet/optifine/expr/IExpression;)[F = EvalFloatArray(Net.Optifine.Expr.IExpression[])
  getParameterCount([Lnet/optifine/expr/IExpression;)I = GetParameterCount(Net.Optifine.Expr.IExpression[])
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
  parse(Ljava/lang/String;)Lnet/optifine/expr/FunctionType; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/expr/FunctionType; = ValueOf(string)
  values()[Lnet/optifine/expr/FunctionType; = Values()
net/optifine/expr/FunctionType = Net.Optifine.Expr.FunctionType
  ABS = Abs
  ACOS = Acos
  AND = And
  ASIN = Asin
  ATAN = Atan
  ATAN2 = Atan2
  BETWEEN = Between
  CEIL = Ceil
  CLAMP = Clamp
  COS = Cos
  DAY_COUNT = DayCount
  DAY_TIME = DayTime
  DIV = Div
  EQUAL = Equal
  EQUALS = Equals
  EXP = Exp
  FALSE = False
  FLOOR = Floor
  FMOD = Fmod
  FRAC = Frac
  GREATER = Greater
  GREATER_OR_EQUAL = GreaterOrEqual
  IF = If
  IFB = Ifb
  IN = In
  LERP = Lerp
  LOG = Log
  MAX = Max
  MIN = Min
  MINUS = Minus
  MOD = Mod
  MUL = Mul
  NEG = Neg
  NOT = Not
  NOT_EQUAL = NotEqual
  OR = Or
  PI = Pi
  PLUS = Plus
  POW = Pow
  PRINT = Print
  PRINTB = Printb
  RANDOM = Random
  ROUND = Round
  SIGNUM = Signum
  SIN = Sin
  SMALLER = Smaller
  SMALLER_OR_EQUAL = SmallerOrEqual
  SMOOTH = Smooth
  SQRT = Sqrt
  TAN = Tan
  TIME = Time
  TODEG = Todeg
  TORAD = Torad
  TRUE = True
  VALUES = Values
  VEC2 = Vec2
  VEC3 = Vec3
  VEC4 = Vec4
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  getName()Ljava/lang/String; = Name
  getParameters()Lnet/optifine/expr/IParameters; = Parameters
  getPrecedence()I = Precedence
  evalBool([Lnet/optifine/expr/IExpression;)Z = EvalBool(Net.Optifine.Expr.IExpression[])
  evalFloat([Lnet/optifine/expr/IExpression;)F = EvalFloat(Net.Optifine.Expr.IExpression[])
  evalFloatArray([Lnet/optifine/expr/IExpression;)[F = EvalFloatArray(Net.Optifine.Expr.IExpression[])
  getParameterCount([Lnet/optifine/expr/IExpression;)I = GetParameterCount(Net.Optifine.Expr.IExpression[])
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
  parse(Ljava/lang/String;)Lnet/optifine/expr/FunctionType; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/expr/FunctionType; = ValueOf(string)
  values()[Lnet/optifine/expr/FunctionType; = Values()
net/optifine/expr/IExpression = Net.Optifine.Expr.IExpression
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
net/optifine/expr/IExpression = Net.Optifine.Expr.IExpression
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
net/optifine/expr/IExpressionBool = Net.Optifine.Expr.IExpressionBool
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()Z = Eval()
net/optifine/expr/IExpressionBool = Net.Optifine.Expr.IExpressionBool
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()Z = Eval()
net/optifine/expr/IExpressionCached = Net.Optifine.Expr.IExpressionCached
  reset()V = Reset()
net/optifine/expr/IExpressionCached = Net.Optifine.Expr.IExpressionCached
  reset()V = Reset()
net/optifine/expr/IExpressionFloat = Net.Optifine.Expr.IExpressionFloat
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()F = Eval()
net/optifine/expr/IExpressionFloat = Net.Optifine.Expr.IExpressionFloat
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()F = Eval()
net/optifine/expr/IExpressionFloatArray = Net.Optifine.Expr.IExpressionFloatArray
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()[F = Eval()
net/optifine/expr/IExpressionFloatArray = Net.Optifine.Expr.IExpressionFloatArray
  getExpressionType()Lnet/optifine/expr/ExpressionType; = ExpressionType
  eval()[F = Eval()
net/optifine/expr/IExpressionResolver = Net.Optifine.Expr.IExpressionResolver
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
net/optifine/expr/IExpressionResolver = Net.Optifine.Expr.IExpressionResolver
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
net/optifine/expr/IParameters = Net.Optifine.Expr.IParameters
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
net/optifine/expr/IParameters = Net.Optifine.Expr.IParameters
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
net/optifine/expr/Parameters = Net.Optifine.Expr.Parameters
  <init>([Lnet/optifine/expr/ExpressionType;)V = .ctor(Net.Optifine.Expr.ExpressionType[])
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
net/optifine/expr/Parameters = Net.Optifine.Expr.Parameters
  <init>([Lnet/optifine/expr/ExpressionType;)V = .ctor(Net.Optifine.Expr.ExpressionType[])
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
net/optifine/expr/ParametersVariable = Net.Optifine.Expr.ParametersVariable
  <init>()V = .ctor()
  <init>([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;)V = .ctor(Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[])
  <init>([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;I)V = .ctor(Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[], int)
  getCountRepeat()I = CountRepeat
  first([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable; = First(params Net.Optifine.Expr.ExpressionType[])
  getFirst()[Lnet/optifine/expr/ExpressionType; = GetFirst()
  getLast()[Lnet/optifine/expr/ExpressionType; = GetLast()
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
  getRepeat()[Lnet/optifine/expr/ExpressionType; = GetRepeat()
  last([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable; = Last(params Net.Optifine.Expr.ExpressionType[])
  maxCount(I)Lnet/optifine/expr/ParametersVariable; = MaxCount(int)
  repeat([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable; = Repeat(params Net.Optifine.Expr.ExpressionType[])
net/optifine/expr/ParametersVariable = Net.Optifine.Expr.ParametersVariable
  <init>()V = .ctor()
  <init>([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;)V = .ctor(Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[])
  <init>([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;I)V = .ctor(Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[], Net.Optifine.Expr.ExpressionType[], int)
  getCountRepeat()I = CountRepeat
  first([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable; = First(params Net.Optifine.Expr.ExpressionType[])
  getFirst()[Lnet/optifine/expr/ExpressionType; = GetFirst()
  getLast()[Lnet/optifine/expr/ExpressionType; = GetLast()
  getParameterTypes([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType; = GetParameterTypes(Net.Optifine.Expr.IExpression[])
  getRepeat()[Lnet/optifine/expr/ExpressionType; = GetRepeat()
  last([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable; = Last(params Net.Optifine.Expr.ExpressionType[])
  maxCount(I)Lnet/optifine/expr/ParametersVariable; = MaxCount(int)
  repeat([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable; = Repeat(params Net.Optifine.Expr.ExpressionType[])
net/optifine/expr/ParseException = Net.Optifine.Expr.ParseException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
net/optifine/expr/ParseException = Net.Optifine.Expr.ParseException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
net/optifine/expr/TestExpressions = Net.Optifine.Expr.TestExpressions
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/expr/TestExpressions = Net.Optifine.Expr.TestExpressions
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/expr/Token = Net.Optifine.Expr.Token
  <init>(Lnet/optifine/expr/TokenType;Ljava/lang/String;)V = .ctor(Net.Optifine.Expr.TokenType, string)
  getText()Ljava/lang/String; = Text
  getType()Lnet/optifine/expr/TokenType; = Type
  toString()Ljava/lang/String; = ToString()
net/optifine/expr/Token = Net.Optifine.Expr.Token
  <init>(Lnet/optifine/expr/TokenType;Ljava/lang/String;)V = .ctor(Net.Optifine.Expr.TokenType, string)
  getText()Ljava/lang/String; = Text
  getType()Lnet/optifine/expr/TokenType; = Type
net/optifine/expr/TokenParser = Net.Optifine.Expr.TokenParser
  <init>()V = .ctor()
  parse(Ljava/lang/String;)[Lnet/optifine/expr/Token; = Parse(string)
net/optifine/expr/TokenParser = Net.Optifine.Expr.TokenParser
  <init>()V = .ctor()
  parse(Ljava/lang/String;)[Lnet/optifine/expr/Token; = Parse(string)
net/optifine/expr/TokenType = Net.Optifine.Expr.TokenType
  BRACKET_CLOSE = BracketClose
  BRACKET_OPEN = BracketOpen
  COMMA = Comma
  IDENTIFIER = Identifier
  NUMBER = Number
  OPERATOR = Operator
  VALUES = Values
  getCharsFirst()Ljava/lang/String; = CharsFirst
  getCharsNext()Ljava/lang/String; = CharsNext
  getTypeByFirstChar(C)Lnet/optifine/expr/TokenType; = GetTypeByFirstChar(char)
  hasCharNext(C)Z = HasCharNext(char)
  valueOf(Ljava/lang/String;)Lnet/optifine/expr/TokenType; = ValueOf(string)
  values()[Lnet/optifine/expr/TokenType; = Values()
net/optifine/expr/TokenType = Net.Optifine.Expr.TokenType
  BRACKET_CLOSE = BracketClose
  BRACKET_OPEN = BracketOpen
  COMMA = Comma
  IDENTIFIER = Identifier
  NUMBER = Number
  OPERATOR = Operator
  VALUES = Values
  getCharsFirst()Ljava/lang/String; = CharsFirst
  getCharsNext()Ljava/lang/String; = CharsNext
  getTypeByFirstChar(C)Lnet/optifine/expr/TokenType; = GetTypeByFirstChar(char)
  hasCharNext(C)Z = HasCharNext(char)
  valueOf(Ljava/lang/String;)Lnet/optifine/expr/TokenType; = ValueOf(string)
  values()[Lnet/optifine/expr/TokenType; = Values()
net/optifine/GlErrors = Net.Optifine.GlErrors
  <init>()V = .ctor()
  frameStart()V = FrameStart()
  isEnabled(I)Z = IsEnabled(int)
net/optifine/GlErrors = Net.Optifine.GlErrors
  <init>()V = .ctor()
  frameStart()V = FrameStart()
  isEnabled(I)Z = IsEnabled(int)
net/optifine/gui/IOptionControl = Net.Optifine.Gui.IOptionControl
net/optifine/gui/OptionFullscreenResolution = Net.Optifine.Gui.OptionFullscreenResolution
  <init>()V = .ctor()
net/optifine/gui/OptionFullscreenResolution = Net.Optifine.Gui.OptionFullscreenResolution
  <init>()V = .ctor()
net/optifine/gui/TooltipManager = Net.Optifine.Gui.TooltipManager
net/optifine/gui/TooltipManager = Net.Optifine.Gui.TooltipManager
net/optifine/gui/TooltipProvider = Net.Optifine.Gui.ITooltipProvider
  isRenderBorder()Z = IsRenderBorder
net/optifine/gui/TooltipProviderEnumShaderOptions = Net.Optifine.Gui.TooltipProviderEnumShaderOptions
  <init>()V = .ctor()
  isRenderBorder()Z = IsRenderBorder
net/optifine/gui/TooltipProviderEnumShaderOptions = Net.Optifine.Gui.TooltipProviderEnumShaderOptions
  <init>()V = .ctor()
  isRenderBorder()Z = IsRenderBorder
net/optifine/gui/TooltipProviderOptions = Net.Optifine.Gui.TooltipProviderOptions
  <init>()V = .ctor()
  isRenderBorder()Z = IsRenderBorder
  getTooltipLines(Ljava/lang/String;)[Ljava/lang/String; = GetTooltipLines(string)
net/optifine/gui/TooltipProviderOptions = Net.Optifine.Gui.TooltipProviderOptions
  <init>()V = .ctor()
  isRenderBorder()Z = IsRenderBorder
  getTooltipLines(Ljava/lang/String;)[Ljava/lang/String; = GetTooltipLines(string)
net/optifine/gui/TooltipProviderShaderOptions = Net.Optifine.Gui.TooltipProviderShaderOptions
  <init>()V = .ctor()
net/optifine/gui/TooltipProviderShaderOptions = Net.Optifine.Gui.TooltipProviderShaderOptions
  <init>()V = .ctor()
net/optifine/http/FileDownloadThread = Net.Optifine.Http.FileDownloadThread
  <init>(Ljava/lang/String;Lnet/optifine/http/IFileDownloadListener;)V = .ctor(string, Net.Optifine.Http.IFileDownloadListener)
  getListener()Lnet/optifine/http/IFileDownloadListener; = Listener
  getUrlString()Ljava/lang/String; = UrlString
  run()V = Run()
net/optifine/http/FileDownloadThread = Net.Optifine.Http.FileDownloadThread
  <init>(Ljava/lang/String;Lnet/optifine/http/IFileDownloadListener;)V = .ctor(string, Net.Optifine.Http.IFileDownloadListener)
  getListener()Lnet/optifine/http/IFileDownloadListener; = Listener
  getUrlString()Ljava/lang/String; = UrlString
net/optifine/http/FileUploadThread = Net.Optifine.Http.FileUploadThread
  <init>(Ljava/lang/String;Ljava/util/Map;[BLnet/optifine/http/IFileUploadListener;)V = .ctor(string, System.Collections.IDictionary, byte[], Net.Optifine.Http.IFileUploadListener)
  getListener()Lnet/optifine/http/IFileUploadListener; = Listener
  getUrlString()Ljava/lang/String; = UrlString
  getContent()[B = GetContent()
  run()V = Run()
net/optifine/http/FileUploadThread = Net.Optifine.Http.FileUploadThread
  <init>(Ljava/lang/String;Ljava/util/Map;[BLnet/optifine/http/IFileUploadListener;)V = .ctor(string, System.Collections.IDictionary, byte[], Net.Optifine.Http.IFileUploadListener)
  getListener()Lnet/optifine/http/IFileUploadListener; = Listener
  getUrlString()Ljava/lang/String; = UrlString
  getContent()[B = GetContent()
net/optifine/http/HttpListener = Net.Optifine.Http.IHttpListener
  failed(Lnet/optifine/http/HttpRequest;Ljava/lang/Exception;)V = Failed(Net.Optifine.Http.HttpRequest, Java.Lang.Exception)
  finished(Lnet/optifine/http/HttpRequest;Lnet/optifine/http/HttpResponse;)V = Finished(Net.Optifine.Http.HttpRequest, Net.Optifine.Http.HttpResponse)
net/optifine/http/HttpListener = Net.Optifine.Http.IHttpListener
  failed(Lnet/optifine/http/HttpRequest;Ljava/lang/Exception;)V = Failed(Net.Optifine.Http.HttpRequest, Java.Lang.Exception)
  finished(Lnet/optifine/http/HttpRequest;Lnet/optifine/http/HttpResponse;)V = Finished(Net.Optifine.Http.HttpRequest, Net.Optifine.Http.HttpResponse)
net/optifine/http/HttpPipeline = Net.Optifine.Http.HttpPipeline
  HEADER_ACCEPT = HeaderAccept
  HEADER_CONNECTION = HeaderConnection
  HEADER_HOST = HeaderHost
  HEADER_KEEP_ALIVE = HeaderKeepAlive
  HEADER_LOCATION = HeaderLocation
  HEADER_TRANSFER_ENCODING = HeaderTransferEncoding
  HEADER_USER_AGENT = HeaderUserAgent
  HEADER_VALUE_CHUNKED = HeaderValueChunked
  HEADER_VALUE_KEEP_ALIVE = HeaderValueKeepAlive
  hasActiveRequests()Z = HasActiveRequests
  addRequest(Ljava/lang/String;Lnet/optifine/http/HttpListener;)V = AddRequest(string, Net.Optifine.Http.IHttpListener)
  addRequest(Ljava/lang/String;Lnet/optifine/http/HttpListener;Ljava/net/Proxy;)V = AddRequest(string, Net.Optifine.Http.IHttpListener, Java.Net.Proxy)
  addRequest(Lnet/optifine/http/HttpPipelineRequest;)V = AddRequest(Net.Optifine.Http.HttpPipelineRequest)
  executeRequest(Lnet/optifine/http/HttpRequest;)Lnet/optifine/http/HttpResponse; = ExecuteRequest(Net.Optifine.Http.HttpRequest)
  get(Ljava/lang/String;)[B = Get(string)
  get(Ljava/lang/String;Ljava/net/Proxy;)[B = Get(string, Java.Net.Proxy)
  makeRequest(Ljava/lang/String;Ljava/net/Proxy;)Lnet/optifine/http/HttpRequest; = MakeRequest(string, Java.Net.Proxy)
net/optifine/http/HttpPipeline = Net.Optifine.Http.HttpPipeline
  HEADER_ACCEPT = HeaderAccept
  HEADER_CONNECTION = HeaderConnection
  HEADER_HOST = HeaderHost
  HEADER_KEEP_ALIVE = HeaderKeepAlive
  HEADER_LOCATION = HeaderLocation
  HEADER_TRANSFER_ENCODING = HeaderTransferEncoding
  HEADER_USER_AGENT = HeaderUserAgent
  HEADER_VALUE_CHUNKED = HeaderValueChunked
  HEADER_VALUE_KEEP_ALIVE = HeaderValueKeepAlive
  hasActiveRequests()Z = HasActiveRequests
  addRequest(Ljava/lang/String;Lnet/optifine/http/HttpListener;)V = AddRequest(string, Net.Optifine.Http.IHttpListener)
  addRequest(Ljava/lang/String;Lnet/optifine/http/HttpListener;Ljava/net/Proxy;)V = AddRequest(string, Net.Optifine.Http.IHttpListener, Java.Net.Proxy)
  addRequest(Lnet/optifine/http/HttpPipelineRequest;)V = AddRequest(Net.Optifine.Http.HttpPipelineRequest)
  executeRequest(Lnet/optifine/http/HttpRequest;)Lnet/optifine/http/HttpResponse; = ExecuteRequest(Net.Optifine.Http.HttpRequest)
  get(Ljava/lang/String;)[B = Get(string)
  get(Ljava/lang/String;Ljava/net/Proxy;)[B = Get(string, Java.Net.Proxy)
  makeRequest(Ljava/lang/String;Ljava/net/Proxy;)Lnet/optifine/http/HttpRequest; = MakeRequest(string, Java.Net.Proxy)
net/optifine/http/HttpPipelineConnection = Net.Optifine.Http.HttpPipelineConnection
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  <init>(Ljava/lang/String;ILjava/net/Proxy;)V = .ctor(string, int, Java.Net.Proxy)
  TIMEOUT_CONNECT_MS = TimeoutConnectMs
  TIMEOUT_READ_MS = TimeoutReadMs
  getCountRequests()I = CountRequests
  hasActiveRequests()Z = HasActiveRequests
  getHost()Ljava/lang/String; = Host
  getInputStream()Ljava/io/InputStream; = InputStream
  isClosed()Z = IsClosed
  getNextRequestReceive()Lnet/optifine/http/HttpPipelineRequest; = NextRequestReceive
  getNextRequestSend()Lnet/optifine/http/HttpPipelineRequest; = NextRequestSend
  getOutputStream()Ljava/io/OutputStream; = OutputStream
  getPort()I = Port
  getProxy()Ljava/net/Proxy; = Proxy
  addRequest(Lnet/optifine/http/HttpPipelineRequest;)Z = AddRequest(Net.Optifine.Http.HttpPipelineRequest)
  onExceptionReceive(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V = OnExceptionReceive(Net.Optifine.Http.HttpPipelineRequest, Java.Lang.Exception)
  onExceptionSend(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V = OnExceptionSend(Net.Optifine.Http.HttpPipelineRequest, Java.Lang.Exception)
  onRequestSent(Lnet/optifine/http/HttpPipelineRequest;)V = OnRequestSent(Net.Optifine.Http.HttpPipelineRequest)
  onResponseReceived(Lnet/optifine/http/HttpPipelineRequest;Lnet/optifine/http/HttpResponse;)V = OnResponseReceived(Net.Optifine.Http.HttpPipelineRequest, Net.Optifine.Http.HttpResponse)
  setSocket(Ljava/net/Socket;)V = SetSocket(Java.Net.Socket)
net/optifine/http/HttpPipelineConnection = Net.Optifine.Http.HttpPipelineConnection
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  <init>(Ljava/lang/String;ILjava/net/Proxy;)V = .ctor(string, int, Java.Net.Proxy)
  TIMEOUT_CONNECT_MS = TimeoutConnectMs
  TIMEOUT_READ_MS = TimeoutReadMs
  getCountRequests()I = CountRequests
  hasActiveRequests()Z = HasActiveRequests
  getHost()Ljava/lang/String; = Host
  getInputStream()Ljava/io/InputStream; = InputStream
  isClosed()Z = IsClosed
  getNextRequestReceive()Lnet/optifine/http/HttpPipelineRequest; = NextRequestReceive
  getNextRequestSend()Lnet/optifine/http/HttpPipelineRequest; = NextRequestSend
  getOutputStream()Ljava/io/OutputStream; = OutputStream
  getPort()I = Port
  getProxy()Ljava/net/Proxy; = Proxy
  addRequest(Lnet/optifine/http/HttpPipelineRequest;)Z = AddRequest(Net.Optifine.Http.HttpPipelineRequest)
  onExceptionReceive(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V = OnExceptionReceive(Net.Optifine.Http.HttpPipelineRequest, Java.Lang.Exception)
  onExceptionSend(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V = OnExceptionSend(Net.Optifine.Http.HttpPipelineRequest, Java.Lang.Exception)
  onRequestSent(Lnet/optifine/http/HttpPipelineRequest;)V = OnRequestSent(Net.Optifine.Http.HttpPipelineRequest)
  onResponseReceived(Lnet/optifine/http/HttpPipelineRequest;Lnet/optifine/http/HttpResponse;)V = OnResponseReceived(Net.Optifine.Http.HttpPipelineRequest, Net.Optifine.Http.HttpResponse)
  setSocket(Ljava/net/Socket;)V = SetSocket(Java.Net.Socket)
net/optifine/http/HttpPipelineReceiver = Net.Optifine.Http.HttpPipelineReceiver
  <init>(Lnet/optifine/http/HttpPipelineConnection;)V = .ctor(Net.Optifine.Http.HttpPipelineConnection)
  run()V = Run()
net/optifine/http/HttpPipelineReceiver = Net.Optifine.Http.HttpPipelineReceiver
  <init>(Lnet/optifine/http/HttpPipelineConnection;)V = .ctor(Net.Optifine.Http.HttpPipelineConnection)
net/optifine/http/HttpPipelineRequest = Net.Optifine.Http.HttpPipelineRequest
  <init>(Lnet/optifine/http/HttpRequest;Lnet/optifine/http/HttpListener;)V = .ctor(Net.Optifine.Http.HttpRequest, Net.Optifine.Http.IHttpListener)
  isClosed()Z = Closed
  setClosed(Z)V = Closed
  getHttpListener()Lnet/optifine/http/HttpListener; = HttpListener
  getHttpRequest()Lnet/optifine/http/HttpRequest; = HttpRequest
net/optifine/http/HttpPipelineRequest = Net.Optifine.Http.HttpPipelineRequest
  <init>(Lnet/optifine/http/HttpRequest;Lnet/optifine/http/HttpListener;)V = .ctor(Net.Optifine.Http.HttpRequest, Net.Optifine.Http.IHttpListener)
  isClosed()Z = Closed
  setClosed(Z)V = Closed
  getHttpListener()Lnet/optifine/http/HttpListener; = HttpListener
  getHttpRequest()Lnet/optifine/http/HttpRequest; = HttpRequest
net/optifine/http/HttpPipelineSender = Net.Optifine.Http.HttpPipelineSender
  <init>(Lnet/optifine/http/HttpPipelineConnection;)V = .ctor(Net.Optifine.Http.HttpPipelineConnection)
  run()V = Run()
net/optifine/http/HttpPipelineSender = Net.Optifine.Http.HttpPipelineSender
  <init>(Lnet/optifine/http/HttpPipelineConnection;)V = .ctor(Net.Optifine.Http.HttpPipelineConnection)
net/optifine/http/HttpRequest = Net.Optifine.Http.HttpRequest
  <init>(Ljava/lang/String;ILjava/net/Proxy;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;[B)V = .ctor(string, int, Java.Net.Proxy, string, string, string, System.Collections.Generic.IDictionary<string, string>, byte[])
  HTTP_1_0 = Http10
  HTTP_1_1 = Http11
  METHOD_GET = MethodGet
  METHOD_HEAD = MethodHead
  METHOD_POST = MethodPost
  getFile()Ljava/lang/String; = File
  getHeaders()Ljava/util/Map; = Headers
  getHost()Ljava/lang/String; = Host
  getHttp()Ljava/lang/String; = Http
  getMethod()Ljava/lang/String; = Method
  getPort()I = Port
  getProxy()Ljava/net/Proxy; = Proxy
  getRedirects()I = Redirects
  setRedirects(I)V = Redirects
  getBody()[B = GetBody()
net/optifine/http/HttpRequest = Net.Optifine.Http.HttpRequest
  <init>(Ljava/lang/String;ILjava/net/Proxy;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;[B)V = .ctor(string, int, Java.Net.Proxy, string, string, string, System.Collections.Generic.IDictionary<string, string>, byte[])
  HTTP_1_0 = Http10
  HTTP_1_1 = Http11
  METHOD_GET = MethodGet
  METHOD_HEAD = MethodHead
  METHOD_POST = MethodPost
  getFile()Ljava/lang/String; = File
  getHeaders()Ljava/util/Map; = Headers
  getHost()Ljava/lang/String; = Host
  getHttp()Ljava/lang/String; = Http
  getMethod()Ljava/lang/String; = Method
  getPort()I = Port
  getProxy()Ljava/net/Proxy; = Proxy
  getRedirects()I = Redirects
  setRedirects(I)V = Redirects
  getBody()[B = GetBody()
net/optifine/http/HttpResponse = Net.Optifine.Http.HttpResponse
  <init>(ILjava/lang/String;Ljava/util/Map;[B)V = .ctor(int, string, System.Collections.IDictionary, byte[])
  getHeaders()Ljava/util/Map; = Headers
  getStatus()I = Status
  getStatusLine()Ljava/lang/String; = StatusLine
  getBody()[B = GetBody()
  getHeader(Ljava/lang/String;)Ljava/lang/String; = GetHeader(string)
net/optifine/http/HttpResponse = Net.Optifine.Http.HttpResponse
  <init>(ILjava/lang/String;Ljava/util/Map;[B)V = .ctor(int, string, System.Collections.IDictionary, byte[])
  getHeaders()Ljava/util/Map; = Headers
  getStatus()I = Status
  getStatusLine()Ljava/lang/String; = StatusLine
  getBody()[B = GetBody()
  getHeader(Ljava/lang/String;)Ljava/lang/String; = GetHeader(string)
net/optifine/http/HttpUtils = Net.Optifine.Http.HttpUtils
  <init>()V = .ctor()
  POST_URL = PostUrl
  SERVER_URL = ServerUrl
  getPlayerItemsUrl()Ljava/lang/String; = PlayerItemsUrl
  get(Ljava/lang/String;)[B = Get(string)
  post(Ljava/lang/String;Ljava/util/Map;[B)Ljava/lang/String; = Post(string, System.Collections.IDictionary, byte[])
net/optifine/http/HttpUtils = Net.Optifine.Http.HttpUtils
  <init>()V = .ctor()
  POST_URL = PostUrl
  SERVER_URL = ServerUrl
  getPlayerItemsUrl()Ljava/lang/String; = PlayerItemsUrl
  get(Ljava/lang/String;)[B = Get(string)
  post(Ljava/lang/String;Ljava/util/Map;[B)Ljava/lang/String; = Post(string, System.Collections.IDictionary, byte[])
net/optifine/http/IFileDownloadListener = Net.Optifine.Http.IFileDownloadListener
  fileDownloadFinished(Ljava/lang/String;[BLjava/lang/Throwable;)V = FileDownloadFinished(string, byte[], Java.Lang.Throwable)
net/optifine/http/IFileDownloadListener = Net.Optifine.Http.IFileDownloadListener
  fileDownloadFinished(Ljava/lang/String;[BLjava/lang/Throwable;)V = FileDownloadFinished(string, byte[], Java.Lang.Throwable)
net/optifine/http/IFileUploadListener = Net.Optifine.Http.IFileUploadListener
  fileUploadFinished(Ljava/lang/String;[BLjava/lang/Throwable;)V = FileUploadFinished(string, byte[], Java.Lang.Throwable)
net/optifine/http/IFileUploadListener = Net.Optifine.Http.IFileUploadListener
  fileUploadFinished(Ljava/lang/String;[BLjava/lang/Throwable;)V = FileUploadFinished(string, byte[], Java.Lang.Throwable)
net/optifine/IRandomEntity = Net.Optifine.IRandomEntity
  getHealth()I = Health
  getId()I = Id
  getMaxHealth()I = MaxHealth
  getName()Ljava/lang/String; = Name
net/optifine/ItemOverrideCache = Net.Optifine.ItemOverrideCache
  <init>([Lnet/optifine/ItemOverrideProperty;)V = .ctor(Net.Optifine.ItemOverrideProperty[])
  INDEX_NONE = IndexNone
  toString()Ljava/lang/String; = ToString()
net/optifine/ItemOverrideCache = Net.Optifine.ItemOverrideCache
  <init>([Lnet/optifine/ItemOverrideProperty;)V = .ctor(Net.Optifine.ItemOverrideProperty[])
  INDEX_NONE = IndexNone
net/optifine/ItemOverrideProperty = Net.Optifine.ItemOverrideProperty
  getValues()[F = GetValues()
  toString()Ljava/lang/String; = ToString()
net/optifine/ItemOverrideProperty = Net.Optifine.ItemOverrideProperty
  getValues()[F = GetValues()
net/optifine/Lagometer = Net.Optifine.Lagometer
  <init>()V = .ctor()
  active = Active
  timerChunkUpdate = TimerChunkUpdate
  timerChunkUpload = TimerChunkUpload
  timerScheduledExecutables = TimerScheduledExecutables
  timerServer = TimerServer
  timerTerrain = TimerTerrain
  timerTick = TimerTick
  timerVisibility = TimerVisibility
  isActive()Z = IsActive
  updateLagometer()V = UpdateLagometer()
net/optifine/Lagometer = Net.Optifine.Lagometer
  <init>()V = .ctor()
  active = Active
  timerChunkUpdate = TimerChunkUpdate
  timerChunkUpload = TimerChunkUpload
  timerScheduledExecutables = TimerScheduledExecutables
  timerServer = TimerServer
  timerTerrain = TimerTerrain
  timerTick = TimerTick
  timerVisibility = TimerVisibility
  isActive()Z = IsActive
  updateLagometer()V = UpdateLagometer()
net/optifine/Lang = Net.Optifine.Lang
  <init>()V = .ctor()
  getDefault()Ljava/lang/String; = Default
  getFancy()Ljava/lang/String; = Fancy
  getFast()Ljava/lang/String; = Fast
  getOff()Ljava/lang/String; = Off
  getOn()Ljava/lang/String; = On
  get(Ljava/lang/String;)Ljava/lang/String; = Get(string)
  get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = Get(string, string)
  loadLocaleData(Ljava/io/InputStream;Ljava/util/Map;)V = LoadLocaleData(System.IO.Stream, System.Collections.IDictionary)
  resourcesReloaded()V = ResourcesReloaded()
net/optifine/Lang = Net.Optifine.Lang
  <init>()V = .ctor()
  getDefault()Ljava/lang/String; = Default
  getFancy()Ljava/lang/String; = Fancy
  getFast()Ljava/lang/String; = Fast
  getOff()Ljava/lang/String; = Off
  getOn()Ljava/lang/String; = On
  get(Ljava/lang/String;)Ljava/lang/String; = Get(string)
  get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = Get(string, string)
  loadLocaleData(Ljava/io/InputStream;Ljava/util/Map;)V = LoadLocaleData(System.IO.Stream, System.Collections.IDictionary)
  resourcesReloaded()V = ResourcesReloaded()
net/optifine/LightMap = Net.Optifine.LightMap
  <init>(Lnet/optifine/CustomColormap;)V = .ctor(Net.Optifine.CustomColormap)
  getColormap()Lnet/optifine/CustomColormap; = Colormap
net/optifine/LightMap = Net.Optifine.LightMap
  <init>(Lnet/optifine/CustomColormap;)V = .ctor(Net.Optifine.CustomColormap)
  getColormap()Lnet/optifine/CustomColormap; = Colormap
net/optifine/LightMapPack = Net.Optifine.LightMapPack
  <init>(Lnet/optifine/LightMap;Lnet/optifine/LightMap;Lnet/optifine/LightMap;)V = .ctor(Net.Optifine.LightMap, Net.Optifine.LightMap, Net.Optifine.LightMap)
net/optifine/LightMapPack = Net.Optifine.LightMapPack
  <init>(Lnet/optifine/LightMap;Lnet/optifine/LightMap;Lnet/optifine/LightMap;)V = .ctor(Net.Optifine.LightMap, Net.Optifine.LightMap, Net.Optifine.LightMap)
net/optifine/Log = Net.Optifine.Log
  <init>()V = .ctor()
  logDetail = LogDetail
  dbg(Ljava/lang/String;)V = Dbg(string)
  detail(Ljava/lang/String;)V = Detail(string)
  error(Ljava/lang/String;)V = Error(string)
  error(Ljava/lang/String;Ljava/lang/Throwable;)V = Error(string, Java.Lang.Throwable)
  log(Ljava/lang/String;)V = InvokeLog(string)
  warn(Ljava/lang/String;)V = Warn(string)
  warn(Ljava/lang/String;Ljava/lang/Throwable;)V = Warn(string, Java.Lang.Throwable)
net/optifine/Log = Net.Optifine.Log
  <init>()V = .ctor()
  logDetail = LogDetail
  dbg(Ljava/lang/String;)V = Dbg(string)
  detail(Ljava/lang/String;)V = Detail(string)
  error(Ljava/lang/String;)V = Error(string)
  error(Ljava/lang/String;Ljava/lang/Throwable;)V = Error(string, Java.Lang.Throwable)
  log(Ljava/lang/String;)V = InvokeLog(string)
  warn(Ljava/lang/String;)V = Warn(string)
  warn(Ljava/lang/String;Ljava/lang/Throwable;)V = Warn(string, Java.Lang.Throwable)
net/optifine/McDebugInfo = Net.Optifine.McDebugInfo
  <init>()V = .ctor()
  isChanged()Z = IsChanged
net/optifine/McDebugInfo = Net.Optifine.McDebugInfo
  <init>()V = .ctor()
  isChanged()Z = IsChanged
net/optifine/Mipmaps = Net.Optifine.Mipmaps
  <init>(Ljava/lang/String;II[IZ)V = .ctor(string, int, int, int[], bool)
  allocateMipmapTextures(IILjava/lang/String;)V = AllocateMipmapTextures(int, int, string)
  alphaBlend(IIII)I = AlphaBlend(int, int, int, int)
net/optifine/Mipmaps = Net.Optifine.Mipmaps
  <init>(Ljava/lang/String;II[IZ)V = .ctor(string, int, int, int[], bool)
  allocateMipmapTextures(IILjava/lang/String;)V = AllocateMipmapTextures(int, int, string)
  alphaBlend(IIII)I = AlphaBlend(int, int, int, int)
net/optifine/model/Attachment = Net.Optifine.Model.Attachment
  <init>(Lnet/optifine/model/AttachmentType;[F)V = .ctor(Net.Optifine.Model.AttachmentType, float[])
  getType()Lnet/optifine/model/AttachmentType; = Type
  getTranslate()[F = GetTranslate()
  toString()Ljava/lang/String; = ToString()
net/optifine/model/Attachment = Net.Optifine.Model.Attachment
  <init>(Lnet/optifine/model/AttachmentType;[F)V = .ctor(Net.Optifine.Model.AttachmentType, float[])
  getType()Lnet/optifine/model/AttachmentType; = Type
  getTranslate()[F = GetTranslate()
net/optifine/model/AttachmentPath = Net.Optifine.Model.AttachmentPath
  getAttachment()Lnet/optifine/model/Attachment; = Attachment
  isVisible()Z = IsVisible
  toString()Ljava/lang/String; = ToString()
net/optifine/model/AttachmentPath = Net.Optifine.Model.AttachmentPath
  getAttachment()Lnet/optifine/model/Attachment; = Attachment
  isVisible()Z = IsVisible
net/optifine/model/AttachmentPaths = Net.Optifine.Model.AttachmentPaths
  <init>()V = .ctor()
  isEmpty()Z = IsEmpty
  addPath(Lnet/optifine/model/AttachmentPath;)V = AddPath(Net.Optifine.Model.AttachmentPath)
  getVisiblePath(Lnet/optifine/model/AttachmentType;)Lnet/optifine/model/AttachmentPath; = GetVisiblePath(Net.Optifine.Model.AttachmentType)
  toString()Ljava/lang/String; = ToString()
net/optifine/model/AttachmentPaths = Net.Optifine.Model.AttachmentPaths
  <init>()V = .ctor()
  isEmpty()Z = IsEmpty
  addPath(Lnet/optifine/model/AttachmentPath;)V = AddPath(Net.Optifine.Model.AttachmentPath)
  getVisiblePath(Lnet/optifine/model/AttachmentType;)Lnet/optifine/model/AttachmentPath; = GetVisiblePath(Net.Optifine.Model.AttachmentType)
net/optifine/model/AttachmentType = Net.Optifine.Model.AttachmentType
  HANDHELD_ITEM = HandheldItem
  HEAD = Head
  LEAD = Lead
  LEFT_HANDHELD_ITEM = LeftHandheldItem
  RIGHT_HANDHELD_ITEM = RightHandheldItem
  getName()Ljava/lang/String; = Name
  parse(Ljava/lang/String;)Lnet/optifine/model/AttachmentType; = Parse(string)
  toString()Ljava/lang/String; = ToString()
  valueOf(Ljava/lang/String;)Lnet/optifine/model/AttachmentType; = ValueOf(string)
  values()[Lnet/optifine/model/AttachmentType; = Values()
net/optifine/model/AttachmentType = Net.Optifine.Model.AttachmentType
  HANDHELD_ITEM = HandheldItem
  HEAD = Head
  LEAD = Lead
  LEFT_HANDHELD_ITEM = LeftHandheldItem
  RIGHT_HANDHELD_ITEM = RightHandheldItem
  getName()Ljava/lang/String; = Name
  parse(Ljava/lang/String;)Lnet/optifine/model/AttachmentType; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/model/AttachmentType; = ValueOf(string)
  values()[Lnet/optifine/model/AttachmentType; = Values()
net/optifine/model/BlockModelCustomizer = Net.Optifine.Model.BlockModelCustomizer
  <init>()V = .ctor()
net/optifine/model/BlockModelCustomizer = Net.Optifine.Model.BlockModelCustomizer
  <init>()V = .ctor()
net/optifine/model/BlockModelUtils = Net.Optifine.Model.BlockModelUtils
  <init>()V = .ctor()
net/optifine/model/BlockModelUtils = Net.Optifine.Model.BlockModelUtils
  <init>()V = .ctor()
net/optifine/model/ListQuadsOverlay = Net.Optifine.Model.ListQuadsOverlay
  <init>()V = .ctor()
  clear()V = Clear()
  size()I = Size()
net/optifine/model/ListQuadsOverlay = Net.Optifine.Model.ListQuadsOverlay
  <init>()V = .ctor()
  clear()V = Clear()
  size()I = Size()
net/optifine/model/ModelSprite = Net.Optifine.Model.ModelSprite
net/optifine/model/ModelSprite = Net.Optifine.Model.ModelSprite
net/optifine/model/ModelUtils = Net.Optifine.Model.ModelUtils
  <init>()V = .ctor()
  dbgVertexData([ILjava/lang/String;)V = DbgVertexData(int[], string)
net/optifine/model/ModelUtils = Net.Optifine.Model.ModelUtils
  <init>()V = .ctor()
  dbgVertexData([ILjava/lang/String;)V = DbgVertexData(int[], string)
net/optifine/model/QuadBounds = Net.Optifine.Model.QuadBounds
  <init>([I)V = .ctor(int[])
  getMaxX()F = MaxX
  getMaxY()F = MaxY
  getMaxZ()F = MaxZ
  getMinX()F = MinX
  getMinY()F = MinY
  getMinZ()F = MinZ
net/optifine/model/QuadBounds = Net.Optifine.Model.QuadBounds
  <init>([I)V = .ctor(int[])
  getMaxX()F = MaxX
  getMaxY()F = MaxY
  getMaxZ()F = MaxZ
  getMinX()F = MinX
  getMinY()F = MinY
  getMinZ()F = MinZ
net/optifine/NaturalProperties = Net.Optifine.NaturalProperties
  <init>(Ljava/lang/String;)V = .ctor(string)
  flip = Flip
  rotation = Rotation
  isValid()Z = IsValid
net/optifine/NaturalProperties = Net.Optifine.NaturalProperties
  <init>(Ljava/lang/String;)V = .ctor(string)
  flip = Flip
  rotation = Rotation
  isValid()Z = IsValid
net/optifine/NaturalTextures = Net.Optifine.NaturalTextures
  <init>()V = .ctor()
  update()V = Update()
net/optifine/NaturalTextures = Net.Optifine.NaturalTextures
  <init>()V = .ctor()
  update()V = Update()
net/optifine/override/ChunkCacheOF = Net.Optifine.Override.ChunkCacheOF
  getHeight()I = Height
  getMinBuildHeight()I = MinBuildHeight
  getRenderEnv()Lnet/optifine/render/RenderEnv; = RenderEnv
  setRenderEnv(Lnet/optifine/render/RenderEnv;)V = RenderEnv
  renderFinish()V = RenderFinish()
  renderStart()V = RenderStart()
net/optifine/player/CapeImageBuffer = Net.Optifine.Player.CapeImageBuffer
  isElytraOfCape()Z = IsElytraOfCape
  cleanup()V = Cleanup()
  run()V = Run()
  skinAvailable()V = SkinAvailable()
net/optifine/player/CapeImageBuffer = Net.Optifine.Player.CapeImageBuffer
  isElytraOfCape()Z = IsElytraOfCape
  cleanup()V = Cleanup()
  run()V = Run()
  skinAvailable()V = SkinAvailable()
net/optifine/player/CapeUtils = Net.Optifine.Player.CapeUtils
  <init>()V = .ctor()
net/optifine/player/CapeUtils = Net.Optifine.Player.CapeUtils
  <init>()V = .ctor()
net/optifine/player/PlayerConfiguration = Net.Optifine.Player.PlayerConfiguration
  <init>()V = .ctor()
  isInitialized()Z = Initialized
  setInitialized(Z)V = Initialized
  addPlayerItemModel(Lnet/optifine/player/PlayerItemModel;)V = AddPlayerItemModel(Net.Optifine.Player.PlayerItemModel)
  getPlayerItemModels()[Lnet/optifine/player/PlayerItemModel; = GetPlayerItemModels()
net/optifine/player/PlayerConfiguration = Net.Optifine.Player.PlayerConfiguration
  <init>()V = .ctor()
  isInitialized()Z = Initialized
  setInitialized(Z)V = Initialized
  addPlayerItemModel(Lnet/optifine/player/PlayerItemModel;)V = AddPlayerItemModel(Net.Optifine.Player.PlayerItemModel)
  getPlayerItemModels()[Lnet/optifine/player/PlayerItemModel; = GetPlayerItemModels()
net/optifine/player/PlayerConfigurationParser = Net.Optifine.Player.PlayerConfigurationParser
  <init>(Ljava/lang/String;)V = .ctor(string)
  CONFIG_ITEMS = ConfigItems
  ITEM_ACTIVE = ItemActive
  ITEM_TYPE = ItemType
net/optifine/player/PlayerConfigurationParser = Net.Optifine.Player.PlayerConfigurationParser
  <init>(Ljava/lang/String;)V = .ctor(string)
  CONFIG_ITEMS = ConfigItems
  ITEM_ACTIVE = ItemActive
  ITEM_TYPE = ItemType
net/optifine/player/PlayerConfigurationReceiver = Net.Optifine.Player.PlayerConfigurationReceiver
  <init>(Ljava/lang/String;)V = .ctor(string)
  fileDownloadFinished(Ljava/lang/String;[BLjava/lang/Throwable;)V = FileDownloadFinished(string, byte[], Java.Lang.Throwable)
net/optifine/player/PlayerConfigurationReceiver = Net.Optifine.Player.PlayerConfigurationReceiver
  <init>(Ljava/lang/String;)V = .ctor(string)
  fileDownloadFinished(Ljava/lang/String;[BLjava/lang/Throwable;)V = FileDownloadFinished(string, byte[], Java.Lang.Throwable)
net/optifine/player/PlayerConfigurations = Net.Optifine.Player.PlayerConfigurations
  <init>()V = .ctor()
  setPlayerConfiguration(Ljava/lang/String;Lnet/optifine/player/PlayerConfiguration;)V = SetPlayerConfiguration(string, Net.Optifine.Player.PlayerConfiguration)
net/optifine/player/PlayerConfigurations = Net.Optifine.Player.PlayerConfigurations
  <init>()V = .ctor()
  setPlayerConfiguration(Ljava/lang/String;Lnet/optifine/player/PlayerConfiguration;)V = SetPlayerConfiguration(string, Net.Optifine.Player.PlayerConfiguration)
net/optifine/player/PlayerItemModel = Net.Optifine.Player.PlayerItemModel
  ATTACH_BODY = AttachBody
  ATTACH_CAPE = AttachCape
  ATTACH_HEAD = AttachHead
  ATTACH_LEFT_ARM = AttachLeftArm
  ATTACH_LEFT_LEG = AttachLeftLeg
  ATTACH_RIGHT_ARM = AttachRightArm
  ATTACH_RIGHT_LEG = AttachRightLeg
  isUsePlayerTexture()Z = IsUsePlayerTexture
net/optifine/player/PlayerItemModel = Net.Optifine.Player.PlayerItemModel
  ATTACH_BODY = AttachBody
  ATTACH_CAPE = AttachCape
  ATTACH_HEAD = AttachHead
  ATTACH_LEFT_ARM = AttachLeftArm
  ATTACH_LEFT_LEG = AttachLeftLeg
  ATTACH_RIGHT_ARM = AttachRightArm
  ATTACH_RIGHT_LEG = AttachRightLeg
  isUsePlayerTexture()Z = IsUsePlayerTexture
net/optifine/player/PlayerItemParser = Net.Optifine.Player.PlayerItemParser
  BOX_COORDINATES = BoxCoordinates
  BOX_SIZE_ADD = BoxSizeAdd
  BOX_TEXTURE_OFFSET = BoxTextureOffset
  BOX_UV_BACK = BoxUvBack
  BOX_UV_DOWN = BoxUvDown
  BOX_UV_EAST = BoxUvEast
  BOX_UV_FRONT = BoxUvFront
  BOX_UV_LEFT = BoxUvLeft
  BOX_UV_NORTH = BoxUvNorth
  BOX_UV_RIGHT = BoxUvRight
  BOX_UV_SOUTH = BoxUvSouth
  BOX_UV_UP = BoxUvUp
  BOX_UV_WEST = BoxUvWest
  ITEM_MODELS = ItemModels
  ITEM_TEXTURE_SIZE = ItemTextureSize
  ITEM_TYPE = ItemType
  ITEM_TYPE_MODEL = ItemTypeModel
  ITEM_USE_PLAYER_TEXTURE = ItemUsePlayerTexture
  MODEL_ATTACHMENTS = ModelAttachments
  MODEL_ATTACH_TO = ModelAttachTo
  MODEL_BASE_ID = ModelBaseId
  MODEL_BOXES = ModelBoxes
  MODEL_ID = ModelId
  MODEL_INVERT_AXIS = ModelInvertAxis
  MODEL_MIRROR_TEXTURE = ModelMirrorTexture
  MODEL_ROTATE = ModelRotate
  MODEL_SCALE = ModelScale
  MODEL_SPRITES = ModelSprites
  MODEL_SUBMODEL = ModelSubmodel
  MODEL_SUBMODELS = ModelSubmodels
  MODEL_TEXTURE = ModelTexture
  MODEL_TEXTURE_SIZE = ModelTextureSize
  MODEL_TRANSLATE = ModelTranslate
  MODEL_TYPE = ModelType
  MODEL_TYPE_BOX = ModelTypeBox
  getNextModelId()Ljava/lang/String; = NextModelId
net/optifine/player/PlayerItemParser = Net.Optifine.Player.PlayerItemParser
  BOX_COORDINATES = BoxCoordinates
  BOX_SIZE_ADD = BoxSizeAdd
  BOX_TEXTURE_OFFSET = BoxTextureOffset
  BOX_UV_BACK = BoxUvBack
  BOX_UV_DOWN = BoxUvDown
  BOX_UV_EAST = BoxUvEast
  BOX_UV_FRONT = BoxUvFront
  BOX_UV_LEFT = BoxUvLeft
  BOX_UV_NORTH = BoxUvNorth
  BOX_UV_RIGHT = BoxUvRight
  BOX_UV_SOUTH = BoxUvSouth
  BOX_UV_UP = BoxUvUp
  BOX_UV_WEST = BoxUvWest
  ITEM_MODELS = ItemModels
  ITEM_TEXTURE_SIZE = ItemTextureSize
  ITEM_TYPE = ItemType
  ITEM_TYPE_MODEL = ItemTypeModel
  ITEM_USE_PLAYER_TEXTURE = ItemUsePlayerTexture
  MODEL_ATTACHMENTS = ModelAttachments
  MODEL_ATTACH_TO = ModelAttachTo
  MODEL_BASE_ID = ModelBaseId
  MODEL_BOXES = ModelBoxes
  MODEL_ID = ModelId
  MODEL_INVERT_AXIS = ModelInvertAxis
  MODEL_MIRROR_TEXTURE = ModelMirrorTexture
  MODEL_ROTATE = ModelRotate
  MODEL_SCALE = ModelScale
  MODEL_SPRITES = ModelSprites
  MODEL_SUBMODEL = ModelSubmodel
  MODEL_SUBMODELS = ModelSubmodels
  MODEL_TEXTURE = ModelTexture
  MODEL_TEXTURE_SIZE = ModelTextureSize
  MODEL_TRANSLATE = ModelTranslate
  MODEL_TYPE = ModelType
  MODEL_TYPE_BOX = ModelTypeBox
  getNextModelId()Ljava/lang/String; = NextModelId
net/optifine/player/PlayerItemRenderer = Net.Optifine.Player.PlayerItemRenderer
net/optifine/player/PlayerItemRenderer = Net.Optifine.Player.PlayerItemRenderer
net/optifine/QuickInfo = Net.Optifine.QuickInfo
  <init>()V = .ctor()
net/optifine/QuickInfo = Net.Optifine.QuickInfo
  <init>()V = .ctor()
net/optifine/RandomEntities = Net.Optifine.RandomEntities
  <init>()V = .ctor()
  PREFIX_OPTIFINE = PrefixOptifine
  PREFIX_OPTIFINE_MOB = PrefixOptifineMob
  PREFIX_OPTIFINE_RANDOM = PrefixOptifineRandom
  PREFIX_TEXTURES = PrefixTextures
  PREFIX_TEXTURES_ENTITY = PrefixTexturesEntity
  PREFIX_TEXTURES_PAINTING = PrefixTexturesPainting
  SEPARATOR_DIGITS = SeparatorDigits
  SUFFIX_PNG = SuffixPng
  SUFFIX_PROPERTIES = SuffixProperties
  getRandomEntityRendered()Lnet/optifine/IRandomEntity; = RandomEntityRendered
  dbg(Ljava/lang/String;)V = Dbg(string)
  update()V = Update()
  warn(Ljava/lang/String;)V = Warn(string)
net/optifine/RandomEntities = Net.Optifine.RandomEntities
  <init>()V = .ctor()
  PREFIX_OPTIFINE = PrefixOptifine
  PREFIX_OPTIFINE_MOB = PrefixOptifineMob
  PREFIX_OPTIFINE_RANDOM = PrefixOptifineRandom
  PREFIX_TEXTURES = PrefixTextures
  PREFIX_TEXTURES_ENTITY = PrefixTexturesEntity
  PREFIX_TEXTURES_PAINTING = PrefixTexturesPainting
  SEPARATOR_DIGITS = SeparatorDigits
  SUFFIX_PNG = SuffixPng
  SUFFIX_PROPERTIES = SuffixProperties
  getRandomEntityRendered()Lnet/optifine/IRandomEntity; = RandomEntityRendered
  dbg(Ljava/lang/String;)V = Dbg(string)
  update()V = Update()
  warn(Ljava/lang/String;)V = Warn(string)
net/optifine/RandomEntity = Net.Optifine.RandomEntity
  <init>()V = .ctor()
  getHealth()I = Health
  getId()I = Id
  getMaxHealth()I = MaxHealth
  getName()Ljava/lang/String; = Name
  toString()Ljava/lang/String; = ToString()
net/optifine/RandomEntity = Net.Optifine.RandomEntity
  <init>()V = .ctor()
  getHealth()I = Health
  getId()I = Id
  getMaxHealth()I = MaxHealth
  getName()Ljava/lang/String; = Name
net/optifine/RandomEntityContext = Net.Optifine.IRandomEntityContext
  getConnectedParser()Lnet/optifine/config/ConnectedParser; = ConnectedParser
  getName()Ljava/lang/String; = Name
  getResourceName()Ljava/lang/String; = ResourceName
  getResourceNameCapital()Ljava/lang/String; = ResourceNameCapital
  getResourceNamePlural()Ljava/lang/String; = ResourceNamePlural
  getResourceKeys()[Ljava/lang/String; = GetResourceKeys()
net/optifine/RandomEntityProperties = Net.Optifine.RandomEntityProperties
  getAllResources()Ljava/util/List; = AllResources
  getBasePath()Ljava/lang/String; = BasePath
  isDefault()Z = IsDefault
  getMatchingRuleIndex()I = MatchingRuleIndex
  getName()Ljava/lang/String; = Name
  getResource(Lnet/optifine/IRandomEntity;Ljava/lang/Object;)Ljava/lang/Object; = GetResource(Net.Optifine.IRandomEntity, Java.Lang.Object)
  getResources()[Ljava/lang/Object; = GetResources()
  isValid(Ljava/lang/String;)Z = IsValid(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/RandomEntityProperties = Net.Optifine.RandomEntityProperties
  getAllResources()Ljava/util/List; = AllResources
  getBasePath()Ljava/lang/String; = BasePath
  isDefault()Z = IsDefault
  getMatchingRuleIndex()I = MatchingRuleIndex
  getName()Ljava/lang/String; = Name
  getResource(Lnet/optifine/IRandomEntity;Ljava/lang/Object;)Ljava/lang/Object; = GetResource(Net.Optifine.IRandomEntity, Java.Lang.Object)
  getResources()[Ljava/lang/Object; = GetResources()
  isValid(Ljava/lang/String;)Z = IsValid(string)
net/optifine/RandomEntityRule = Net.Optifine.RandomEntityRule
  blocks = Blocks
  nbtTagValues = NbtTagValues
  sumAllWeights = SumAllWeights
  sumWeights = SumWeights
  getIndex()I = Index
  getResource(ILjava/lang/Object;)Ljava/lang/Object; = GetResource(int, Java.Lang.Object)
  getResources()[Ljava/lang/Object; = GetResources()
  isValid(Ljava/lang/String;)Z = IsValid(string)
  matches(Lnet/optifine/IRandomEntity;)Z = Matches(Net.Optifine.IRandomEntity)
net/optifine/RandomEntityRule = Net.Optifine.RandomEntityRule
  blocks = Blocks
  nbtTagValues = NbtTagValues
  sumAllWeights = SumAllWeights
  sumWeights = SumWeights
  getIndex()I = Index
  getResource(ILjava/lang/Object;)Ljava/lang/Object; = GetResource(int, Java.Lang.Object)
  getResources()[Ljava/lang/Object; = GetResources()
  isValid(Ljava/lang/String;)Z = IsValid(string)
  matches(Lnet/optifine/IRandomEntity;)Z = Matches(Net.Optifine.IRandomEntity)
net/optifine/RandomTileEntity = Net.Optifine.RandomTileEntity
  <init>()V = .ctor()
  getHealth()I = Health
  getId()I = Id
  getMaxHealth()I = MaxHealth
  getName()Ljava/lang/String; = Name
  toString()Ljava/lang/String; = ToString()
net/optifine/RandomTileEntity = Net.Optifine.RandomTileEntity
  <init>()V = .ctor()
  getHealth()I = Health
  getId()I = Id
  getMaxHealth()I = MaxHealth
  getName()Ljava/lang/String; = Name
net/optifine/reflect/FieldLocatorFixed = Net.Optifine.Reflect.FieldLocatorFixed
  <init>(Ljava/lang/reflect/Field;)V = .ctor(Java.Lang.Reflect.Field)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/FieldLocatorFixed = Net.Optifine.Reflect.FieldLocatorFixed
  <init>(Ljava/lang/reflect/Field;)V = .ctor(Java.Lang.Reflect.Field)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/FieldLocatorName = Net.Optifine.Reflect.FieldLocatorName
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/FieldLocatorName = Net.Optifine.Reflect.FieldLocatorName
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/FieldLocatorType = Net.Optifine.Reflect.FieldLocatorType
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class, int)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/FieldLocatorType = Net.Optifine.Reflect.FieldLocatorType
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class, int)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/FieldLocatorTypes = Net.Optifine.Reflect.FieldLocatorTypes
  <init>(Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class, Java.Lang.Class[], Java.Lang.Class, Java.Lang.Class[], string)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/FieldLocatorTypes = Net.Optifine.Reflect.FieldLocatorTypes
  <init>(Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class, Java.Lang.Class[], Java.Lang.Class, Java.Lang.Class[], string)
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/IFieldLocator = Net.Optifine.Reflect.IFieldLocator
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/IFieldLocator = Net.Optifine.Reflect.IFieldLocator
  getField()Ljava/lang/reflect/Field; = Field
net/optifine/reflect/IResolvable = Net.Optifine.Reflect.IResolvable
  resolve()V = Resolve()
net/optifine/reflect/IResolvable = Net.Optifine.Reflect.IResolvable
  resolve()V = Resolve()
net/optifine/reflect/Reflector = Net.Optifine.Reflect.Reflector
  <init>()V = .ctor()
  AbstractArrow = AbstractArrow
  AbstractArrow_inGround = AbstractArrowInGround
  BannerBlockEntity = BannerBlockEntity
  BannerBlockEntity_customName = BannerBlockEntityCustomName
  BaseContainerBlockEntity = BaseContainerBlockEntity
  BaseContainerBlockEntity_customName = BaseContainerBlockEntityCustomName
  BrandingControl = BrandingControl
  BrandingControl_forEachAboveCopyrightLine = BrandingControlForEachAboveCopyrightLine
  BrandingControl_forEachLine = BrandingControlForEachLine
  BrandingControl_getBranding = BrandingControlGetBranding
  BrandingControl_getBrandings = BrandingControlGetBrandings
  CapabilityProvider = CapabilityProvider
  CapabilityProvider_gatherCapabilities = CapabilityProviderGatherCapabilities
  ChunkEvent_Load = ChunkEventLoad
  ChunkEvent_Load_Constructor = ChunkEventLoadConstructor
  ChunkEvent_Unload = ChunkEventUnload
  ChunkEvent_Unload_Constructor = ChunkEventUnloadConstructor
  ClientModLoader = ClientModLoader
  ClientModLoader_isLoading = ClientModLoaderIsLoading
  ColorResolverManager = ColorResolverManager
  ColorResolverManager_registerBlockTintCaches = ColorResolverManagerRegisterBlockTintCaches
  CrashReportAnalyser = CrashReportAnalyser
  CrashReportAnalyser_appendSuspectedMods = CrashReportAnalyserAppendSuspectedMods
  CrashReportExtender = CrashReportExtender
  CrashReportExtender_extendSystemReport = CrashReportExtenderExtendSystemReport
  CrashReportExtender_generateEnhancedStackTraceSTE = CrashReportExtenderGenerateEnhancedStackTraceSTE
  CrashReportExtender_generateEnhancedStackTraceT = CrashReportExtenderGenerateEnhancedStackTraceT
  CustomizeGuiOverlayEvent_BossEventProgress = CustomizeGuiOverlayEventBossEventProgress
  CustomizeGuiOverlayEvent_BossEventProgress_getIncrement = CustomizeGuiOverlayEventBossEventProgressGetIncrement
  Enchantments = Enchantments
  Enchantments_ResourceKeys = EnchantmentsResourceKeys
  EnderDragonRenderer = EnderDragonRenderer
  EnderDragonRenderer_model = EnderDragonRendererModel
  EntityItem = EntityItem
  EntityItem_ITEM = EntityItemITEM
  EntityRenderersEvent_CreateSkullModels = EntityRenderersEventCreateSkullModels
  EntityRenderersEvent_CreateSkullModels_Constructor = EntityRenderersEventCreateSkullModelsConstructor
  EventBus = EventBus
  EventBus_post = EventBusPost
  ForgeBlockElementFace = ForgeBlockElementFace
  ForgeBlockElementFace_data = ForgeBlockElementFaceData
  ForgeBlockModelShapes = ForgeBlockModelShapes
  ForgeBlockModelShapes_getTexture3 = ForgeBlockModelShapesGetTexture3
  ForgeConfig = ForgeConfig
  ForgeConfig_Client = ForgeConfigClient
  ForgeConfig_CLIENT = ForgeConfigCLIENT
  ForgeConfig_Client_calculateAllNormals = ForgeConfigClientCalculateAllNormals
  ForgeConfig_Client_forgeLightPipelineEnabled = ForgeConfigClientForgeLightPipelineEnabled
  ForgeConfig_Client_useCombinedDepthStencilAttachment = ForgeConfigClientUseCombinedDepthStencilAttachment
  ForgeConfigSpec = ForgeConfigSpec
  ForgeConfigSpec_childConfig = ForgeConfigSpecChildConfig
  ForgeConfigSpec_ConfigValue = ForgeConfigSpecConfigValue
  ForgeConfigSpec_ConfigValue_defaultSupplier = ForgeConfigSpecConfigValueDefaultSupplier
  ForgeConfigSpec_ConfigValue_get = ForgeConfigSpecConfigValueGet
  ForgeConfigSpec_ConfigValue_spec = ForgeConfigSpecConfigValueSpec
  ForgeEventFactory = ForgeEventFactory
  ForgeEventFactory_canEntityDespawn = ForgeEventFactoryCanEntityDespawn
  ForgeEventFactoryClient = ForgeEventFactoryClient
  ForgeEventFactoryClient_fireComputeCameraAngles = ForgeEventFactoryClientFireComputeCameraAngles
  ForgeEventFactoryClient_fireComputeFov = ForgeEventFactoryClientFireComputeFov
  ForgeEventFactoryClient_fireRenderNameTagEvent = ForgeEventFactoryClientFireRenderNameTagEvent
  ForgeEventFactoryClient_onGatherLayers = ForgeEventFactoryClientOnGatherLayers
  ForgeEventFactoryClient_onRegisterShaders = ForgeEventFactoryClientOnRegisterShaders
  ForgeEventFactoryClient_onRenderItemInFrame = ForgeEventFactoryClientOnRenderItemInFrame
  ForgeEventFactoryClient_onRenderLivingPost = ForgeEventFactoryClientOnRenderLivingPost
  ForgeEventFactoryClient_onRenderLivingPre = ForgeEventFactoryClientOnRenderLivingPre
  ForgeEventFactoryClient_onScreenshot = ForgeEventFactoryClientOnScreenshot
  ForgeEventFactory_fireChunkTicketLevelUpdated = ForgeEventFactoryFireChunkTicketLevelUpdated
  ForgeEventFactory_getMobGriefingEvent = ForgeEventFactoryGetMobGriefingEvent
  ForgeEventFactory_onChunkDataSave = ForgeEventFactoryOnChunkDataSave
  ForgeEventFactory_onChunkLoad = ForgeEventFactoryOnChunkLoad
  ForgeEventFactory_onChunkUnload = ForgeEventFactoryOnChunkUnload
  ForgeEventFactory_onDifficultyChange = ForgeEventFactoryOnDifficultyChange
  ForgeEventFactory_onEntityJoinLevel = ForgeEventFactoryOnEntityJoinLevel
  ForgeEventFactory_onEntityLeaveLevel = ForgeEventFactoryOnEntityLeaveLevel
  ForgeEventFactory_onLevelLoad = ForgeEventFactoryOnLevelLoad
  ForgeEventFactory_onLivingChangeTargetMob = ForgeEventFactoryOnLivingChangeTargetMob
  ForgeEventFactory_onPlaySoundAtEntity = ForgeEventFactoryOnPlaySoundAtEntity
  ForgeEventFactory_onPlaySoundAtPosition = ForgeEventFactoryOnPlaySoundAtPosition
  ForgeFaceData = ForgeFaceData
  ForgeFaceData_calculateNormals = ForgeFaceDataCalculateNormals
  ForgeHooks = ForgeHooks
  ForgeHooksClient = ForgeHooksClient
  ForgeHooksClient_dispatchRenderStageRT = ForgeHooksClientDispatchRenderStageRT
  ForgeHooksClient_drawScreen = ForgeHooksClientDrawScreen
  ForgeHooksClient_fillNormal = ForgeHooksClientFillNormal
  ForgeHooksClient_gatherTooltipComponents6 = ForgeHooksClientGatherTooltipComponents6
  ForgeHooksClient_gatherTooltipComponents7 = ForgeHooksClientGatherTooltipComponents7
  ForgeHooksClient_gatherTooltipComponentsFromElements = ForgeHooksClientGatherTooltipComponentsFromElements
  ForgeHooksClient_getArmorModel = ForgeHooksClientGetArmorModel
  ForgeHooksClient_getArmorTexture = ForgeHooksClientGetArmorTexture
  ForgeHooksClient_getFieldOfViewModifier = ForgeHooksClientGetFieldOfViewModifier
  ForgeHooksClient_getFluidSprites = ForgeHooksClientGetFluidSprites
  ForgeHooksClient_getFogColor = ForgeHooksClientGetFogColor
  ForgeHooksClient_getGuiFarPlane = ForgeHooksClientGetGuiFarPlane
  ForgeHooksClient_getShaderImportLocation = ForgeHooksClientGetShaderImportLocation
  ForgeHooksClient_isNameplateInRenderDistance = ForgeHooksClientIsNameplateInRenderDistance
  ForgeHooksClient_loadEntityShader = ForgeHooksClientLoadEntityShader
  ForgeHooksClient_loadSpriteContents = ForgeHooksClientLoadSpriteContents
  ForgeHooksClient_loadTextureAtlasSprite = ForgeHooksClientLoadTextureAtlasSprite
  ForgeHooksClient_makeParticleRenderTypeComparator = ForgeHooksClientMakeParticleRenderTypeComparator
  ForgeHooksClient_onCustomizeBossEventProgress = ForgeHooksClientOnCustomizeBossEventProgress
  ForgeHooksClient_onCustomizeChatEvent = ForgeHooksClientOnCustomizeChatEvent
  ForgeHooksClient_onCustomizeDebugEvent = ForgeHooksClientOnCustomizeDebugEvent
  ForgeHooksClient_onDrawHighlight = ForgeHooksClientOnDrawHighlight
  ForgeHooksClient_onFogRender = ForgeHooksClientOnFogRender
  ForgeHooksClient_onKeyInput = ForgeHooksClientOnKeyInput
  ForgeHooksClient_onRegisterAdditionalModels = ForgeHooksClientOnRegisterAdditionalModels
  ForgeHooksClient_onRenderTooltipColor = ForgeHooksClientOnRenderTooltipColor
  ForgeHooksClient_onRenderTooltipPre = ForgeHooksClientOnRenderTooltipPre
  ForgeHooksClient_onScreenCharTyped = ForgeHooksClientOnScreenCharTyped
  ForgeHooksClient_onScreenKeyPressed = ForgeHooksClientOnScreenKeyPressed
  ForgeHooksClient_onScreenKeyReleased = ForgeHooksClientOnScreenKeyReleased
  ForgeHooksClient_onTextureStitchedPost = ForgeHooksClientOnTextureStitchedPost
  ForgeHooksClient_renderBlockOverlay = ForgeHooksClientRenderBlockOverlay
  ForgeHooksClient_renderFireOverlay = ForgeHooksClientRenderFireOverlay
  ForgeHooksClient_renderMainMenu = ForgeHooksClientRenderMainMenu
  ForgeHooksClient_renderSpecificFirstPersonHand = ForgeHooksClientRenderSpecificFirstPersonHand
  ForgeHooksClient_renderWaterOverlay = ForgeHooksClientRenderWaterOverlay
  ForgeHooksClient_shouldCauseReequipAnimation = ForgeHooksClientShouldCauseReequipAnimation
  ForgeHooks_getDyeColorFromItemStack = ForgeHooksGetDyeColorFromItemStack
  ForgeIChunk = ForgeIChunk
  ForgeIChunk_getWorldForge = ForgeIChunkGetWorldForge
  ForgeItemModelShaper = ForgeItemModelShaper
  ForgeItemModelShaper_Constructor = ForgeItemModelShaperConstructor
  ForgeItemTags = ForgeItemTags
  ForgeItemTags_create = ForgeItemTagsCreate
  ForgeKeyBinding = ForgeKeyBinding
  ForgeKeyBinding_getKeyModifier = ForgeKeyBindingGetKeyModifier
  ForgeKeyBinding_setKeyConflictContext = ForgeKeyBindingSetKeyConflictContext
  ForgeKeyBinding_setKeyModifierAndCode = ForgeKeyBindingSetKeyModifierAndCode
  ForgeModelBlockRenderer = ForgeModelBlockRenderer
  ForgeModelBlockRenderer_Constructor = ForgeModelBlockRendererConstructor
  ForgeTicket = ForgeTicket
  ForgeTicket_forceTicks = ForgeTicketForceTicks
  ForgeTicket_isForceTicks = ForgeTicketIsForceTicks
  ForgeVersion = ForgeVersion
  ForgeVersion_getVersion = ForgeVersionGetVersion
  GuiEnchantment = GuiEnchantment
  GuiEnchantment_bookModel = GuiEnchantmentBookModel
  IForgeBlockEntity = IForgeBlockEntity
  IForgeBlockEntity_getRenderBoundingBox = IForgeBlockEntityGetRenderBoundingBox
  IForgeBlockEntity_hasCustomOutlineRendering = IForgeBlockEntityHasCustomOutlineRendering
  IForgeBlockState = IForgeBlockState
  IForgeBlockState_getSoundType3 = IForgeBlockStateGetSoundType3
  IForgeBlockState_getStateAtViewpoint = IForgeBlockStateGetStateAtViewpoint
  IForgeBlockState_shouldDisplayFluidOverlay = IForgeBlockStateShouldDisplayFluidOverlay
  IForgeDimensionSpecialEffects = IForgeDimensionSpecialEffects
  IForgeDimensionSpecialEffects_adjustLightmapColors = IForgeDimensionSpecialEffectsAdjustLightmapColors
  IForgeDimensionSpecialEffects_renderClouds = IForgeDimensionSpecialEffectsRenderClouds
  IForgeDimensionSpecialEffects_renderSky = IForgeDimensionSpecialEffectsRenderSky
  IForgeDimensionSpecialEffects_renderSnowAndRain = IForgeDimensionSpecialEffectsRenderSnowAndRain
  IForgeDimensionSpecialEffects_tickRain = IForgeDimensionSpecialEffectsTickRain
  IForgeEntity = IForgeEntity
  IForgeEntity_canUpdate = IForgeEntityCanUpdate
  IForgeEntity_getEyeInFluidType = IForgeEntityGetEyeInFluidType
  IForgeEntity_getParts = IForgeEntityGetParts
  IForgeEntity_hasCustomOutlineRendering = IForgeEntityHasCustomOutlineRendering
  IForgeEntity_isMultipartEntity = IForgeEntityIsMultipartEntity
  IForgeEntity_onAddedToWorld = IForgeEntityOnAddedToWorld
  IForgeEntity_onRemovedFromWorld = IForgeEntityOnRemovedFromWorld
  IForgeEntity_shouldRiderSit = IForgeEntityShouldRiderSit
  IForgeItemStack = IForgeItemStack
  IForgeItemStack_getHighlightTip = IForgeItemStackGetHighlightTip
  ImmediateWindowHandler = ImmediateWindowHandler
  ImmediateWindowHandler_positionWindow = ImmediateWindowHandlerPositionWindow
  ImmediateWindowHandler_setupMinecraftWindow = ImmediateWindowHandlerSetupMinecraftWindow
  ImmediateWindowHandler_updateFBSize = ImmediateWindowHandlerUpdateFBSize
  IQuadTransformer = IQuadTransformer
  IQuadTransformer_processInPlace = IQuadTransformerProcessInPlace
  IQuadTransformer_STRIDE = IQuadTransformerSTRIDE
  ItemDecoratorHandler = ItemDecoratorHandler
  ItemDecoratorHandler_of = ItemDecoratorHandlerOf
  ItemDecoratorHandler_render = ItemDecoratorHandlerRender
  ItemOverride = ItemOverride
  ItemOverride_listResourceValues = ItemOverrideListResourceValues
  ItemStack = ItemStack
  ItemStack_components = ItemStackComponents
  KeyConflictContext = KeyConflictContext
  KeyConflictContext_IN_GAME = KeyConflictContextINGAME
  KeyModifier = KeyModifier
  KeyModifier_NONE = KeyModifierNONE
  KeyModifier_valueFromString = KeyModifierValueFromString
  Launch = Launch
  Launch_blackboard = LaunchBlackboard
  LayerLlamaDecor = LayerLlamaDecor
  LayerLlamaDecor_model = LayerLlamaDecorModel
  Minecraft = Minecraft
  Minecraft_debugFPS = MinecraftDebugFPS
  Minecraft_fontResourceManager = MinecraftFontResourceManager
  MinecraftForge = MinecraftForge
  MinecraftForge_EVENT_BUS = MinecraftForgeEVENTBUS
  ModContainer = ModContainer
  ModContainer_getModId = ModContainerGetModId
  ModelArmorStand = ModelArmorStand
  ModelArmorStand_ModelRenderers = ModelArmorStandModelRenderers
  ModelAxolotl = ModelAxolotl
  ModelAxolotl_ModelRenderers = ModelAxolotlModelRenderers
  ModelBee = ModelBee
  ModelBee_ModelRenderers = ModelBeeModelRenderers
  ModelBoar = ModelBoar
  ModelBoar_ModelRenderers = ModelBoarModelRenderers
  ModelBook = ModelBook
  ModelBook_root = ModelBookRoot
  ModelChicken = ModelChicken
  ModelChicken_ModelRenderers = ModelChickenModelRenderers
  ModelDragon = ModelDragon
  ModelDragonHead = ModelDragonHead
  ModelDragonHead_head = ModelDragonHeadHead
  ModelDragonHead_jaw = ModelDragonHeadJaw
  ModelDragon_ModelRenderers = ModelDragonModelRenderers
  ModelFox = ModelFox
  ModelFox_ModelRenderers = ModelFoxModelRenderers
  ModelHorse = ModelHorse
  ModelHorseChests = ModelHorseChests
  ModelHorseChests_ModelRenderers = ModelHorseChestsModelRenderers
  ModelHorse_ModelRenderers = ModelHorseModelRenderers
  ModelLlama = ModelLlama
  ModelLlama_ModelRenderers = ModelLlamaModelRenderers
  ModelOcelot = ModelOcelot
  ModelOcelot_ModelRenderers = ModelOcelotModelRenderers
  ModelPiglin = ModelPiglin
  ModelPiglinHead = ModelPiglinHead
  ModelPiglinHead_ModelRenderers = ModelPiglinHeadModelRenderers
  ModelPiglin_ModelRenderers = ModelPiglinModelRenderers
  ModelQuadruped = ModelQuadruped
  ModelQuadruped_ModelRenderers = ModelQuadrupedModelRenderers
  ModelRabbit = ModelRabbit
  ModelRabbit_ModelRenderers = ModelRabbitModelRenderers
  ModelShield = ModelShield
  ModelShield_ModelRenderers = ModelShieldModelRenderers
  ModelShulker = ModelShulker
  ModelShulker_ModelRenderers = ModelShulkerModelRenderers
  ModelSkull = ModelSkull
  ModelSkull_renderers = ModelSkullRenderers
  ModelTadpole = ModelTadpole
  ModelTadpole_ModelRenderers = ModelTadpoleModelRenderers
  ModelTrident = ModelTrident
  ModelTrident_root = ModelTridentRoot
  ModelTurtle = ModelTurtle
  ModelTurtle_body2 = ModelTurtleBody2
  ModelWolf = ModelWolf
  ModelWolf_ModelRenderers = ModelWolfModelRenderers
  ModList = ModList
  ModList_get = ModListGet
  ModList_mods = ModListMods
  ModListScreen = ModListScreen
  ModListScreen_Constructor = ModListScreenConstructor
  ModLoader = ModLoader
  ModLoader_get = ModLoaderGet
  ModLoader_postEvent = ModLoaderPostEvent
  OptiFineResourceLocator = OptiFineResourceLocator
  OptiFineResourceLocator_getOptiFineResourceStream = OptiFineResourceLocatorGetOptiFineResourceStream
  PartEntity = PartEntity
  PlayLevelSoundEvent = PlayLevelSoundEvent
  PlayLevelSoundEvent_getNewPitch = PlayLevelSoundEventGetNewPitch
  PlayLevelSoundEvent_getNewVolume = PlayLevelSoundEventGetNewVolume
  PlayLevelSoundEvent_getSound = PlayLevelSoundEventGetSound
  PlayLevelSoundEvent_getSource = PlayLevelSoundEventGetSource
  Potion = Potion
  Potion_baseName = PotionBaseName
  QuadBakingVertexConsumer = QuadBakingVertexConsumer
  QuadBakingVertexConsumer_QUAD_DATA_SIZE = QuadBakingVertexConsumerQUADDATASIZE
  QuadTransformers = QuadTransformers
  QuadTransformers_applyingColor = QuadTransformersApplyingColor
  QuadTransformers_applyingLightmap = QuadTransformersApplyingLightmap
  RenderBlockScreenEffectEvent_OverlayType = RenderBlockScreenEffectEventOverlayType
  RenderBlockScreenEffectEvent_OverlayType_BLOCK = RenderBlockScreenEffectEventOverlayTypeBLOCK
  RenderBoat = RenderBoat
  RenderBoat_boatResources = RenderBoatBoatResources
  RenderEnderCrystal = RenderEnderCrystal
  RenderEnderCrystal_modelRenderers = RenderEnderCrystalModelRenderers
  RenderEvokerFangs = RenderEvokerFangs
  RenderEvokerFangs_model = RenderEvokerFangsModel
  RenderLeashKnot = RenderLeashKnot
  RenderLeashKnot_leashKnotModel = RenderLeashKnotLeashKnotModel
  RenderLevelStageEvent_dispatch = RenderLevelStageEventDispatch
  RenderLevelStageEvent_Stage = RenderLevelStageEventStage
  RenderLevelStageEvent_Stage_AFTER_BLOCK_ENTITIES = RenderLevelStageEventStageAFTERBLOCKENTITIES
  RenderLevelStageEvent_Stage_AFTER_ENTITIES = RenderLevelStageEventStageAFTERENTITIES
  RenderLevelStageEvent_Stage_AFTER_LEVEL = RenderLevelStageEventStageAFTERLEVEL
  RenderLevelStageEvent_Stage_AFTER_PARTICLES = RenderLevelStageEventStageAFTERPARTICLES
  RenderLevelStageEvent_Stage_AFTER_SKY = RenderLevelStageEventStageAFTERSKY
  RenderLevelStageEvent_Stage_AFTER_WEATHER = RenderLevelStageEventStageAFTERWEATHER
  RenderLlamaSpit = RenderLlamaSpit
  RenderLlamaSpit_model = RenderLlamaSpitModel
  RenderMinecart = RenderMinecart
  RenderMinecart_modelMinecart = RenderMinecartModelMinecart
  RenderNameTagEvent = RenderNameTagEvent
  RenderNameTagEvent_getContent = RenderNameTagEventGetContent
  RenderPufferfish = RenderPufferfish
  RenderPufferfish_modelBig = RenderPufferfishModelBig
  RenderPufferfish_modelMedium = RenderPufferfishModelMedium
  RenderPufferfish_modelSmall = RenderPufferfishModelSmall
  RenderShulkerBullet = RenderShulkerBullet
  RenderShulkerBullet_model = RenderShulkerBulletModel
  RenderTooltipEvent = RenderTooltipEvent
  RenderTooltipEvent_Color = RenderTooltipEventColor
  RenderTooltipEvent_Color_getBackgroundEnd = RenderTooltipEventColorGetBackgroundEnd
  RenderTooltipEvent_Color_getBackgroundStart = RenderTooltipEventColorGetBackgroundStart
  RenderTooltipEvent_Color_getBorderEnd = RenderTooltipEventColorGetBorderEnd
  RenderTooltipEvent_Color_getBorderStart = RenderTooltipEventColorGetBorderStart
  RenderTooltipEvent_getFont = RenderTooltipEventGetFont
  RenderTooltipEvent_getX = RenderTooltipEventGetX
  RenderTooltipEvent_getY = RenderTooltipEventGetY
  RenderTrident = RenderTrident
  RenderTrident_modelTrident = RenderTridentModelTrident
  RenderTropicalFish = RenderTropicalFish
  RenderTropicalFish_modelA = RenderTropicalFishModelA
  RenderTropicalFish_modelB = RenderTropicalFishModelB
  RenderWindCharge = RenderWindCharge
  RenderWindCharge_model = RenderWindChargeModel
  RenderWitherSkull = RenderWitherSkull
  RenderWitherSkull_model = RenderWitherSkullModel
  ScreenshotEvent = ScreenshotEvent
  ScreenshotEvent_getCancelMessage = ScreenshotEventGetCancelMessage
  ScreenshotEvent_getResultMessage = ScreenshotEventGetResultMessage
  ScreenshotEvent_getScreenshotFile = ScreenshotEventGetScreenshotFile
  ServerLifecycleHooks = ServerLifecycleHooks
  ServerLifecycleHooks_handleServerAboutToStart = ServerLifecycleHooksHandleServerAboutToStart
  ServerLifecycleHooks_handleServerStarting = ServerLifecycleHooksHandleServerStarting
  SimpleBakedModel = SimpleBakedModel
  SimpleBakedModel_faceQuads = SimpleBakedModelFaceQuads
  SimpleBakedModel_generalQuads = SimpleBakedModelGeneralQuads
  TerrainParticle = TerrainParticle
  TerrainParticle_updateSprite = TerrainParticleUpdateSprite
  TileEntityBannerRenderer = TileEntityBannerRenderer
  TileEntityBannerRenderer_modelRenderers = TileEntityBannerRendererModelRenderers
  TileEntityBeacon = TileEntityBeacon
  TileEntityBeacon_customName = TileEntityBeaconCustomName
  TileEntityBeacon_levels = TileEntityBeaconLevels
  TileEntityBedRenderer = TileEntityBedRenderer
  TileEntityBedRenderer_footModel = TileEntityBedRendererFootModel
  TileEntityBedRenderer_headModel = TileEntityBedRendererHeadModel
  TileEntityBellRenderer = TileEntityBellRenderer
  TileEntityBellRenderer_modelRenderer = TileEntityBellRendererModelRenderer
  TileEntityChestRenderer = TileEntityChestRenderer
  TileEntityChestRenderer_modelRenderers = TileEntityChestRendererModelRenderers
  TileEntityConduitRenderer = TileEntityConduitRenderer
  TileEntityConduitRenderer_modelRenderers = TileEntityConduitRendererModelRenderers
  TileEntityDecoratedPotRenderer = TileEntityDecoratedPotRenderer
  TileEntityDecoratedPotRenderer_modelRenderers = TileEntityDecoratedPotRendererModelRenderers
  TileEntityEnchantmentTableRenderer = TileEntityEnchantmentTableRenderer
  TileEntityEnchantmentTableRenderer_modelBook = TileEntityEnchantmentTableRendererModelBook
  TileEntityHangingSignRenderer = TileEntityHangingSignRenderer
  TileEntityHangingSignRenderer_hangingSignModels = TileEntityHangingSignRendererHangingSignModels
  TileEntityLecternRenderer = TileEntityLecternRenderer
  TileEntityLecternRenderer_modelBook = TileEntityLecternRendererModelBook
  TileEntityShulkerBoxRenderer = TileEntityShulkerBoxRenderer
  TileEntityShulkerBoxRenderer_model = TileEntityShulkerBoxRendererModel
  TileEntitySignRenderer = TileEntitySignRenderer
  TileEntitySignRenderer_signModels = TileEntitySignRendererSignModels
  TitleScreenModUpdateIndicator = TitleScreenModUpdateIndicator
  TitleScreenModUpdateIndicator_init = TitleScreenModUpdateIndicatorInit
  TooltipRenderUtil = TooltipRenderUtil
  TooltipRenderUtil_renderTooltipBackground10 = TooltipRenderUtilRenderTooltipBackground10
  TropicalFishPatternLayer = TropicalFishPatternLayer
  TropicalFishPatternLayer_modelA = TropicalFishPatternLayerModelA
  TropicalFishPatternLayer_modelB = TropicalFishPatternLayerModelB
  call(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/Object; = Call(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  call(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/Object; = Call(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callBoolean(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Z = CallBoolean(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callBoolean(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Z = CallBoolean(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callDouble(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)D = CallDouble(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callDouble(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)D = CallDouble(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callFloat(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)F = CallFloat(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callFloat(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)F = CallFloat(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callInt(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)I = CallInt(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callInt(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)I = CallInt(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callLong(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)J = CallLong(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callLong(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)J = CallLong(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callString(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/String; = CallString(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callString(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/String; = CallString(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callVoid(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)V = CallVoid(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callVoid(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)V = CallVoid(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  getFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField)
  getFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorFields;I)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorFields, int)
  getFieldValue(Lnet/optifine/reflect/ReflectorField;)Ljava/lang/Object; = GetFieldValue(Net.Optifine.Reflect.ReflectorField)
  getFieldValue(Lnet/optifine/reflect/ReflectorFields;I)Ljava/lang/Object; = GetFieldValue(Net.Optifine.Reflect.ReflectorFields, int)
  getFieldValueBoolean(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;Z)Z = GetFieldValueBoolean(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, bool)
  getFieldValueFloat(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;F)F = GetFieldValueFloat(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, float)
  getFieldValueInt(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;I)I = GetFieldValueInt(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, int)
  getFieldValueInt(Lnet/optifine/reflect/ReflectorField;I)I = GetFieldValueInt(Net.Optifine.Reflect.ReflectorField, int)
  getFieldValueLong(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;J)J = GetFieldValueLong(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, long)
  matchesTypes([Ljava/lang/Class;[Ljava/lang/Class;)Z = MatchesTypes(Java.Lang.Class[], Java.Lang.Class[])
  newInstance(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)Ljava/lang/Object; = NewInstance(Net.Optifine.Reflect.ReflectorConstructor, params Java.Lang.Object[])
  postForgeBusEvent(Ljava/lang/Object;)Z = PostForgeBusEvent(Java.Lang.Object)
  postForgeBusEvent(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)Z = PostForgeBusEvent(Net.Optifine.Reflect.ReflectorConstructor, params Java.Lang.Object[])
  setFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;Ljava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, Java.Lang.Object)
  setFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorFields;ILjava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorFields, int, Java.Lang.Object)
  setFieldValue(Lnet/optifine/reflect/ReflectorField;Ljava/lang/Object;)Z = SetFieldValue(Net.Optifine.Reflect.ReflectorField, Java.Lang.Object)
  setFieldValueInt(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;I)Z = SetFieldValueInt(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, int)
  setFieldValueInt(Lnet/optifine/reflect/ReflectorField;I)Z = SetFieldValueInt(Net.Optifine.Reflect.ReflectorField, int)
net/optifine/reflect/Reflector = Net.Optifine.Reflect.Reflector
  <init>()V = .ctor()
  AbstractArrow = AbstractArrow
  AbstractArrow_inGround = AbstractArrowInGround
  BannerBlockEntity = BannerBlockEntity
  BannerBlockEntity_customName = BannerBlockEntityCustomName
  BaseContainerBlockEntity = BaseContainerBlockEntity
  BaseContainerBlockEntity_customName = BaseContainerBlockEntityCustomName
  BrandingControl = BrandingControl
  BrandingControl_forEachAboveCopyrightLine = BrandingControlForEachAboveCopyrightLine
  BrandingControl_forEachLine = BrandingControlForEachLine
  BrandingControl_getBranding = BrandingControlGetBranding
  BrandingControl_getBrandings = BrandingControlGetBrandings
  CapabilityProvider = CapabilityProvider
  CapabilityProvider_gatherCapabilities = CapabilityProviderGatherCapabilities
  ChunkEvent_Load = ChunkEventLoad
  ChunkEvent_Load_Constructor = ChunkEventLoadConstructor
  ChunkEvent_Unload = ChunkEventUnload
  ChunkEvent_Unload_Constructor = ChunkEventUnloadConstructor
  ClientModLoader = ClientModLoader
  ClientModLoader_isLoading = ClientModLoaderIsLoading
  ColorResolverManager = ColorResolverManager
  ColorResolverManager_registerBlockTintCaches = ColorResolverManagerRegisterBlockTintCaches
  CrashReportAnalyser = CrashReportAnalyser
  CrashReportAnalyser_appendSuspectedMods = CrashReportAnalyserAppendSuspectedMods
  CrashReportExtender = CrashReportExtender
  CrashReportExtender_extendSystemReport = CrashReportExtenderExtendSystemReport
  CrashReportExtender_generateEnhancedStackTraceSTE = CrashReportExtenderGenerateEnhancedStackTraceSTE
  CrashReportExtender_generateEnhancedStackTraceT = CrashReportExtenderGenerateEnhancedStackTraceT
  CustomizeGuiOverlayEvent_BossEventProgress = CustomizeGuiOverlayEventBossEventProgress
  CustomizeGuiOverlayEvent_BossEventProgress_getIncrement = CustomizeGuiOverlayEventBossEventProgressGetIncrement
  Enchantments = Enchantments
  Enchantments_ResourceKeys = EnchantmentsResourceKeys
  EnderDragonRenderer = EnderDragonRenderer
  EnderDragonRenderer_model = EnderDragonRendererModel
  EntityItem = EntityItem
  EntityItem_ITEM = EntityItemITEM
  EntityRenderersEvent_CreateSkullModels = EntityRenderersEventCreateSkullModels
  EntityRenderersEvent_CreateSkullModels_Constructor = EntityRenderersEventCreateSkullModelsConstructor
  EventBus = EventBus
  EventBus_post = EventBusPost
  ForgeBlockElementFace = ForgeBlockElementFace
  ForgeBlockElementFace_data = ForgeBlockElementFaceData
  ForgeBlockModelShapes = ForgeBlockModelShapes
  ForgeBlockModelShapes_getTexture3 = ForgeBlockModelShapesGetTexture3
  ForgeConfig = ForgeConfig
  ForgeConfig_Client = ForgeConfigClient
  ForgeConfig_CLIENT = ForgeConfigCLIENT
  ForgeConfig_Client_calculateAllNormals = ForgeConfigClientCalculateAllNormals
  ForgeConfig_Client_forgeLightPipelineEnabled = ForgeConfigClientForgeLightPipelineEnabled
  ForgeConfig_Client_useCombinedDepthStencilAttachment = ForgeConfigClientUseCombinedDepthStencilAttachment
  ForgeConfigSpec = ForgeConfigSpec
  ForgeConfigSpec_childConfig = ForgeConfigSpecChildConfig
  ForgeConfigSpec_ConfigValue = ForgeConfigSpecConfigValue
  ForgeConfigSpec_ConfigValue_defaultSupplier = ForgeConfigSpecConfigValueDefaultSupplier
  ForgeConfigSpec_ConfigValue_get = ForgeConfigSpecConfigValueGet
  ForgeConfigSpec_ConfigValue_spec = ForgeConfigSpecConfigValueSpec
  ForgeEventFactory = ForgeEventFactory
  ForgeEventFactory_canEntityDespawn = ForgeEventFactoryCanEntityDespawn
  ForgeEventFactoryClient = ForgeEventFactoryClient
  ForgeEventFactoryClient_fireComputeCameraAngles = ForgeEventFactoryClientFireComputeCameraAngles
  ForgeEventFactoryClient_fireComputeFov = ForgeEventFactoryClientFireComputeFov
  ForgeEventFactoryClient_fireRenderNameTagEvent = ForgeEventFactoryClientFireRenderNameTagEvent
  ForgeEventFactoryClient_onGatherLayers = ForgeEventFactoryClientOnGatherLayers
  ForgeEventFactoryClient_onRegisterShaders = ForgeEventFactoryClientOnRegisterShaders
  ForgeEventFactoryClient_onRenderItemInFrame = ForgeEventFactoryClientOnRenderItemInFrame
  ForgeEventFactoryClient_onRenderLivingPost = ForgeEventFactoryClientOnRenderLivingPost
  ForgeEventFactoryClient_onRenderLivingPre = ForgeEventFactoryClientOnRenderLivingPre
  ForgeEventFactoryClient_onScreenshot = ForgeEventFactoryClientOnScreenshot
  ForgeEventFactory_fireChunkTicketLevelUpdated = ForgeEventFactoryFireChunkTicketLevelUpdated
  ForgeEventFactory_getMobGriefingEvent = ForgeEventFactoryGetMobGriefingEvent
  ForgeEventFactory_onChunkDataSave = ForgeEventFactoryOnChunkDataSave
  ForgeEventFactory_onChunkLoad = ForgeEventFactoryOnChunkLoad
  ForgeEventFactory_onChunkUnload = ForgeEventFactoryOnChunkUnload
  ForgeEventFactory_onDifficultyChange = ForgeEventFactoryOnDifficultyChange
  ForgeEventFactory_onEntityJoinLevel = ForgeEventFactoryOnEntityJoinLevel
  ForgeEventFactory_onEntityLeaveLevel = ForgeEventFactoryOnEntityLeaveLevel
  ForgeEventFactory_onLevelLoad = ForgeEventFactoryOnLevelLoad
  ForgeEventFactory_onLivingChangeTargetMob = ForgeEventFactoryOnLivingChangeTargetMob
  ForgeEventFactory_onPlaySoundAtEntity = ForgeEventFactoryOnPlaySoundAtEntity
  ForgeEventFactory_onPlaySoundAtPosition = ForgeEventFactoryOnPlaySoundAtPosition
  ForgeFaceData = ForgeFaceData
  ForgeFaceData_calculateNormals = ForgeFaceDataCalculateNormals
  ForgeHooks = ForgeHooks
  ForgeHooksClient = ForgeHooksClient
  ForgeHooksClient_dispatchRenderStageRT = ForgeHooksClientDispatchRenderStageRT
  ForgeHooksClient_drawScreen = ForgeHooksClientDrawScreen
  ForgeHooksClient_fillNormal = ForgeHooksClientFillNormal
  ForgeHooksClient_gatherTooltipComponents6 = ForgeHooksClientGatherTooltipComponents6
  ForgeHooksClient_gatherTooltipComponents7 = ForgeHooksClientGatherTooltipComponents7
  ForgeHooksClient_gatherTooltipComponentsFromElements = ForgeHooksClientGatherTooltipComponentsFromElements
  ForgeHooksClient_getArmorModel = ForgeHooksClientGetArmorModel
  ForgeHooksClient_getArmorTexture = ForgeHooksClientGetArmorTexture
  ForgeHooksClient_getFieldOfViewModifier = ForgeHooksClientGetFieldOfViewModifier
  ForgeHooksClient_getFluidSprites = ForgeHooksClientGetFluidSprites
  ForgeHooksClient_getFogColor = ForgeHooksClientGetFogColor
  ForgeHooksClient_getGuiFarPlane = ForgeHooksClientGetGuiFarPlane
  ForgeHooksClient_getShaderImportLocation = ForgeHooksClientGetShaderImportLocation
  ForgeHooksClient_isNameplateInRenderDistance = ForgeHooksClientIsNameplateInRenderDistance
  ForgeHooksClient_loadEntityShader = ForgeHooksClientLoadEntityShader
  ForgeHooksClient_loadSpriteContents = ForgeHooksClientLoadSpriteContents
  ForgeHooksClient_loadTextureAtlasSprite = ForgeHooksClientLoadTextureAtlasSprite
  ForgeHooksClient_makeParticleRenderTypeComparator = ForgeHooksClientMakeParticleRenderTypeComparator
  ForgeHooksClient_onCustomizeBossEventProgress = ForgeHooksClientOnCustomizeBossEventProgress
  ForgeHooksClient_onCustomizeChatEvent = ForgeHooksClientOnCustomizeChatEvent
  ForgeHooksClient_onCustomizeDebugEvent = ForgeHooksClientOnCustomizeDebugEvent
  ForgeHooksClient_onDrawHighlight = ForgeHooksClientOnDrawHighlight
  ForgeHooksClient_onFogRender = ForgeHooksClientOnFogRender
  ForgeHooksClient_onKeyInput = ForgeHooksClientOnKeyInput
  ForgeHooksClient_onRegisterAdditionalModels = ForgeHooksClientOnRegisterAdditionalModels
  ForgeHooksClient_onRenderTooltipColor = ForgeHooksClientOnRenderTooltipColor
  ForgeHooksClient_onRenderTooltipPre = ForgeHooksClientOnRenderTooltipPre
  ForgeHooksClient_onScreenCharTyped = ForgeHooksClientOnScreenCharTyped
  ForgeHooksClient_onScreenKeyPressed = ForgeHooksClientOnScreenKeyPressed
  ForgeHooksClient_onScreenKeyReleased = ForgeHooksClientOnScreenKeyReleased
  ForgeHooksClient_onTextureStitchedPost = ForgeHooksClientOnTextureStitchedPost
  ForgeHooksClient_renderBlockOverlay = ForgeHooksClientRenderBlockOverlay
  ForgeHooksClient_renderFireOverlay = ForgeHooksClientRenderFireOverlay
  ForgeHooksClient_renderMainMenu = ForgeHooksClientRenderMainMenu
  ForgeHooksClient_renderSpecificFirstPersonHand = ForgeHooksClientRenderSpecificFirstPersonHand
  ForgeHooksClient_renderWaterOverlay = ForgeHooksClientRenderWaterOverlay
  ForgeHooksClient_shouldCauseReequipAnimation = ForgeHooksClientShouldCauseReequipAnimation
  ForgeHooks_getDyeColorFromItemStack = ForgeHooksGetDyeColorFromItemStack
  ForgeIChunk = ForgeIChunk
  ForgeIChunk_getWorldForge = ForgeIChunkGetWorldForge
  ForgeItemModelShaper = ForgeItemModelShaper
  ForgeItemModelShaper_Constructor = ForgeItemModelShaperConstructor
  ForgeItemTags = ForgeItemTags
  ForgeItemTags_create = ForgeItemTagsCreate
  ForgeKeyBinding = ForgeKeyBinding
  ForgeKeyBinding_getKeyModifier = ForgeKeyBindingGetKeyModifier
  ForgeKeyBinding_setKeyConflictContext = ForgeKeyBindingSetKeyConflictContext
  ForgeKeyBinding_setKeyModifierAndCode = ForgeKeyBindingSetKeyModifierAndCode
  ForgeModelBlockRenderer = ForgeModelBlockRenderer
  ForgeModelBlockRenderer_Constructor = ForgeModelBlockRendererConstructor
  ForgeTicket = ForgeTicket
  ForgeTicket_forceTicks = ForgeTicketForceTicks
  ForgeTicket_isForceTicks = ForgeTicketIsForceTicks
  ForgeVersion = ForgeVersion
  ForgeVersion_getVersion = ForgeVersionGetVersion
  GuiEnchantment = GuiEnchantment
  GuiEnchantment_bookModel = GuiEnchantmentBookModel
  IForgeBlockEntity = IForgeBlockEntity
  IForgeBlockEntity_getRenderBoundingBox = IForgeBlockEntityGetRenderBoundingBox
  IForgeBlockEntity_hasCustomOutlineRendering = IForgeBlockEntityHasCustomOutlineRendering
  IForgeBlockState = IForgeBlockState
  IForgeBlockState_getSoundType3 = IForgeBlockStateGetSoundType3
  IForgeBlockState_getStateAtViewpoint = IForgeBlockStateGetStateAtViewpoint
  IForgeBlockState_shouldDisplayFluidOverlay = IForgeBlockStateShouldDisplayFluidOverlay
  IForgeDimensionSpecialEffects = IForgeDimensionSpecialEffects
  IForgeDimensionSpecialEffects_adjustLightmapColors = IForgeDimensionSpecialEffectsAdjustLightmapColors
  IForgeDimensionSpecialEffects_renderClouds = IForgeDimensionSpecialEffectsRenderClouds
  IForgeDimensionSpecialEffects_renderSky = IForgeDimensionSpecialEffectsRenderSky
  IForgeDimensionSpecialEffects_renderSnowAndRain = IForgeDimensionSpecialEffectsRenderSnowAndRain
  IForgeDimensionSpecialEffects_tickRain = IForgeDimensionSpecialEffectsTickRain
  IForgeEntity = IForgeEntity
  IForgeEntity_canUpdate = IForgeEntityCanUpdate
  IForgeEntity_getEyeInFluidType = IForgeEntityGetEyeInFluidType
  IForgeEntity_getParts = IForgeEntityGetParts
  IForgeEntity_hasCustomOutlineRendering = IForgeEntityHasCustomOutlineRendering
  IForgeEntity_isMultipartEntity = IForgeEntityIsMultipartEntity
  IForgeEntity_onAddedToWorld = IForgeEntityOnAddedToWorld
  IForgeEntity_onRemovedFromWorld = IForgeEntityOnRemovedFromWorld
  IForgeEntity_shouldRiderSit = IForgeEntityShouldRiderSit
  IForgeItemStack = IForgeItemStack
  IForgeItemStack_getHighlightTip = IForgeItemStackGetHighlightTip
  ImmediateWindowHandler = ImmediateWindowHandler
  ImmediateWindowHandler_positionWindow = ImmediateWindowHandlerPositionWindow
  ImmediateWindowHandler_setupMinecraftWindow = ImmediateWindowHandlerSetupMinecraftWindow
  ImmediateWindowHandler_updateFBSize = ImmediateWindowHandlerUpdateFBSize
  IQuadTransformer = IQuadTransformer
  IQuadTransformer_processInPlace = IQuadTransformerProcessInPlace
  IQuadTransformer_STRIDE = IQuadTransformerSTRIDE
  ItemDecoratorHandler = ItemDecoratorHandler
  ItemDecoratorHandler_of = ItemDecoratorHandlerOf
  ItemDecoratorHandler_render = ItemDecoratorHandlerRender
  ItemOverride = ItemOverride
  ItemOverride_listResourceValues = ItemOverrideListResourceValues
  ItemStack = ItemStack
  ItemStack_components = ItemStackComponents
  KeyConflictContext = KeyConflictContext
  KeyConflictContext_IN_GAME = KeyConflictContextINGAME
  KeyModifier = KeyModifier
  KeyModifier_NONE = KeyModifierNONE
  KeyModifier_valueFromString = KeyModifierValueFromString
  Launch = Launch
  Launch_blackboard = LaunchBlackboard
  LayerLlamaDecor = LayerLlamaDecor
  LayerLlamaDecor_model = LayerLlamaDecorModel
  Minecraft = Minecraft
  Minecraft_debugFPS = MinecraftDebugFPS
  Minecraft_fontResourceManager = MinecraftFontResourceManager
  MinecraftForge = MinecraftForge
  MinecraftForge_EVENT_BUS = MinecraftForgeEVENTBUS
  ModContainer = ModContainer
  ModContainer_getModId = ModContainerGetModId
  ModelArmorStand = ModelArmorStand
  ModelArmorStand_ModelRenderers = ModelArmorStandModelRenderers
  ModelAxolotl = ModelAxolotl
  ModelAxolotl_ModelRenderers = ModelAxolotlModelRenderers
  ModelBee = ModelBee
  ModelBee_ModelRenderers = ModelBeeModelRenderers
  ModelBoar = ModelBoar
  ModelBoar_ModelRenderers = ModelBoarModelRenderers
  ModelBook = ModelBook
  ModelBook_root = ModelBookRoot
  ModelChicken = ModelChicken
  ModelChicken_ModelRenderers = ModelChickenModelRenderers
  ModelDragon = ModelDragon
  ModelDragonHead = ModelDragonHead
  ModelDragonHead_head = ModelDragonHeadHead
  ModelDragonHead_jaw = ModelDragonHeadJaw
  ModelDragon_ModelRenderers = ModelDragonModelRenderers
  ModelFox = ModelFox
  ModelFox_ModelRenderers = ModelFoxModelRenderers
  ModelHorse = ModelHorse
  ModelHorseChests = ModelHorseChests
  ModelHorseChests_ModelRenderers = ModelHorseChestsModelRenderers
  ModelHorse_ModelRenderers = ModelHorseModelRenderers
  ModelLlama = ModelLlama
  ModelLlama_ModelRenderers = ModelLlamaModelRenderers
  ModelOcelot = ModelOcelot
  ModelOcelot_ModelRenderers = ModelOcelotModelRenderers
  ModelPiglin = ModelPiglin
  ModelPiglinHead = ModelPiglinHead
  ModelPiglinHead_ModelRenderers = ModelPiglinHeadModelRenderers
  ModelPiglin_ModelRenderers = ModelPiglinModelRenderers
  ModelQuadruped = ModelQuadruped
  ModelQuadruped_ModelRenderers = ModelQuadrupedModelRenderers
  ModelRabbit = ModelRabbit
  ModelRabbit_ModelRenderers = ModelRabbitModelRenderers
  ModelShield = ModelShield
  ModelShield_ModelRenderers = ModelShieldModelRenderers
  ModelShulker = ModelShulker
  ModelShulker_ModelRenderers = ModelShulkerModelRenderers
  ModelSkull = ModelSkull
  ModelSkull_renderers = ModelSkullRenderers
  ModelTadpole = ModelTadpole
  ModelTadpole_ModelRenderers = ModelTadpoleModelRenderers
  ModelTrident = ModelTrident
  ModelTrident_root = ModelTridentRoot
  ModelTurtle = ModelTurtle
  ModelTurtle_body2 = ModelTurtleBody2
  ModelWolf = ModelWolf
  ModelWolf_ModelRenderers = ModelWolfModelRenderers
  ModList = ModList
  ModList_get = ModListGet
  ModList_mods = ModListMods
  ModListScreen = ModListScreen
  ModListScreen_Constructor = ModListScreenConstructor
  ModLoader = ModLoader
  ModLoader_get = ModLoaderGet
  ModLoader_postEvent = ModLoaderPostEvent
  OptiFineResourceLocator = OptiFineResourceLocator
  OptiFineResourceLocator_getOptiFineResourceStream = OptiFineResourceLocatorGetOptiFineResourceStream
  PartEntity = PartEntity
  PlayLevelSoundEvent = PlayLevelSoundEvent
  PlayLevelSoundEvent_getNewPitch = PlayLevelSoundEventGetNewPitch
  PlayLevelSoundEvent_getNewVolume = PlayLevelSoundEventGetNewVolume
  PlayLevelSoundEvent_getSound = PlayLevelSoundEventGetSound
  PlayLevelSoundEvent_getSource = PlayLevelSoundEventGetSource
  Potion = Potion
  Potion_baseName = PotionBaseName
  QuadBakingVertexConsumer = QuadBakingVertexConsumer
  QuadBakingVertexConsumer_QUAD_DATA_SIZE = QuadBakingVertexConsumerQUADDATASIZE
  QuadTransformers = QuadTransformers
  QuadTransformers_applyingColor = QuadTransformersApplyingColor
  QuadTransformers_applyingLightmap = QuadTransformersApplyingLightmap
  RenderBlockScreenEffectEvent_OverlayType = RenderBlockScreenEffectEventOverlayType
  RenderBlockScreenEffectEvent_OverlayType_BLOCK = RenderBlockScreenEffectEventOverlayTypeBLOCK
  RenderBoat = RenderBoat
  RenderBoat_boatResources = RenderBoatBoatResources
  RenderEnderCrystal = RenderEnderCrystal
  RenderEnderCrystal_modelRenderers = RenderEnderCrystalModelRenderers
  RenderEvokerFangs = RenderEvokerFangs
  RenderEvokerFangs_model = RenderEvokerFangsModel
  RenderLeashKnot = RenderLeashKnot
  RenderLeashKnot_leashKnotModel = RenderLeashKnotLeashKnotModel
  RenderLevelStageEvent_dispatch = RenderLevelStageEventDispatch
  RenderLevelStageEvent_Stage = RenderLevelStageEventStage
  RenderLevelStageEvent_Stage_AFTER_BLOCK_ENTITIES = RenderLevelStageEventStageAFTERBLOCKENTITIES
  RenderLevelStageEvent_Stage_AFTER_ENTITIES = RenderLevelStageEventStageAFTERENTITIES
  RenderLevelStageEvent_Stage_AFTER_LEVEL = RenderLevelStageEventStageAFTERLEVEL
  RenderLevelStageEvent_Stage_AFTER_PARTICLES = RenderLevelStageEventStageAFTERPARTICLES
  RenderLevelStageEvent_Stage_AFTER_SKY = RenderLevelStageEventStageAFTERSKY
  RenderLevelStageEvent_Stage_AFTER_WEATHER = RenderLevelStageEventStageAFTERWEATHER
  RenderLlamaSpit = RenderLlamaSpit
  RenderLlamaSpit_model = RenderLlamaSpitModel
  RenderMinecart = RenderMinecart
  RenderMinecart_modelMinecart = RenderMinecartModelMinecart
  RenderNameTagEvent = RenderNameTagEvent
  RenderNameTagEvent_getContent = RenderNameTagEventGetContent
  RenderPufferfish = RenderPufferfish
  RenderPufferfish_modelBig = RenderPufferfishModelBig
  RenderPufferfish_modelMedium = RenderPufferfishModelMedium
  RenderPufferfish_modelSmall = RenderPufferfishModelSmall
  RenderShulkerBullet = RenderShulkerBullet
  RenderShulkerBullet_model = RenderShulkerBulletModel
  RenderTooltipEvent = RenderTooltipEvent
  RenderTooltipEvent_Color = RenderTooltipEventColor
  RenderTooltipEvent_Color_getBackgroundEnd = RenderTooltipEventColorGetBackgroundEnd
  RenderTooltipEvent_Color_getBackgroundStart = RenderTooltipEventColorGetBackgroundStart
  RenderTooltipEvent_Color_getBorderEnd = RenderTooltipEventColorGetBorderEnd
  RenderTooltipEvent_Color_getBorderStart = RenderTooltipEventColorGetBorderStart
  RenderTooltipEvent_getFont = RenderTooltipEventGetFont
  RenderTooltipEvent_getX = RenderTooltipEventGetX
  RenderTooltipEvent_getY = RenderTooltipEventGetY
  RenderTrident = RenderTrident
  RenderTrident_modelTrident = RenderTridentModelTrident
  RenderTropicalFish = RenderTropicalFish
  RenderTropicalFish_modelA = RenderTropicalFishModelA
  RenderTropicalFish_modelB = RenderTropicalFishModelB
  RenderWindCharge = RenderWindCharge
  RenderWindCharge_model = RenderWindChargeModel
  RenderWitherSkull = RenderWitherSkull
  RenderWitherSkull_model = RenderWitherSkullModel
  ScreenshotEvent = ScreenshotEvent
  ScreenshotEvent_getCancelMessage = ScreenshotEventGetCancelMessage
  ScreenshotEvent_getResultMessage = ScreenshotEventGetResultMessage
  ScreenshotEvent_getScreenshotFile = ScreenshotEventGetScreenshotFile
  ServerLifecycleHooks = ServerLifecycleHooks
  ServerLifecycleHooks_handleServerAboutToStart = ServerLifecycleHooksHandleServerAboutToStart
  ServerLifecycleHooks_handleServerStarting = ServerLifecycleHooksHandleServerStarting
  SimpleBakedModel = SimpleBakedModel
  SimpleBakedModel_faceQuads = SimpleBakedModelFaceQuads
  SimpleBakedModel_generalQuads = SimpleBakedModelGeneralQuads
  TerrainParticle = TerrainParticle
  TerrainParticle_updateSprite = TerrainParticleUpdateSprite
  TileEntityBannerRenderer = TileEntityBannerRenderer
  TileEntityBannerRenderer_modelRenderers = TileEntityBannerRendererModelRenderers
  TileEntityBeacon = TileEntityBeacon
  TileEntityBeacon_customName = TileEntityBeaconCustomName
  TileEntityBeacon_levels = TileEntityBeaconLevels
  TileEntityBedRenderer = TileEntityBedRenderer
  TileEntityBedRenderer_footModel = TileEntityBedRendererFootModel
  TileEntityBedRenderer_headModel = TileEntityBedRendererHeadModel
  TileEntityBellRenderer = TileEntityBellRenderer
  TileEntityBellRenderer_modelRenderer = TileEntityBellRendererModelRenderer
  TileEntityChestRenderer = TileEntityChestRenderer
  TileEntityChestRenderer_modelRenderers = TileEntityChestRendererModelRenderers
  TileEntityConduitRenderer = TileEntityConduitRenderer
  TileEntityConduitRenderer_modelRenderers = TileEntityConduitRendererModelRenderers
  TileEntityDecoratedPotRenderer = TileEntityDecoratedPotRenderer
  TileEntityDecoratedPotRenderer_modelRenderers = TileEntityDecoratedPotRendererModelRenderers
  TileEntityEnchantmentTableRenderer = TileEntityEnchantmentTableRenderer
  TileEntityEnchantmentTableRenderer_modelBook = TileEntityEnchantmentTableRendererModelBook
  TileEntityHangingSignRenderer = TileEntityHangingSignRenderer
  TileEntityHangingSignRenderer_hangingSignModels = TileEntityHangingSignRendererHangingSignModels
  TileEntityLecternRenderer = TileEntityLecternRenderer
  TileEntityLecternRenderer_modelBook = TileEntityLecternRendererModelBook
  TileEntityShulkerBoxRenderer = TileEntityShulkerBoxRenderer
  TileEntityShulkerBoxRenderer_model = TileEntityShulkerBoxRendererModel
  TileEntitySignRenderer = TileEntitySignRenderer
  TileEntitySignRenderer_signModels = TileEntitySignRendererSignModels
  TitleScreenModUpdateIndicator = TitleScreenModUpdateIndicator
  TitleScreenModUpdateIndicator_init = TitleScreenModUpdateIndicatorInit
  TooltipRenderUtil = TooltipRenderUtil
  TooltipRenderUtil_renderTooltipBackground10 = TooltipRenderUtilRenderTooltipBackground10
  TropicalFishPatternLayer = TropicalFishPatternLayer
  TropicalFishPatternLayer_modelA = TropicalFishPatternLayerModelA
  TropicalFishPatternLayer_modelB = TropicalFishPatternLayerModelB
  call(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/Object; = Call(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  call(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/Object; = Call(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callBoolean(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Z = CallBoolean(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callBoolean(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Z = CallBoolean(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callDouble(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)D = CallDouble(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callDouble(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)D = CallDouble(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callFloat(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)F = CallFloat(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callFloat(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)F = CallFloat(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callInt(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)I = CallInt(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callInt(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)I = CallInt(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callLong(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)J = CallLong(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callLong(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)J = CallLong(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callString(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/String; = CallString(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callString(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)Ljava/lang/String; = CallString(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callVoid(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)V = CallVoid(Java.Lang.Object, Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  callVoid(Lnet/optifine/reflect/ReflectorMethod;[Ljava/lang/Object;)V = CallVoid(Net.Optifine.Reflect.ReflectorMethod, params Java.Lang.Object[])
  getFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField)
  getFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorFields;I)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorFields, int)
  getFieldValue(Lnet/optifine/reflect/ReflectorField;)Ljava/lang/Object; = GetFieldValue(Net.Optifine.Reflect.ReflectorField)
  getFieldValue(Lnet/optifine/reflect/ReflectorFields;I)Ljava/lang/Object; = GetFieldValue(Net.Optifine.Reflect.ReflectorFields, int)
  getFieldValueBoolean(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;Z)Z = GetFieldValueBoolean(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, bool)
  getFieldValueFloat(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;F)F = GetFieldValueFloat(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, float)
  getFieldValueInt(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;I)I = GetFieldValueInt(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, int)
  getFieldValueInt(Lnet/optifine/reflect/ReflectorField;I)I = GetFieldValueInt(Net.Optifine.Reflect.ReflectorField, int)
  getFieldValueLong(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;J)J = GetFieldValueLong(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, long)
  matchesTypes([Ljava/lang/Class;[Ljava/lang/Class;)Z = MatchesTypes(Java.Lang.Class[], Java.Lang.Class[])
  newInstance(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)Ljava/lang/Object; = NewInstance(Net.Optifine.Reflect.ReflectorConstructor, params Java.Lang.Object[])
  postForgeBusEvent(Ljava/lang/Object;)Z = PostForgeBusEvent(Java.Lang.Object)
  postForgeBusEvent(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)Z = PostForgeBusEvent(Net.Optifine.Reflect.ReflectorConstructor, params Java.Lang.Object[])
  setFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;Ljava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, Java.Lang.Object)
  setFieldValue(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorFields;ILjava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Net.Optifine.Reflect.ReflectorFields, int, Java.Lang.Object)
  setFieldValue(Lnet/optifine/reflect/ReflectorField;Ljava/lang/Object;)Z = SetFieldValue(Net.Optifine.Reflect.ReflectorField, Java.Lang.Object)
  setFieldValueInt(Ljava/lang/Object;Lnet/optifine/reflect/ReflectorField;I)Z = SetFieldValueInt(Java.Lang.Object, Net.Optifine.Reflect.ReflectorField, int)
  setFieldValueInt(Lnet/optifine/reflect/ReflectorField;I)Z = SetFieldValueInt(Net.Optifine.Reflect.ReflectorField, int)
net/optifine/reflect/ReflectorClass = Net.Optifine.Reflect.ReflectorClass
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  <init>(Ljava/lang/String;)V = .ctor(string)
  getTargetClass()Ljava/lang/Class; = TargetClass
  getTargetClassName()Ljava/lang/String; = TargetClassName
  exists()Z = Exists()
  isInstance(Ljava/lang/Object;)Z = IsInstance(Java.Lang.Object)
  makeConstructor([Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorConstructor; = MakeConstructor(Java.Lang.Class[])
  makeField(Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorField; = MakeField(Java.Lang.Class)
  makeField(Ljava/lang/String;)Lnet/optifine/reflect/ReflectorField; = MakeField(string)
  makeField(Lnet/optifine/reflect/IFieldLocator;)Lnet/optifine/reflect/ReflectorField; = MakeField(Net.Optifine.Reflect.IFieldLocator)
  makeFieldTypes(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Lnet/optifine/reflect/ReflectorField; = MakeFieldTypes(Java.Lang.Class, Java.Lang.Class, Java.Lang.Class, string)
  makeMethod(Ljava/lang/String;)Lnet/optifine/reflect/ReflectorMethod; = MakeMethod(string)
  makeMethod(Ljava/lang/String;[Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorMethod; = MakeMethod(string, Java.Lang.Class[])
  resolve()V = Resolve()
net/optifine/reflect/ReflectorClass = Net.Optifine.Reflect.ReflectorClass
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  <init>(Ljava/lang/String;)V = .ctor(string)
  getTargetClass()Ljava/lang/Class; = TargetClass
  getTargetClassName()Ljava/lang/String; = TargetClassName
  exists()Z = Exists()
  isInstance(Ljava/lang/Object;)Z = IsInstance(Java.Lang.Object)
  makeConstructor([Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorConstructor; = MakeConstructor(Java.Lang.Class[])
  makeField(Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorField; = MakeField(Java.Lang.Class)
  makeField(Ljava/lang/String;)Lnet/optifine/reflect/ReflectorField; = MakeField(string)
  makeField(Lnet/optifine/reflect/IFieldLocator;)Lnet/optifine/reflect/ReflectorField; = MakeField(Net.Optifine.Reflect.IFieldLocator)
  makeFieldTypes(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Lnet/optifine/reflect/ReflectorField; = MakeFieldTypes(Java.Lang.Class, Java.Lang.Class, Java.Lang.Class, string)
  makeMethod(Ljava/lang/String;)Lnet/optifine/reflect/ReflectorMethod; = MakeMethod(string)
  makeMethod(Ljava/lang/String;[Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorMethod; = MakeMethod(string, Java.Lang.Class[])
  resolve()V = Resolve()
net/optifine/reflect/ReflectorConstructor = Net.Optifine.Reflect.ReflectorConstructor
  <init>(Lnet/optifine/reflect/ReflectorClass;[Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class[])
  getTargetConstructor()Ljava/lang/reflect/Constructor; = TargetConstructor
  deactivate()V = Deactivate()
  exists()Z = Exists()
  newInstance([Ljava/lang/Object;)Ljava/lang/Object; = NewInstance(params Java.Lang.Object[])
  resolve()V = Resolve()
net/optifine/reflect/ReflectorConstructor = Net.Optifine.Reflect.ReflectorConstructor
  <init>(Lnet/optifine/reflect/ReflectorClass;[Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class[])
  getTargetConstructor()Ljava/lang/reflect/Constructor; = TargetConstructor
  deactivate()V = Deactivate()
  exists()Z = Exists()
  newInstance([Ljava/lang/Object;)Ljava/lang/Object; = NewInstance(params Java.Lang.Object[])
  resolve()V = Resolve()
net/optifine/reflect/ReflectorField = Net.Optifine.Reflect.ReflectorField
  <init>(Ljava/lang/reflect/Field;)V = .ctor(Java.Lang.Reflect.Field)
  <init>(Lnet/optifine/reflect/IFieldLocator;)V = .ctor(Net.Optifine.Reflect.IFieldLocator)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class, int)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string)
  getTargetField()Ljava/lang/reflect/Field; = TargetField
  getValue()Ljava/lang/Object; = Value
  setValue(Ljava/lang/Object;)V = Value
  exists()Z = Exists()
  getValue(Ljava/lang/Object;)Ljava/lang/Object; = GetValue(Java.Lang.Object)
  resolve()V = Resolve()
  setStaticIntUnsafe(I)V = SetStaticIntUnsafe(int)
  setValue(Ljava/lang/Object;Ljava/lang/Object;)V = SetValue(Java.Lang.Object, Java.Lang.Object)
net/optifine/reflect/ReflectorField = Net.Optifine.Reflect.ReflectorField
  <init>(Ljava/lang/reflect/Field;)V = .ctor(Java.Lang.Reflect.Field)
  <init>(Lnet/optifine/reflect/IFieldLocator;)V = .ctor(Net.Optifine.Reflect.IFieldLocator)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class, int)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string)
  getTargetField()Ljava/lang/reflect/Field; = TargetField
  getValue()Ljava/lang/Object; = Value
  setValue(Ljava/lang/Object;)V = Value
  exists()Z = Exists()
  getValue(Ljava/lang/Object;)Ljava/lang/Object; = GetValue(Java.Lang.Object)
  resolve()V = Resolve()
  setStaticIntUnsafe(I)V = SetStaticIntUnsafe(int)
  setValue(Ljava/lang/Object;Ljava/lang/Object;)V = SetValue(Java.Lang.Object, Java.Lang.Object)
net/optifine/reflect/ReflectorFields = Net.Optifine.Reflect.ReflectorFields
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class, int)
  getFieldCount()I = FieldCount
  getFieldType()Ljava/lang/Class; = FieldType
  getReflectorClass()Lnet/optifine/reflect/ReflectorClass; = ReflectorClass
  exists()Z = Exists()
  getFieldValues(Ljava/lang/Object;)[Ljava/lang/Object; = GetFieldValues(Java.Lang.Object)
  getReflectorField(I)Lnet/optifine/reflect/ReflectorField; = GetReflectorField(int)
  getValue(Ljava/lang/Object;I)Ljava/lang/Object; = GetValue(Java.Lang.Object, int)
  setValue(Ljava/lang/Object;ILjava/lang/Object;)V = SetValue(Java.Lang.Object, int, Java.Lang.Object)
net/optifine/reflect/ReflectorFields = Net.Optifine.Reflect.ReflectorFields
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V = .ctor(Net.Optifine.Reflect.ReflectorClass, Java.Lang.Class, int)
  getFieldCount()I = FieldCount
  getFieldType()Ljava/lang/Class; = FieldType
  getReflectorClass()Lnet/optifine/reflect/ReflectorClass; = ReflectorClass
  exists()Z = Exists()
  getFieldValues(Ljava/lang/Object;)[Ljava/lang/Object; = GetFieldValues(Java.Lang.Object)
  getReflectorField(I)Lnet/optifine/reflect/ReflectorField; = GetReflectorField(int)
  getValue(Ljava/lang/Object;I)Ljava/lang/Object; = GetValue(Java.Lang.Object, int)
  setValue(Ljava/lang/Object;ILjava/lang/Object;)V = SetValue(Java.Lang.Object, int, Java.Lang.Object)
net/optifine/reflect/ReflectorForge = Net.Optifine.Reflect.ReflectorForge
  <init>()V = .ctor()
  FORGE_ENTITY_CAN_UPDATE = ForgeEntityCanUpdate
  getForgeCalculateAllNormals()Z = ForgeCalculateAllNormals
  getForgeUseCombinedDepthStencilAttachment()Z = ForgeUseCombinedDepthStencilAttachment
  getReflectorClassOptiFineResourceLocator()Lnet/optifine/reflect/ReflectorClass; = ReflectorClassOptiFineResourceLocator
  getConfigClientBoolean(Lnet/optifine/reflect/ReflectorField;Z)Z = GetConfigClientBoolean(Net.Optifine.Reflect.ReflectorField, bool)
  getForgeModIds()[Ljava/lang/String; = GetForgeModIds()
  getOptiFineResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetOptiFineResourceStream(string)
  postModLoaderEvent(Ljava/lang/Object;)V = PostModLoaderEvent(Java.Lang.Object)
  postModLoaderEvent(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)V = PostModLoaderEvent(Net.Optifine.Reflect.ReflectorConstructor, params Java.Lang.Object[])
  putLaunchBlackboard(Ljava/lang/String;Ljava/lang/Object;)V = PutLaunchBlackboard(string, Java.Lang.Object)
  setForgeLightPipelineEnabled(Z)V = SetForgeLightPipelineEnabled(bool)
net/optifine/reflect/ReflectorForge = Net.Optifine.Reflect.ReflectorForge
  <init>()V = .ctor()
  FORGE_ENTITY_CAN_UPDATE = ForgeEntityCanUpdate
  getForgeCalculateAllNormals()Z = ForgeCalculateAllNormals
  getForgeUseCombinedDepthStencilAttachment()Z = ForgeUseCombinedDepthStencilAttachment
  getReflectorClassOptiFineResourceLocator()Lnet/optifine/reflect/ReflectorClass; = ReflectorClassOptiFineResourceLocator
  getConfigClientBoolean(Lnet/optifine/reflect/ReflectorField;Z)Z = GetConfigClientBoolean(Net.Optifine.Reflect.ReflectorField, bool)
  getForgeModIds()[Ljava/lang/String; = GetForgeModIds()
  getOptiFineResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetOptiFineResourceStream(string)
  postModLoaderEvent(Ljava/lang/Object;)V = PostModLoaderEvent(Java.Lang.Object)
  postModLoaderEvent(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)V = PostModLoaderEvent(Net.Optifine.Reflect.ReflectorConstructor, params Java.Lang.Object[])
  putLaunchBlackboard(Ljava/lang/String;Ljava/lang/Object;)V = PutLaunchBlackboard(string, Java.Lang.Object)
  setForgeLightPipelineEnabled(Z)V = SetForgeLightPipelineEnabled(bool)
net/optifine/reflect/ReflectorMethod = Net.Optifine.Reflect.ReflectorMethod
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;[Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string, Java.Lang.Class[])
  getReturnType()Ljava/lang/Class; = ReturnType
  getTargetMethod()Ljava/lang/reflect/Method; = TargetMethod
  call(Ljava/lang/Object;)Ljava/lang/Object; = Call(Java.Lang.Object)
  call([Ljava/lang/Object;)Ljava/lang/Object; = Call(params Java.Lang.Object[])
  callBoolean(Ljava/lang/Object;)Z = CallBoolean(Java.Lang.Object)
  callBoolean([Ljava/lang/Object;)Z = CallBoolean(params Java.Lang.Object[])
  callDouble(Ljava/lang/Object;)D = CallDouble(Java.Lang.Object)
  callDouble([Ljava/lang/Object;)D = CallDouble(params Java.Lang.Object[])
  callFloat(Ljava/lang/Object;)F = CallFloat(Java.Lang.Object)
  callFloat([Ljava/lang/Object;)F = CallFloat(params Java.Lang.Object[])
  callInt(Ljava/lang/Object;)I = CallInt(Java.Lang.Object)
  callInt([Ljava/lang/Object;)I = CallInt(params Java.Lang.Object[])
  callLong(Ljava/lang/Object;)J = CallLong(Java.Lang.Object)
  callLong([Ljava/lang/Object;)J = CallLong(params Java.Lang.Object[])
  callString([Ljava/lang/Object;)Ljava/lang/String; = CallString(params Java.Lang.Object[])
  callString1(Ljava/lang/Object;)Ljava/lang/String; = CallString1(Java.Lang.Object)
  callVoid([Ljava/lang/Object;)V = CallVoid(params Java.Lang.Object[])
  deactivate()V = Deactivate()
  exists()Z = Exists()
  getMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method; = GetMethod(Java.Lang.Class, string, Java.Lang.Class[])
  getMethods(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/reflect/Method; = GetMethods(Java.Lang.Class, string)
  resolve()V = Resolve()
net/optifine/reflect/ReflectorMethod = Net.Optifine.Reflect.ReflectorMethod
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string)
  <init>(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;[Ljava/lang/Class;)V = .ctor(Net.Optifine.Reflect.ReflectorClass, string, Java.Lang.Class[])
  getReturnType()Ljava/lang/Class; = ReturnType
  getTargetMethod()Ljava/lang/reflect/Method; = TargetMethod
  call(Ljava/lang/Object;)Ljava/lang/Object; = Call(Java.Lang.Object)
  call([Ljava/lang/Object;)Ljava/lang/Object; = Call(params Java.Lang.Object[])
  callBoolean(Ljava/lang/Object;)Z = CallBoolean(Java.Lang.Object)
  callBoolean([Ljava/lang/Object;)Z = CallBoolean(params Java.Lang.Object[])
  callDouble(Ljava/lang/Object;)D = CallDouble(Java.Lang.Object)
  callDouble([Ljava/lang/Object;)D = CallDouble(params Java.Lang.Object[])
  callFloat(Ljava/lang/Object;)F = CallFloat(Java.Lang.Object)
  callFloat([Ljava/lang/Object;)F = CallFloat(params Java.Lang.Object[])
  callInt(Ljava/lang/Object;)I = CallInt(Java.Lang.Object)
  callInt([Ljava/lang/Object;)I = CallInt(params Java.Lang.Object[])
  callLong(Ljava/lang/Object;)J = CallLong(Java.Lang.Object)
  callLong([Ljava/lang/Object;)J = CallLong(params Java.Lang.Object[])
  callString([Ljava/lang/Object;)Ljava/lang/String; = CallString(params Java.Lang.Object[])
  callString1(Ljava/lang/Object;)Ljava/lang/String; = CallString1(Java.Lang.Object)
  callVoid([Ljava/lang/Object;)V = CallVoid(params Java.Lang.Object[])
  deactivate()V = Deactivate()
  exists()Z = Exists()
  getMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method; = GetMethod(Java.Lang.Class, string, Java.Lang.Class[])
  getMethods(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/reflect/Method; = GetMethods(Java.Lang.Class, string)
  resolve()V = Resolve()
net/optifine/reflect/ReflectorRaw = Net.Optifine.Reflect.ReflectorRaw
  getField(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Field; = GetField(Java.Lang.Class, Java.Lang.Class)
  getField(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/lang/reflect/Field; = GetField(Java.Lang.Class, Java.Lang.Class, int)
  getFieldAfter(Ljava/lang/Class;Ljava/lang/reflect/Field;Ljava/lang/Class;I)Ljava/lang/reflect/Field; = GetFieldAfter(Java.Lang.Class, Java.Lang.Reflect.Field, Java.Lang.Class, int)
  getFields(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/reflect/Field; = GetFields(Java.Lang.Class, Java.Lang.Class)
  getFields(Ljava/lang/Object;[Ljava/lang/reflect/Field;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/reflect/Field; = GetFields(Java.Lang.Object, Java.Lang.Reflect.Field[], Java.Lang.Class, Java.Lang.Object)
  getFields([Ljava/lang/reflect/Field;Ljava/lang/Class;)[Ljava/lang/reflect/Field; = GetFields(Java.Lang.Reflect.Field[], Java.Lang.Class)
  getFieldsAfter(Ljava/lang/Class;Ljava/lang/reflect/Field;Ljava/lang/Class;)[Ljava/lang/reflect/Field; = GetFieldsAfter(Java.Lang.Class, Java.Lang.Reflect.Field, Java.Lang.Class)
  getFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class)
  getFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;I)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class, int)
  getReflectorField(Ljava/lang/Class;Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorField; = GetReflectorField(Java.Lang.Class, Java.Lang.Class)
  getReflectorField(Ljava/lang/Class;Ljava/lang/Class;I)Lnet/optifine/reflect/ReflectorField; = GetReflectorField(Java.Lang.Class, Java.Lang.Class, int)
  setFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class, int, Java.Lang.Object)
  setFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class, Java.Lang.Object)
net/optifine/reflect/ReflectorRaw = Net.Optifine.Reflect.ReflectorRaw
  getField(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Field; = GetField(Java.Lang.Class, Java.Lang.Class)
  getField(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/lang/reflect/Field; = GetField(Java.Lang.Class, Java.Lang.Class, int)
  getFieldAfter(Ljava/lang/Class;Ljava/lang/reflect/Field;Ljava/lang/Class;I)Ljava/lang/reflect/Field; = GetFieldAfter(Java.Lang.Class, Java.Lang.Reflect.Field, Java.Lang.Class, int)
  getFields(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/reflect/Field; = GetFields(Java.Lang.Class, Java.Lang.Class)
  getFields(Ljava/lang/Object;[Ljava/lang/reflect/Field;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/reflect/Field; = GetFields(Java.Lang.Object, Java.Lang.Reflect.Field[], Java.Lang.Class, Java.Lang.Object)
  getFields([Ljava/lang/reflect/Field;Ljava/lang/Class;)[Ljava/lang/reflect/Field; = GetFields(Java.Lang.Reflect.Field[], Java.Lang.Class)
  getFieldsAfter(Ljava/lang/Class;Ljava/lang/reflect/Field;Ljava/lang/Class;)[Ljava/lang/reflect/Field; = GetFieldsAfter(Java.Lang.Class, Java.Lang.Reflect.Field, Java.Lang.Class)
  getFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class)
  getFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;I)Ljava/lang/Object; = GetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class, int)
  getReflectorField(Ljava/lang/Class;Ljava/lang/Class;)Lnet/optifine/reflect/ReflectorField; = GetReflectorField(Java.Lang.Class, Java.Lang.Class)
  getReflectorField(Ljava/lang/Class;Ljava/lang/Class;I)Lnet/optifine/reflect/ReflectorField; = GetReflectorField(Java.Lang.Class, Java.Lang.Class, int)
  setFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class, int, Java.Lang.Object)
  setFieldValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)Z = SetFieldValue(Java.Lang.Object, Java.Lang.Class, Java.Lang.Class, Java.Lang.Object)
net/optifine/reflect/ReflectorResolver = Net.Optifine.Reflect.ReflectorResolver
  <init>()V = .ctor()
  register(Lnet/optifine/reflect/IResolvable;)V = Register(Net.Optifine.Reflect.IResolvable)
  resolve()V = Resolve()
net/optifine/reflect/ReflectorResolver = Net.Optifine.Reflect.ReflectorResolver
  <init>()V = .ctor()
  register(Lnet/optifine/reflect/IResolvable;)V = Register(Net.Optifine.Reflect.IResolvable)
  resolve()V = Resolve()
net/optifine/render/Blender = Net.Optifine.Render.Blender
  <init>()V = .ctor()
  BLEND_ADD = BlendAdd
  BLEND_ALPHA = BlendAlpha
  BLEND_BURN = BlendBurn
  BLEND_DEFAULT = BlendDefault
  BLEND_DODGE = BlendDodge
  BLEND_MULTIPLY = BlendMultiply
  BLEND_OVERLAY = BlendOverlay
  BLEND_REPLACE = BlendReplace
  BLEND_SCREEN = BlendScreen
  BLEND_SUBSTRACT = BlendSubstract
  clearBlend(F)V = ClearBlend(float)
  parseBlend(Ljava/lang/String;)I = ParseBlend(string)
  setupBlend(IF)V = SetupBlend(int, float)
net/optifine/render/Blender = Net.Optifine.Render.Blender
  <init>()V = .ctor()
  BLEND_ADD = BlendAdd
  BLEND_ALPHA = BlendAlpha
  BLEND_BURN = BlendBurn
  BLEND_DEFAULT = BlendDefault
  BLEND_DODGE = BlendDodge
  BLEND_MULTIPLY = BlendMultiply
  BLEND_OVERLAY = BlendOverlay
  BLEND_REPLACE = BlendReplace
  BLEND_SCREEN = BlendScreen
  BLEND_SUBSTRACT = BlendSubstract
  clearBlend(F)V = ClearBlend(float)
  parseBlend(Ljava/lang/String;)I = ParseBlend(string)
  setupBlend(IF)V = SetupBlend(int, float)
net/optifine/render/BoxVertexPositions = Net.Optifine.Render.BoxVertexPositions
  <init>()V = .ctor()
  make()[[Lnet/optifine/render/VertexPosition; = Make()
net/optifine/render/BoxVertexPositions = Net.Optifine.Render.BoxVertexPositions
  <init>()V = .ctor()
  make()[[Lnet/optifine/render/VertexPosition; = Make()
net/optifine/render/BufferBuilderCache = Net.Optifine.Render.BufferBuilderCache
  <init>()V = .ctor()
  tempFloat4 = TempFloat4
  tempInt4 = TempInt4
  getAnimatedSprites()Ljava/util/BitSet; = AnimatedSprites
  getMultiTextureBuilder()Lnet/optifine/render/MultiTextureBuilder; = MultiTextureBuilder
  getRenderEnv()Lnet/optifine/render/RenderEnv; = RenderEnv
  getSVertexBuilder()Lnet/optifine/shaders/SVertexBuilder; = SVertexBuilder
  getTempFloat4()[F = GetTempFloat4()
  getTempInt4()[I = GetTempInt4()
net/optifine/render/BufferBuilderCache = Net.Optifine.Render.BufferBuilderCache
  <init>()V = .ctor()
  tempFloat4 = TempFloat4
  tempInt4 = TempInt4
  getAnimatedSprites()Ljava/util/BitSet; = AnimatedSprites
  getMultiTextureBuilder()Lnet/optifine/render/MultiTextureBuilder; = MultiTextureBuilder
  getRenderEnv()Lnet/optifine/render/RenderEnv; = RenderEnv
  getSVertexBuilder()Lnet/optifine/shaders/SVertexBuilder; = SVertexBuilder
  getTempFloat4()[F = GetTempFloat4()
  getTempInt4()[I = GetTempInt4()
net/optifine/render/ChunkLayerMap = Net.Optifine.Render.ChunkLayerMap
  <init>(Ljava/util/function/Function;)V = .ctor(Java.Util.Functions.IFunction)
  values()Ljava/util/Collection; = Values()
net/optifine/render/ChunkLayerMap = Net.Optifine.Render.ChunkLayerMap
  values()Ljava/util/Collection; = Values()
net/optifine/render/ChunkLayerSet = Net.Optifine.Render.ChunkLayerSet
  <init>()V = .ctor()
  isEmpty()Z = IsEmpty
  clear()V = Clear()
  contains(Ljava/lang/Object;)Z = Contains(Java.Lang.Object)
  containsAll(Ljava/util/Collection;)Z = ContainsAll(System.Collections.Generic.ICollection<object>)
  iterator()Ljava/util/Iterator; = Iterator()
  remove(Ljava/lang/Object;)Z = Remove(Java.Lang.Object)
  removeAll(Ljava/util/Collection;)Z = RemoveAll(System.Collections.Generic.ICollection<object>)
  retainAll(Ljava/util/Collection;)Z = RetainAll(System.Collections.Generic.ICollection<object>)
  size()I = Size()
  toArray()[Ljava/lang/Object; = ToArray()
  toArray([Ljava/lang/Object;)[Ljava/lang/Object; = ToArray(Java.Lang.Object[])
net/optifine/render/ChunkVisibility = Net.Optifine.Render.ChunkVisibility
  <init>()V = .ctor()
  MASK_FACINGS = MaskFacings
  isFinished()Z = IsFinished
  reset()V = Reset()
net/optifine/render/ChunkVisibility = Net.Optifine.Render.ChunkVisibility
  <init>()V = .ctor()
  MASK_FACINGS = MaskFacings
  isFinished()Z = IsFinished
  reset()V = Reset()
net/optifine/render/ClearVertexBuffersTask = Net.Optifine.Render.ClearVertexBuffersTask
  run()V = Run()
  toString()Ljava/lang/String; = ToString()
net/optifine/render/ClearVertexBuffersTask = Net.Optifine.Render.ClearVertexBuffersTask
  run()V = Run()
net/optifine/render/GlAlphaState = Net.Optifine.Render.GlAlphaState
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  <init>(ZIF)V = .ctor(bool, int, float)
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getFunc()I = Func
  getRef()F = Ref
  apply()V = Apply()
  setDisabled()V = SetDisabled()
  setEnabled()V = SetEnabled()
  setFuncRef(IF)V = SetFuncRef(int, float)
  setState(ZIF)V = SetState(bool, int, float)
  setState(Lnet/optifine/render/GlAlphaState;)V = SetState(Net.Optifine.Render.GlAlphaState)
  toString()Ljava/lang/String; = ToString()
net/optifine/render/GlAlphaState = Net.Optifine.Render.GlAlphaState
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  <init>(ZIF)V = .ctor(bool, int, float)
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getFunc()I = Func
  getRef()F = Ref
  apply()V = Apply()
  setDisabled()V = SetDisabled()
  setEnabled()V = SetEnabled()
  setFuncRef(IF)V = SetFuncRef(int, float)
  setState(ZIF)V = SetState(bool, int, float)
  setState(Lnet/optifine/render/GlAlphaState;)V = SetState(Net.Optifine.Render.GlAlphaState)
net/optifine/render/GlBlendState = Net.Optifine.Render.GlBlendState
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  <init>(ZII)V = .ctor(bool, int, int)
  <init>(ZIIII)V = .ctor(bool, int, int, int, int)
  getDstFactor()I = DstFactor
  getDstFactorAlpha()I = DstFactorAlpha
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  isSeparate()Z = IsSeparate
  getSrcFactor()I = SrcFactor
  getSrcFactorAlpha()I = SrcFactorAlpha
  apply()V = Apply()
  setDisabled()V = SetDisabled()
  setEnabled()V = SetEnabled()
  setFactors(II)V = SetFactors(int, int)
  setFactors(IIII)V = SetFactors(int, int, int, int)
  setState(ZIIII)V = SetState(bool, int, int, int, int)
  setState(Lnet/optifine/render/GlBlendState;)V = SetState(Net.Optifine.Render.GlBlendState)
  toString()Ljava/lang/String; = ToString()
net/optifine/render/GlBlendState = Net.Optifine.Render.GlBlendState
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  <init>(ZII)V = .ctor(bool, int, int)
  <init>(ZIIII)V = .ctor(bool, int, int, int, int)
  getDstFactor()I = DstFactor
  getDstFactorAlpha()I = DstFactorAlpha
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  isSeparate()Z = IsSeparate
  getSrcFactor()I = SrcFactor
  getSrcFactorAlpha()I = SrcFactorAlpha
  apply()V = Apply()
  setDisabled()V = SetDisabled()
  setEnabled()V = SetEnabled()
  setFactors(II)V = SetFactors(int, int)
  setFactors(IIII)V = SetFactors(int, int, int, int)
  setState(ZIIII)V = SetState(bool, int, int, int, int)
  setState(Lnet/optifine/render/GlBlendState;)V = SetState(Net.Optifine.Render.GlBlendState)
net/optifine/render/GLConst = Net.Optifine.Render.GLConst
  <init>()V = .ctor()
  GL_COLOR_ATTACHMENT0 = GlColorAttachment0
  GL_DEPTH_ATTACHMENT = GlDepthAttachment
  GL_EXP = GlExp
  GL_EXP2 = GlExp2
  GL_FRAMEBUFFER = GlFramebuffer
  GL_FRAMEBUFFER_COMPLETE = GlFramebufferComplete
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = GlFramebufferIncompleteAttachment
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = GlFramebufferIncompleteDrawBuffer
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = GlFramebufferIncompleteMissingAttachment
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = GlFramebufferIncompleteReadBuffer
  GL_LINEAR = GlLinear
  GL_LINEAR_MIPMAP_LINEAR = GlLinearMipmapLinear
  GL_LINEAR_MIPMAP_NEAREST = GlLinearMipmapNearest
  GL_NEAREST = GlNearest
  GL_NEAREST_MIPMAP_LINEAR = GlNearestMipmapLinear
  GL_NEAREST_MIPMAP_NEAREST = GlNearestMipmapNearest
  GL_RENDERBUFFER = GlRenderbuffer
  GL_TEXTURE_2D = GlTexture2d
  GL_TEXTURE_MAG_FILTER = GlTextureMagFilter
  GL_TEXTURE_MAX_ANISOTROPY_EXT = GlTextureMaxAnisotropyExt
  GL_TEXTURE_MIN_FILTER = GlTextureMinFilter
net/optifine/render/GLConst = Net.Optifine.Render.GLConst
  <init>()V = .ctor()
  GL_COLOR_ATTACHMENT0 = GlColorAttachment0
  GL_DEPTH_ATTACHMENT = GlDepthAttachment
  GL_EXP = GlExp
  GL_EXP2 = GlExp2
  GL_FRAMEBUFFER = GlFramebuffer
  GL_FRAMEBUFFER_COMPLETE = GlFramebufferComplete
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = GlFramebufferIncompleteAttachment
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = GlFramebufferIncompleteDrawBuffer
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = GlFramebufferIncompleteMissingAttachment
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = GlFramebufferIncompleteReadBuffer
  GL_LINEAR = GlLinear
  GL_LINEAR_MIPMAP_LINEAR = GlLinearMipmapLinear
  GL_LINEAR_MIPMAP_NEAREST = GlLinearMipmapNearest
  GL_NEAREST = GlNearest
  GL_NEAREST_MIPMAP_LINEAR = GlNearestMipmapLinear
  GL_NEAREST_MIPMAP_NEAREST = GlNearestMipmapNearest
  GL_RENDERBUFFER = GlRenderbuffer
  GL_TEXTURE_2D = GlTexture2d
  GL_TEXTURE_MAG_FILTER = GlTextureMagFilter
  GL_TEXTURE_MAX_ANISOTROPY_EXT = GlTextureMaxAnisotropyExt
  GL_TEXTURE_MIN_FILTER = GlTextureMinFilter
net/optifine/render/GlCullState = Net.Optifine.Render.GlCullState
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  <init>(ZI)V = .ctor(bool, int)
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getMode()I = Mode
  setMode(I)V = Mode
  setDisabled()V = SetDisabled()
  setEnabled()V = SetEnabled()
  setState(ZI)V = SetState(bool, int)
  setState(Lnet/optifine/render/GlCullState;)V = SetState(Net.Optifine.Render.GlCullState)
  toString()Ljava/lang/String; = ToString()
net/optifine/render/GlCullState = Net.Optifine.Render.GlCullState
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  <init>(ZI)V = .ctor(bool, int)
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getMode()I = Mode
  setMode(I)V = Mode
  setDisabled()V = SetDisabled()
  setEnabled()V = SetEnabled()
  setState(ZI)V = SetState(bool, int)
  setState(Lnet/optifine/render/GlCullState;)V = SetState(Net.Optifine.Render.GlCullState)
net/optifine/render/GlDepthState = Net.Optifine.Render.GlDepthState
  <init>()V = .ctor()
  <init>(ZZI)V = .ctor(bool, bool, int)
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getFunc()I = Func
  setFunc(I)V = Func
  isMask()Z = Mask
  setMask(Z)V = Mask
  setState(ZZI)V = SetState(bool, bool, int)
  toString()Ljava/lang/String; = ToString()
net/optifine/render/GlDepthState = Net.Optifine.Render.GlDepthState
  <init>()V = .ctor()
  <init>(ZZI)V = .ctor(bool, bool, int)
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getFunc()I = Func
  setFunc(I)V = Func
  isMask()Z = Mask
  setMask(Z)V = Mask
  setState(ZZI)V = SetState(bool, bool, int)
net/optifine/render/IBufferSourceListener = Net.Optifine.Render.IBufferSourceListener
net/optifine/render/ICamera = Net.Optifine.Render.ICamera
  isBoxInFrustumFully(DDDDDD)Z = IsBoxInFrustumFully(double, double, double, double, double, double)
  setCameraPosition(DDD)V = SetCameraPosition(double, double, double)
net/optifine/render/LightCacheOF = Net.Optifine.Render.LightCacheOF
  <init>()V = .ctor()
net/optifine/render/LightCacheOF = Net.Optifine.Render.LightCacheOF
  <init>()V = .ctor()
net/optifine/render/MultiTextureBuilder = Net.Optifine.Render.MultiTextureBuilder
  <init>()V = .ctor()
net/optifine/render/MultiTextureBuilder = Net.Optifine.Render.MultiTextureBuilder
  <init>()V = .ctor()
net/optifine/render/MultiTextureData = Net.Optifine.Render.MultiTextureData
  <init>([Lnet/optifine/render/SpriteRenderData;)V = .ctor(Net.Optifine.Render.SpriteRenderData[])
  applySort()V = ApplySort()
  getSpriteRenderDatas()[Lnet/optifine/render/SpriteRenderData; = GetSpriteRenderDatas()
  prepareSort(Lnet/optifine/render/MultiTextureBuilder;[I)V = PrepareSort(Net.Optifine.Render.MultiTextureBuilder, int[])
  toString()Ljava/lang/String; = ToString()
net/optifine/render/MultiTextureData = Net.Optifine.Render.MultiTextureData
  <init>([Lnet/optifine/render/SpriteRenderData;)V = .ctor(Net.Optifine.Render.SpriteRenderData[])
  applySort()V = ApplySort()
  getSpriteRenderDatas()[Lnet/optifine/render/SpriteRenderData; = GetSpriteRenderDatas()
  prepareSort(Lnet/optifine/render/MultiTextureBuilder;[I)V = PrepareSort(Net.Optifine.Render.MultiTextureBuilder, int[])
net/optifine/render/MultiTextureRenderer = Net.Optifine.Render.MultiTextureRenderer
  <init>()V = .ctor()
net/optifine/render/MultiTextureRenderer = Net.Optifine.Render.MultiTextureRenderer
  <init>()V = .ctor()
net/optifine/render/QuadVertexPositions = Net.Optifine.Render.QuadVertexPositions
  <init>()V = .ctor()
  make()[Lnet/optifine/render/VertexPosition; = Make()
net/optifine/render/QuadVertexPositions = Net.Optifine.Render.QuadVertexPositions
  <init>()V = .ctor()
  make()[Lnet/optifine/render/VertexPosition; = Make()
net/optifine/render/RenderCache = Net.Optifine.Render.RenderCache
  <init>(J)V = .ctor(long)
net/optifine/render/RenderCache = Net.Optifine.Render.RenderCache
  <init>(J)V = .ctor(long)
net/optifine/render/RenderEnv = Net.Optifine.Render.RenderEnv
  getBlockId()I = BlockId
  getBoundsFlags()Ljava/util/BitSet; = BoundsFlags
  isBreakingAnimation()Z = IsBreakingAnimation
  isSmartLeaves()Z = IsSmartLeaves
  getMetadata()I = Metadata
  isOverlaysRendered()Z = OverlaysRendered
  setOverlaysRendered(Z)V = OverlaysRendered
  getBorderFlags()[Z = GetBorderFlags()
  getBorderFlags2()[Z = GetBorderFlags2()
  getBorderFlags3()[Z = GetBorderFlags3()
  getQuadBounds()[F = GetQuadBounds()
  isBreakingAnimation(Ljava/util/List;)Z = InvokeIsBreakingAnimation(System.Collections.IList)
net/optifine/render/RenderEnv = Net.Optifine.Render.RenderEnv
  getBlockId()I = BlockId
  getBoundsFlags()Ljava/util/BitSet; = BoundsFlags
  isBreakingAnimation()Z = IsBreakingAnimation
  isSmartLeaves()Z = IsSmartLeaves
  getMetadata()I = Metadata
  isOverlaysRendered()Z = OverlaysRendered
  setOverlaysRendered(Z)V = OverlaysRendered
  getBorderFlags()[Z = GetBorderFlags()
  getBorderFlags2()[Z = GetBorderFlags2()
  getBorderFlags3()[Z = GetBorderFlags3()
  getQuadBounds()[F = GetQuadBounds()
  isBreakingAnimation(Ljava/util/List;)Z = InvokeIsBreakingAnimation(System.Collections.IList)
net/optifine/render/RenderPositions = Net.Optifine.Render.RenderPositions
  toString()Ljava/lang/String; = ToString()
net/optifine/render/RenderPositions = Net.Optifine.Render.RenderPositions
net/optifine/render/RenderStateManager = Net.Optifine.Render.RenderStateManager
  <init>()V = .ctor()
  disableCache()V = DisableCache()
  enableCache()V = EnableCache()
  flushCache()V = FlushCache()
net/optifine/render/RenderStateManager = Net.Optifine.Render.RenderStateManager
  <init>()V = .ctor()
  disableCache()V = DisableCache()
  enableCache()V = EnableCache()
  flushCache()V = FlushCache()
net/optifine/render/RenderTypes = Net.Optifine.Render.RenderTypes
  <init>()V = .ctor()
net/optifine/render/RenderTypes = Net.Optifine.Render.RenderTypes
  <init>()V = .ctor()
net/optifine/render/RenderUtils = Net.Optifine.Render.RenderUtils
  <init>()V = .ctor()
  isFlushRenderBuffers()Z = IsFlushRenderBuffers
  finishRenderBuffers()V = FinishRenderBuffers()
  flushRenderBuffers()V = FlushRenderBuffers()
  setFlushRenderBuffers(Z)Z = SetFlushRenderBuffers(bool)
net/optifine/render/RenderUtils = Net.Optifine.Render.RenderUtils
  <init>()V = .ctor()
  isFlushRenderBuffers()Z = IsFlushRenderBuffers
  finishRenderBuffers()V = FinishRenderBuffers()
  flushRenderBuffers()V = FlushRenderBuffers()
  setFlushRenderBuffers(Z)Z = SetFlushRenderBuffers(bool)
net/optifine/render/SpriteRenderData = Net.Optifine.Render.SpriteRenderData
  getCounts()[I = GetCounts()
  getPositions()[I = GetPositions()
  toString()Ljava/lang/String; = ToString()
net/optifine/render/SpriteRenderData = Net.Optifine.Render.SpriteRenderData
  getCounts()[I = GetCounts()
  getPositions()[I = GetPositions()
net/optifine/render/TestMath = Net.Optifine.Render.TestMath
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/render/TestMath = Net.Optifine.Render.TestMath
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/render/VboRange = Net.Optifine.Render.VboRange
  <init>()V = .ctor()
  getNext()Lnet/optifine/render/VboRange; = Next
  getNode()Lnet/optifine/util/LinkedList$Node; = Node
  getPosition()I = Position
  setPosition(I)V = Position
  getPositionNext()I = PositionNext
  getPrev()Lnet/optifine/render/VboRange; = Prev
  getSize()I = Size
  setSize(I)V = Size
  toString()Ljava/lang/String; = ToString()
net/optifine/render/VboRange = Net.Optifine.Render.VboRange
  <init>()V = .ctor()
  getNext()Lnet/optifine/render/VboRange; = Next
  getNode()Lnet/optifine/util/LinkedList$Node; = Node
  getPosition()I = Position
  setPosition(I)V = Position
  getPositionNext()I = PositionNext
  getPrev()Lnet/optifine/render/VboRange; = Prev
  getSize()I = Size
  setSize(I)V = Size
net/optifine/render/VboRegion = Net.Optifine.Render.VboRegion
  getPositionTop()I = PositionTop
  bindBuffer()V = BindBuffer()
  bindVertexArray()V = BindVertexArray()
  bufferData(Ljava/nio/ByteBuffer;Lnet/optifine/render/VboRange;)V = BufferData(Java.Nio.ByteBuffer, Net.Optifine.Render.VboRange)
  deleteGlBuffers()V = DeleteGlBuffers()
  finishDraw()V = FinishDraw()
  unbindBuffer()V = UnbindBuffer()
  unbindVertexArray()V = UnbindVertexArray()
net/optifine/render/VboRegion = Net.Optifine.Render.VboRegion
  getPositionTop()I = PositionTop
  bindBuffer()V = BindBuffer()
  bindVertexArray()V = BindVertexArray()
  bufferData(Ljava/nio/ByteBuffer;Lnet/optifine/render/VboRange;)V = BufferData(Java.Nio.ByteBuffer, Net.Optifine.Render.VboRange)
  deleteGlBuffers()V = DeleteGlBuffers()
  finishDraw()V = FinishDraw()
  unbindBuffer()V = UnbindBuffer()
  unbindVertexArray()V = UnbindVertexArray()
net/optifine/render/VertexBuilderDummy = Net.Optifine.Render.VertexBuilderDummy
net/optifine/render/VertexBuilderWrapper = Net.Optifine.Render.VertexBuilderWrapper
  isMultiTexture()Z = IsMultiTexture
  getVertexCount()I = VertexCount
  getTempFloat4(FFFF)[F = GetTempFloat4(float, float, float, float)
  getTempInt4(IIII)[I = GetTempInt4(int, int, int, int)
  setMidBlock(FFF)V = SetMidBlock(float, float, float)
  setQuadVertexPositions([Lnet/optifine/render/VertexPosition;)V = SetQuadVertexPositions(Net.Optifine.Render.VertexPosition[])
net/optifine/render/VertexPosition = Net.Optifine.Render.VertexPosition
  <init>()V = .ctor()
  getFrameId()I = FrameId
  isVelocityValid()Z = IsVelocityValid
  getVelocityX()F = VelocityX
  getVelocityY()F = VelocityY
  getVelocityZ()F = VelocityZ
  setPosition(IFFF)V = SetPosition(int, float, float, float)
net/optifine/render/VertexPosition = Net.Optifine.Render.VertexPosition
  <init>()V = .ctor()
  getFrameId()I = FrameId
  isVelocityValid()Z = IsVelocityValid
  getVelocityX()F = VelocityX
  getVelocityY()F = VelocityY
  getVelocityZ()F = VelocityZ
  setPosition(IFFF)V = SetPosition(int, float, float, float)
net/optifine/shaders/BlockAlias = Net.Optifine.Shaders.BlockAlias
  <init>(I[Lnet/optifine/config/MatchBlock;)V = .ctor(int, Net.Optifine.Config.MatchBlock[])
  <init>(II[Lnet/optifine/config/MatchBlock;)V = .ctor(int, int, Net.Optifine.Config.MatchBlock[])
  getAliasBlockId()I = AliasBlockId
  getAliasMetadata()I = AliasMetadata
  getMatchBlockIds()[I = GetMatchBlockIds()
  getMatchBlocks()[Lnet/optifine/config/MatchBlock; = GetMatchBlocks()
  getMatchBlocks(I)[Lnet/optifine/config/MatchBlock; = GetMatchBlocks(int)
  matches(II)Z = Matches(int, int)
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/BlockAlias = Net.Optifine.Shaders.BlockAlias
  <init>(I[Lnet/optifine/config/MatchBlock;)V = .ctor(int, Net.Optifine.Config.MatchBlock[])
  <init>(II[Lnet/optifine/config/MatchBlock;)V = .ctor(int, int, Net.Optifine.Config.MatchBlock[])
  getAliasBlockId()I = AliasBlockId
  getAliasMetadata()I = AliasMetadata
  getMatchBlockIds()[I = GetMatchBlockIds()
  getMatchBlocks()[Lnet/optifine/config/MatchBlock; = GetMatchBlocks()
  getMatchBlocks(I)[Lnet/optifine/config/MatchBlock; = GetMatchBlocks(int)
  matches(II)Z = Matches(int, int)
net/optifine/shaders/BlockAliases = Net.Optifine.Shaders.BlockAliases
  <init>()V = .ctor()
  getBlockLayerPropertes()Lnet/optifine/util/PropertiesOrdered; = BlockLayerPropertes
  hasAliasMetadata()Z = HasAliasMetadata
  getBlockAlias(II)Lnet/optifine/shaders/BlockAlias; = GetBlockAlias(int, int)
  getBlockAliases(I)[Lnet/optifine/shaders/BlockAlias; = GetBlockAliases(int)
  reset()V = Reset()
  resourcesReloaded()V = ResourcesReloaded()
  update(Lnet/optifine/shaders/IShaderPack;)V = Update(Net.Optifine.Shaders.IShaderPack)
net/optifine/shaders/BlockAliases = Net.Optifine.Shaders.BlockAliases
  <init>()V = .ctor()
  getBlockLayerPropertes()Lnet/optifine/util/PropertiesOrdered; = BlockLayerPropertes
  hasAliasMetadata()Z = HasAliasMetadata
  getBlockAlias(II)Lnet/optifine/shaders/BlockAlias; = GetBlockAlias(int, int)
  getBlockAliases(I)[Lnet/optifine/shaders/BlockAlias; = GetBlockAliases(int)
  reset()V = Reset()
  resourcesReloaded()V = ResourcesReloaded()
  update(Lnet/optifine/shaders/IShaderPack;)V = Update(Net.Optifine.Shaders.IShaderPack)
net/optifine/shaders/ComputeProgram = Net.Optifine.Shaders.ComputeProgram
  <init>(Ljava/lang/String;Lnet/optifine/shaders/ProgramStage;)V = .ctor(string, Net.Optifine.Shaders.ProgramStage)
  getCompositeMipmapSetting()I = CompositeMipmapSetting
  setCompositeMipmapSetting(I)V = CompositeMipmapSetting
  hasCompositeMipmaps()Z = HasCompositeMipmaps
  getId()I = Id
  setId(I)V = Id
  getName()Ljava/lang/String; = Name
  getProgramStage()Lnet/optifine/shaders/ProgramStage; = ProgramStage
  getRef()I = Ref
  setRef(I)V = Ref
  resetConfiguration()V = ResetConfiguration()
  resetId()V = ResetId()
  resetProperties()V = ResetProperties()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/ComputeProgram = Net.Optifine.Shaders.ComputeProgram
  <init>(Ljava/lang/String;Lnet/optifine/shaders/ProgramStage;)V = .ctor(string, Net.Optifine.Shaders.ProgramStage)
  getCompositeMipmapSetting()I = CompositeMipmapSetting
  setCompositeMipmapSetting(I)V = CompositeMipmapSetting
  hasCompositeMipmaps()Z = HasCompositeMipmaps
  getId()I = Id
  setId(I)V = Id
  getName()Ljava/lang/String; = Name
  getProgramStage()Lnet/optifine/shaders/ProgramStage; = ProgramStage
  getRef()I = Ref
  setRef(I)V = Ref
  resetConfiguration()V = ResetConfiguration()
  resetId()V = ResetId()
  resetProperties()V = ResetProperties()
net/optifine/shaders/config/EnumShaderOption = Net.Optifine.Shaders.Config.EnumShaderOption
  ANTIALIASING = Antialiasing
  CLOUD_SHADOW = CloudShadow
  HAND_DEPTH_MUL = HandDepthMul
  NORMAL_MAP = NormalMap
  OLD_HAND_LIGHT = OldHandLight
  OLD_LIGHTING = OldLighting
  RENDER_RES_MUL = RenderResMul
  SHADER_PACK = ShaderPack
  SHADOW_CLIP_FRUSTRUM = ShadowClipFrustrum
  SHADOW_RES_MUL = ShadowResMul
  SPECULAR_MAP = SpecularMap
  TEX_MAG_FIL_B = TexMagFilB
  TEX_MAG_FIL_N = TexMagFilN
  TEX_MAG_FIL_S = TexMagFilS
  TEX_MIN_FIL_B = TexMinFilB
  TEX_MIN_FIL_N = TexMinFilN
  TEX_MIN_FIL_S = TexMinFilS
  TWEAK_BLOCK_DAMAGE = TweakBlockDamage
  getPropertyKey()Ljava/lang/String; = PropertyKey
  getResourceKey()Ljava/lang/String; = ResourceKey
  getValueDefault()Ljava/lang/String; = ValueDefault
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/config/EnumShaderOption; = ValueOf(string)
  values()[Lnet/optifine/shaders/config/EnumShaderOption; = Values()
net/optifine/shaders/config/EnumShaderOption = Net.Optifine.Shaders.Config.EnumShaderOption
  ANTIALIASING = Antialiasing
  CLOUD_SHADOW = CloudShadow
  HAND_DEPTH_MUL = HandDepthMul
  NORMAL_MAP = NormalMap
  OLD_HAND_LIGHT = OldHandLight
  OLD_LIGHTING = OldLighting
  RENDER_RES_MUL = RenderResMul
  SHADER_PACK = ShaderPack
  SHADOW_CLIP_FRUSTRUM = ShadowClipFrustrum
  SHADOW_RES_MUL = ShadowResMul
  SPECULAR_MAP = SpecularMap
  TEX_MAG_FIL_B = TexMagFilB
  TEX_MAG_FIL_N = TexMagFilN
  TEX_MAG_FIL_S = TexMagFilS
  TEX_MIN_FIL_B = TexMinFilB
  TEX_MIN_FIL_N = TexMinFilN
  TEX_MIN_FIL_S = TexMinFilS
  TWEAK_BLOCK_DAMAGE = TweakBlockDamage
  getPropertyKey()Ljava/lang/String; = PropertyKey
  getResourceKey()Ljava/lang/String; = ResourceKey
  getValueDefault()Ljava/lang/String; = ValueDefault
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/config/EnumShaderOption; = ValueOf(string)
  values()[Lnet/optifine/shaders/config/EnumShaderOption; = Values()
net/optifine/shaders/config/ExpressionShaderOptionSwitch = Net.Optifine.Shaders.Config.ExpressionShaderOptionSwitch
  <init>(Lnet/optifine/shaders/config/ShaderOptionSwitch;)V = .ctor(Net.Optifine.Shaders.Config.ShaderOptionSwitch)
  eval()Z = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/config/ExpressionShaderOptionSwitch = Net.Optifine.Shaders.Config.ExpressionShaderOptionSwitch
  <init>(Lnet/optifine/shaders/config/ShaderOptionSwitch;)V = .ctor(Net.Optifine.Shaders.Config.ShaderOptionSwitch)
  eval()Z = Eval()
net/optifine/shaders/config/HeaderLine = Net.Optifine.Shaders.Config.HeaderLine
  <init>()V = .ctor()
  getText()Ljava/lang/String; = Text
  equals(Ljava/lang/Object;)Z = Equals(Java.Lang.Object)
  hashCode()I = GetHashCode()
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/config/HeaderLine = Net.Optifine.Shaders.Config.HeaderLine
  <init>()V = .ctor()
  getText()Ljava/lang/String; = Text
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
net/optifine/shaders/config/HeaderLineFunction = Net.Optifine.Shaders.Config.HeaderLineFunction
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getText()Ljava/lang/String; = Text
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
net/optifine/shaders/config/HeaderLineFunction = Net.Optifine.Shaders.Config.HeaderLineFunction
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getText()Ljava/lang/String; = Text
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
net/optifine/shaders/config/HeaderLineText = Net.Optifine.Shaders.Config.HeaderLineText
  <init>(Ljava/lang/String;)V = .ctor(string)
  getText()Ljava/lang/String; = Text
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
net/optifine/shaders/config/HeaderLineText = Net.Optifine.Shaders.Config.HeaderLineText
  <init>(Ljava/lang/String;)V = .ctor(string)
  getText()Ljava/lang/String; = Text
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
net/optifine/shaders/config/HeaderLineUniform = Net.Optifine.Shaders.Config.HeaderLineUniform
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
net/optifine/shaders/config/HeaderLineUniform = Net.Optifine.Shaders.Config.HeaderLineUniform
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
net/optifine/shaders/config/HeaderLineVariable = Net.Optifine.Shaders.Config.HeaderLineVariable
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getText()Ljava/lang/String; = Text
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
net/optifine/shaders/config/HeaderLineVariable = Net.Optifine.Shaders.Config.HeaderLineVariable
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getText()Ljava/lang/String; = Text
  matches(Ljava/lang/String;)Z = Matches(string)
  removeFrom(Ljava/lang/String;)Ljava/lang/String; = RemoveFrom(string)
net/optifine/shaders/config/MacroExpressionResolver = Net.Optifine.Shaders.Config.MacroExpressionResolver
  <init>(Ljava/util/Map;)V = .ctor(System.Collections.Generic.IDictionary<string, string>)
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
net/optifine/shaders/config/MacroExpressionResolver = Net.Optifine.Shaders.Config.MacroExpressionResolver
  <init>(Ljava/util/Map;)V = .ctor(System.Collections.Generic.IDictionary<string, string>)
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
net/optifine/shaders/config/MacroProcessor = Net.Optifine.Shaders.Config.MacroProcessor
  <init>()V = .ctor()
  process(Ljava/io/InputStream;Ljava/lang/String;Z)Ljava/io/InputStream; = Process(System.IO.Stream, string, bool)
  process(Ljava/lang/String;)Ljava/lang/String; = Process(string)
net/optifine/shaders/config/MacroProcessor = Net.Optifine.Shaders.Config.MacroProcessor
  <init>()V = .ctor()
  process(Ljava/io/InputStream;Ljava/lang/String;Z)Ljava/io/InputStream; = Process(System.IO.Stream, string, bool)
  process(Ljava/lang/String;)Ljava/lang/String; = Process(string)
net/optifine/shaders/config/MacroState = Net.Optifine.Shaders.Config.MacroState
  <init>()V = .ctor()
  PATTERN_DIRECTIVE = PatternDirective
  isMacroLine(Ljava/lang/String;)Z = IsMacroLine(string)
  processLine(Ljava/lang/String;)Z = ProcessLine(string)
net/optifine/shaders/config/MacroState = Net.Optifine.Shaders.Config.MacroState
  <init>()V = .ctor()
  PATTERN_DIRECTIVE = PatternDirective
  isMacroLine(Ljava/lang/String;)Z = IsMacroLine(string)
  processLine(Ljava/lang/String;)Z = ProcessLine(string)
net/optifine/shaders/config/Property = Net.Optifine.Shaders.Config.Property
  <init>(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V = .ctor(string, string[], string, string[], int)
  getPropertyName()Ljava/lang/String; = PropertyName
  getPropertyValue()Ljava/lang/String; = PropertyValue
  getUserName()Ljava/lang/String; = UserName
  getUserValue()Ljava/lang/String; = UserValue
  getValue()I = Value
  setValue(I)V = Value
  loadFrom(Ljava/util/Properties;)Z = LoadFrom(Java.Util.Properties)
  nextValue(Z)V = NextValue(bool)
  resetValue()V = ResetValue()
  saveTo(Ljava/util/Properties;)V = SaveTo(Java.Util.Properties)
  setPropertyValue(Ljava/lang/String;)Z = SetPropertyValue(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/config/Property = Net.Optifine.Shaders.Config.Property
  <init>(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V = .ctor(string, string[], string, string[], int)
  getPropertyName()Ljava/lang/String; = PropertyName
  getPropertyValue()Ljava/lang/String; = PropertyValue
  getUserName()Ljava/lang/String; = UserName
  getUserValue()Ljava/lang/String; = UserValue
  getValue()I = Value
  setValue(I)V = Value
  loadFrom(Ljava/util/Properties;)Z = LoadFrom(Java.Util.Properties)
  nextValue(Z)V = NextValue(bool)
  resetValue()V = ResetValue()
  saveTo(Ljava/util/Properties;)V = SaveTo(Java.Util.Properties)
  setPropertyValue(Ljava/lang/String;)Z = SetPropertyValue(string)
net/optifine/shaders/config/PropertyDefaultFastFancyOff = Net.Optifine.Shaders.Config.PropertyDefaultFastFancyOff
  <init>(Ljava/lang/String;Ljava/lang/String;I)V = .ctor(string, string, int)
  PROPERTY_VALUES = PropertyValues
  USER_VALUES = UserValues
  isDefault()Z = IsDefault
  isFancy()Z = IsFancy
  isFast()Z = IsFast
  isOff()Z = IsOff
  setPropertyValue(Ljava/lang/String;)Z = SetPropertyValue(string)
net/optifine/shaders/config/PropertyDefaultFastFancyOff = Net.Optifine.Shaders.Config.PropertyDefaultFastFancyOff
  <init>(Ljava/lang/String;Ljava/lang/String;I)V = .ctor(string, string, int)
  PROPERTY_VALUES = PropertyValues
  USER_VALUES = UserValues
  isDefault()Z = IsDefault
  isFancy()Z = IsFancy
  isFast()Z = IsFast
  isOff()Z = IsOff
net/optifine/shaders/config/PropertyDefaultTrueFalse = Net.Optifine.Shaders.Config.PropertyDefaultTrueFalse
  <init>(Ljava/lang/String;Ljava/lang/String;I)V = .ctor(string, string, int)
  PROPERTY_VALUES = PropertyValues
  USER_VALUES = UserValues
  isDefault()Z = IsDefault
  isFalse()Z = IsFalse
  isTrue()Z = IsTrue
  getUserValue()Ljava/lang/String; = UserValue
net/optifine/shaders/config/PropertyDefaultTrueFalse = Net.Optifine.Shaders.Config.PropertyDefaultTrueFalse
  <init>(Ljava/lang/String;Ljava/lang/String;I)V = .ctor(string, string, int)
  PROPERTY_VALUES = PropertyValues
  USER_VALUES = UserValues
  isDefault()Z = IsDefault
  isFalse()Z = IsFalse
  isTrue()Z = IsTrue
net/optifine/shaders/config/RenderScale = Net.Optifine.Shaders.Config.RenderScale
  <init>(FFF)V = .ctor(float, float, float)
  getOffsetX()F = OffsetX
  getOffsetY()F = OffsetY
  getScale()F = Scale
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/config/RenderScale = Net.Optifine.Shaders.Config.RenderScale
  <init>(FFF)V = .ctor(float, float, float)
  getOffsetX()F = OffsetX
  getOffsetY()F = OffsetY
  getScale()F = Scale
net/optifine/shaders/config/ScreenShaderOptions = Net.Optifine.Shaders.Config.ScreenShaderOptions
  <init>(Ljava/lang/String;[Lnet/optifine/shaders/config/ShaderOption;I)V = .ctor(string, Net.Optifine.Shaders.Config.ShaderOption[], int)
  getColumns()I = Columns
  getName()Ljava/lang/String; = Name
  getShaderOptions()[Lnet/optifine/shaders/config/ShaderOption; = GetShaderOptions()
net/optifine/shaders/config/ScreenShaderOptions = Net.Optifine.Shaders.Config.ScreenShaderOptions
  <init>(Ljava/lang/String;[Lnet/optifine/shaders/config/ShaderOption;I)V = .ctor(string, Net.Optifine.Shaders.Config.ShaderOption[], int)
  getColumns()I = Columns
  getName()Ljava/lang/String; = Name
  getShaderOptions()[Lnet/optifine/shaders/config/ShaderOption; = GetShaderOptions()
net/optifine/shaders/config/ShaderLine = Net.Optifine.Shaders.Config.ShaderLine
  <init>(Lnet/optifine/shaders/config/ShaderLine$Type;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Net.Optifine.Shaders.Config.ShaderLine.Type, string, string, string)
  isAttribute()Z = IsAttribute
  isConstBool()Z = IsConstBool
  isConstFloat()Z = IsConstFloat
  isConstInt()Z = IsConstInt
  isConstIVec3()Z = IsConstIVec3
  isConstVec2()Z = IsConstVec2
  isConstVec4()Z = IsConstVec4
  isExtension()Z = IsExtension
  isLayout()Z = IsLayout
  isProperty()Z = IsProperty
  isUniform()Z = IsUniform
  getName()Ljava/lang/String; = Name
  getType()Lnet/optifine/shaders/config/ShaderLine$Type; = Type
  getValue()Ljava/lang/String; = Value
  getValueBool()Z = ValueBool
  getValueFloat()F = ValueFloat
  getValueInt()I = ValueInt
  isAttribute(Ljava/lang/String;)Z = InvokeIsAttribute(string)
  isConstBool(Ljava/lang/String;)Z = InvokeIsConstBool(string)
  isConstBool(Ljava/lang/String;Z)Z = InvokeIsConstBool(string, bool)
  isConstBool(Ljava/lang/String;Ljava/lang/String;)Z = InvokeIsConstBool(string, string)
  isConstBool(Ljava/lang/String;Ljava/lang/String;Z)Z = InvokeIsConstBool(string, string, bool)
  isConstBool(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z = InvokeIsConstBool(string, string, string)
  isConstBool(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z = InvokeIsConstBool(string, string, string, bool)
  isConstFloat(Ljava/lang/String;)Z = InvokeIsConstFloat(string)
  isConstInt(Ljava/lang/String;)Z = InvokeIsConstInt(string)
  isConstIVec3(Ljava/lang/String;)Z = InvokeIsConstIVec3(string)
  isConstVec2(Ljava/lang/String;)Z = InvokeIsConstVec2(string)
  isExtension(Ljava/lang/String;)Z = InvokeIsExtension(string)
  isLayout(Ljava/lang/String;)Z = InvokeIsLayout(string)
  isProperty(Ljava/lang/String;)Z = InvokeIsProperty(string)
  isProperty(Ljava/lang/String;Ljava/lang/String;)Z = InvokeIsProperty(string, string)
  isUniform(Ljava/lang/String;)Z = InvokeIsUniform(string)
  isConstBoolSuffix(Ljava/lang/String;)Z = IsConstBoolSuffix(string)
  isConstBoolSuffix(Ljava/lang/String;Z)Z = IsConstBoolSuffix(string, bool)
  isConstIntSuffix(Ljava/lang/String;)Z = IsConstIntSuffix(string)
  isConstVec4Suffix(Ljava/lang/String;)Z = IsConstVec4Suffix(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/config/ShaderLine = Net.Optifine.Shaders.Config.ShaderLine
  <init>(Lnet/optifine/shaders/config/ShaderLine$Type;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Net.Optifine.Shaders.Config.ShaderLine.Type, string, string, string)
  isAttribute()Z = IsAttribute
  isConstBool()Z = IsConstBool
  isConstFloat()Z = IsConstFloat
  isConstInt()Z = IsConstInt
  isConstIVec3()Z = IsConstIVec3
  isConstVec2()Z = IsConstVec2
  isConstVec4()Z = IsConstVec4
  isExtension()Z = IsExtension
  isLayout()Z = IsLayout
  isProperty()Z = IsProperty
  isUniform()Z = IsUniform
  getName()Ljava/lang/String; = Name
  getValue()Ljava/lang/String; = Value
  getValueBool()Z = ValueBool
  getValueFloat()F = ValueFloat
  getValueInt()I = ValueInt
  getType()Lnet/optifine/shaders/config/ShaderLine$Type; = GetType()
  isAttribute(Ljava/lang/String;)Z = InvokeIsAttribute(string)
  isConstBool(Ljava/lang/String;)Z = InvokeIsConstBool(string)
  isConstBool(Ljava/lang/String;Z)Z = InvokeIsConstBool(string, bool)
  isConstBool(Ljava/lang/String;Ljava/lang/String;)Z = InvokeIsConstBool(string, string)
  isConstBool(Ljava/lang/String;Ljava/lang/String;Z)Z = InvokeIsConstBool(string, string, bool)
  isConstBool(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z = InvokeIsConstBool(string, string, string)
  isConstBool(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z = InvokeIsConstBool(string, string, string, bool)
  isConstFloat(Ljava/lang/String;)Z = InvokeIsConstFloat(string)
  isConstInt(Ljava/lang/String;)Z = InvokeIsConstInt(string)
  isConstIVec3(Ljava/lang/String;)Z = InvokeIsConstIVec3(string)
  isConstVec2(Ljava/lang/String;)Z = InvokeIsConstVec2(string)
  isExtension(Ljava/lang/String;)Z = InvokeIsExtension(string)
  isLayout(Ljava/lang/String;)Z = InvokeIsLayout(string)
  isProperty(Ljava/lang/String;)Z = InvokeIsProperty(string)
  isProperty(Ljava/lang/String;Ljava/lang/String;)Z = InvokeIsProperty(string, string)
  isUniform(Ljava/lang/String;)Z = InvokeIsUniform(string)
  isConstBoolSuffix(Ljava/lang/String;)Z = IsConstBoolSuffix(string)
  isConstBoolSuffix(Ljava/lang/String;Z)Z = IsConstBoolSuffix(string, bool)
  isConstIntSuffix(Ljava/lang/String;)Z = IsConstIntSuffix(string)
  isConstVec4Suffix(Ljava/lang/String;)Z = IsConstVec4Suffix(string)
net/optifine/shaders/config/ShaderMacro = Net.Optifine.Shaders.Config.ShaderMacro
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getName()Ljava/lang/String; = Name
  getSourceLine()Ljava/lang/String; = SourceLine
  getValue()Ljava/lang/String; = Value
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/config/ShaderMacro = Net.Optifine.Shaders.Config.ShaderMacro
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getName()Ljava/lang/String; = Name
  getSourceLine()Ljava/lang/String; = SourceLine
  getValue()Ljava/lang/String; = Value
net/optifine/shaders/config/ShaderMacros = Net.Optifine.Shaders.Config.ShaderMacros
  <init>()V = .ctor()
  MC_ANISOTROPIC_FILTERING = McAnisotropicFiltering
  MC_FXAA_LEVEL = McFxaaLevel
  MC_GL_RENDERER_GALLIUM = McGlRendererGallium
  MC_GL_RENDERER_GEFORCE = McGlRendererGeforce
  MC_GL_RENDERER_INTEL = McGlRendererIntel
  MC_GL_RENDERER_MESA = McGlRendererMesa
  MC_GL_RENDERER_OTHER = McGlRendererOther
  MC_GL_RENDERER_QUADRO = McGlRendererQuadro
  MC_GL_RENDERER_RADEON = McGlRendererRadeon
  MC_GLSL_VERSION = McGlslVersion
  MC_GL_VENDOR_AMD = McGlVendorAmd
  MC_GL_VENDOR_ATI = McGlVendorAti
  MC_GL_VENDOR_INTEL = McGlVendorIntel
  MC_GL_VENDOR_MESA = McGlVendorMesa
  MC_GL_VENDOR_NVIDIA = McGlVendorNvidia
  MC_GL_VENDOR_OTHER = McGlVendorOther
  MC_GL_VENDOR_XORG = McGlVendorXorg
  MC_GL_VERSION = McGlVersion
  MC_HAND_DEPTH = McHandDepth
  MC_NORMAL_MAP = McNormalMap
  MC_OLD_HAND_LIGHT = McOldHandLight
  MC_OLD_LIGHTING = McOldLighting
  MC_OS_LINUX = McOsLinux
  MC_OS_MAC = McOsMac
  MC_OS_OTHER = McOsOther
  MC_OS_WINDOWS = McOsWindows
  MC_RENDER_QUALITY = McRenderQuality
  MC_SHADOW_QUALITY = McShadowQuality
  MC_SPECULAR_MAP = McSpecularMap
  MC_TEXTURE_FORMAT_ = McTextureFormat
  MC_VERSION = McVersion
  getFixedMacroLines()Ljava/lang/String; = FixedMacroLines
  getOptionMacroLines()Ljava/lang/String; = OptionMacroLines
  getOs()Ljava/lang/String; = Os
  getPrefixMacro()Ljava/lang/String; = PrefixMacro
  getRenderer()Ljava/lang/String; = Renderer
  getTextureMacroLines()Ljava/lang/String; = TextureMacroLines
  getVendor()Ljava/lang/String; = Vendor
  getConstantMacros()[Lnet/optifine/shaders/config/ShaderMacro; = GetConstantMacros()
  getExtensions()[Lnet/optifine/shaders/config/ShaderMacro; = GetExtensions()
  getHeaderMacroLines()[Ljava/lang/String; = GetHeaderMacroLines()
net/optifine/shaders/config/ShaderMacros = Net.Optifine.Shaders.Config.ShaderMacros
  <init>()V = .ctor()
  MC_ANISOTROPIC_FILTERING = McAnisotropicFiltering
  MC_FXAA_LEVEL = McFxaaLevel
  MC_GL_RENDERER_GALLIUM = McGlRendererGallium
  MC_GL_RENDERER_GEFORCE = McGlRendererGeforce
  MC_GL_RENDERER_INTEL = McGlRendererIntel
  MC_GL_RENDERER_MESA = McGlRendererMesa
  MC_GL_RENDERER_OTHER = McGlRendererOther
  MC_GL_RENDERER_QUADRO = McGlRendererQuadro
  MC_GL_RENDERER_RADEON = McGlRendererRadeon
  MC_GLSL_VERSION = McGlslVersion
  MC_GL_VENDOR_AMD = McGlVendorAmd
  MC_GL_VENDOR_ATI = McGlVendorAti
  MC_GL_VENDOR_INTEL = McGlVendorIntel
  MC_GL_VENDOR_MESA = McGlVendorMesa
  MC_GL_VENDOR_NVIDIA = McGlVendorNvidia
  MC_GL_VENDOR_OTHER = McGlVendorOther
  MC_GL_VENDOR_XORG = McGlVendorXorg
  MC_GL_VERSION = McGlVersion
  MC_HAND_DEPTH = McHandDepth
  MC_NORMAL_MAP = McNormalMap
  MC_OLD_HAND_LIGHT = McOldHandLight
  MC_OLD_LIGHTING = McOldLighting
  MC_OS_LINUX = McOsLinux
  MC_OS_MAC = McOsMac
  MC_OS_OTHER = McOsOther
  MC_OS_WINDOWS = McOsWindows
  MC_RENDER_QUALITY = McRenderQuality
  MC_SHADOW_QUALITY = McShadowQuality
  MC_SPECULAR_MAP = McSpecularMap
  MC_TEXTURE_FORMAT_ = McTextureFormat
  MC_VERSION = McVersion
  getFixedMacroLines()Ljava/lang/String; = FixedMacroLines
  getOptionMacroLines()Ljava/lang/String; = OptionMacroLines
  getOs()Ljava/lang/String; = Os
  getPrefixMacro()Ljava/lang/String; = PrefixMacro
  getRenderer()Ljava/lang/String; = Renderer
  getTextureMacroLines()Ljava/lang/String; = TextureMacroLines
  getVendor()Ljava/lang/String; = Vendor
  getConstantMacros()[Lnet/optifine/shaders/config/ShaderMacro; = GetConstantMacros()
  getExtensions()[Lnet/optifine/shaders/config/ShaderMacro; = GetExtensions()
  getHeaderMacroLines()[Ljava/lang/String; = GetHeaderMacroLines()
net/optifine/shaders/config/ShaderOption = Net.Optifine.Shaders.Config.ShaderOption
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string[], string, string)
  COLOR_BLUE = ColorBlue
  COLOR_GREEN = ColorGreen
  COLOR_RED = ColorRed
  getDescription()Ljava/lang/String; = Description
  setDescription(Ljava/lang/String;)V = Description
  getDescriptionText()Ljava/lang/String; = DescriptionText
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getIndexNormalized()F = IndexNormalized
  setIndexNormalized(F)V = IndexNormalized
  isChanged()Z = IsChanged
  getName()Ljava/lang/String; = Name
  getNameText()Ljava/lang/String; = NameText
  getSourceLine()Ljava/lang/String; = SourceLine
  getValue()Ljava/lang/String; = Value
  getValueDefault()Ljava/lang/String; = ValueDefault
  isVisible()Z = Visible
  setVisible(Z)V = Visible
  addPaths([Ljava/lang/String;)V = AddPaths(string[])
  checkUsed()Z = CheckUsed()
  getPaths()[Ljava/lang/String; = GetPaths()
  getValueColor(Ljava/lang/String;)Ljava/lang/String; = GetValueColor(string)
  getValues()[Ljava/lang/String; = GetValues()
  getValueText(Ljava/lang/String;)Ljava/lang/String; = GetValueText(string)
  isUsedInLine(Ljava/lang/String;)Z = IsUsedInLine(string)
  isValidValue(Ljava/lang/String;)Z = IsValidValue(string)
  matchesLine(Ljava/lang/String;)Z = MatchesLine(string)
  nextValue()V = NextValue()
  prevValue()V = PrevValue()
  resetValue()V = ResetValue()
  setValue(Ljava/lang/String;)Z = SetValue(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/config/ShaderOption = Net.Optifine.Shaders.Config.ShaderOption
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string[], string, string)
  COLOR_BLUE = ColorBlue
  COLOR_GREEN = ColorGreen
  COLOR_RED = ColorRed
  getDescription()Ljava/lang/String; = Description
  setDescription(Ljava/lang/String;)V = Description
  getDescriptionText()Ljava/lang/String; = DescriptionText
  isEnabled()Z = Enabled
  setEnabled(Z)V = Enabled
  getIndexNormalized()F = IndexNormalized
  setIndexNormalized(F)V = IndexNormalized
  isChanged()Z = IsChanged
  getName()Ljava/lang/String; = Name
  getNameText()Ljava/lang/String; = NameText
  getSourceLine()Ljava/lang/String; = SourceLine
  getValue()Ljava/lang/String; = Value
  getValueDefault()Ljava/lang/String; = ValueDefault
  isVisible()Z = Visible
  setVisible(Z)V = Visible
  addPaths([Ljava/lang/String;)V = AddPaths(string[])
  checkUsed()Z = CheckUsed()
  getPaths()[Ljava/lang/String; = GetPaths()
  getValueColor(Ljava/lang/String;)Ljava/lang/String; = GetValueColor(string)
  getValues()[Ljava/lang/String; = GetValues()
  getValueText(Ljava/lang/String;)Ljava/lang/String; = GetValueText(string)
  isUsedInLine(Ljava/lang/String;)Z = IsUsedInLine(string)
  isValidValue(Ljava/lang/String;)Z = IsValidValue(string)
  matchesLine(Ljava/lang/String;)Z = MatchesLine(string)
  nextValue()V = NextValue()
  prevValue()V = PrevValue()
  resetValue()V = ResetValue()
  setValue(Ljava/lang/String;)Z = SetValue(string)
net/optifine/shaders/config/ShaderOptionProfile = Net.Optifine.Shaders.Config.ShaderOptionProfile
  <init>([Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;)V = .ctor(Net.Optifine.Shaders.Config.ShaderProfile[], Net.Optifine.Shaders.Config.ShaderOption[])
  getDescriptionText()Ljava/lang/String; = DescriptionText
  getNameText()Ljava/lang/String; = NameText
  getValueColor(Ljava/lang/String;)Ljava/lang/String; = GetValueColor(string)
  getValueText(Ljava/lang/String;)Ljava/lang/String; = GetValueText(string)
  nextValue()V = NextValue()
  updateProfile()V = UpdateProfile()
net/optifine/shaders/config/ShaderOptionProfile = Net.Optifine.Shaders.Config.ShaderOptionProfile
  <init>([Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;)V = .ctor(Net.Optifine.Shaders.Config.ShaderProfile[], Net.Optifine.Shaders.Config.ShaderOption[])
  updateProfile()V = UpdateProfile()
net/optifine/shaders/config/ShaderOptionResolver = Net.Optifine.Shaders.Config.ShaderOptionResolver
  <init>([Lnet/optifine/shaders/config/ShaderOption;)V = .ctor(Net.Optifine.Shaders.Config.ShaderOption[])
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
net/optifine/shaders/config/ShaderOptionResolver = Net.Optifine.Shaders.Config.ShaderOptionResolver
  <init>([Lnet/optifine/shaders/config/ShaderOption;)V = .ctor(Net.Optifine.Shaders.Config.ShaderOption[])
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
net/optifine/shaders/config/ShaderOptionRest = Net.Optifine.Shaders.Config.ShaderOptionRest
  <init>(Ljava/lang/String;)V = .ctor(string)
net/optifine/shaders/config/ShaderOptionRest = Net.Optifine.Shaders.Config.ShaderOptionRest
  <init>(Ljava/lang/String;)V = .ctor(string)
net/optifine/shaders/config/ShaderOptionScreen = Net.Optifine.Shaders.Config.ShaderOptionScreen
  <init>(Ljava/lang/String;)V = .ctor(string)
  getDescriptionText()Ljava/lang/String; = DescriptionText
  getNameText()Ljava/lang/String; = NameText
net/optifine/shaders/config/ShaderOptionScreen = Net.Optifine.Shaders.Config.ShaderOptionScreen
  <init>(Ljava/lang/String;)V = .ctor(string)
net/optifine/shaders/config/ShaderOptionSwitch = Net.Optifine.Shaders.Config.ShaderOptionSwitch
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string)
  getSourceLine()Ljava/lang/String; = SourceLine
  checkUsed()Z = CheckUsed()
  getValueColor(Ljava/lang/String;)Ljava/lang/String; = GetValueColor(string)
  getValueText(Ljava/lang/String;)Ljava/lang/String; = GetValueText(string)
  isTrue(Ljava/lang/String;)Z = IsTrue(string)
  isUsedInLine(Ljava/lang/String;)Z = IsUsedInLine(string)
  matchesLine(Ljava/lang/String;)Z = MatchesLine(string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
net/optifine/shaders/config/ShaderOptionSwitch = Net.Optifine.Shaders.Config.ShaderOptionSwitch
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string)
  isTrue(Ljava/lang/String;)Z = IsTrue(string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
net/optifine/shaders/config/ShaderOptionSwitchConst = Net.Optifine.Shaders.Config.ShaderOptionSwitchConst
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string)
  getSourceLine()Ljava/lang/String; = SourceLine
  checkUsed()Z = CheckUsed()
  matchesLine(Ljava/lang/String;)Z = MatchesLine(string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
net/optifine/shaders/config/ShaderOptionSwitchConst = Net.Optifine.Shaders.Config.ShaderOptionSwitchConst
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
net/optifine/shaders/config/ShaderOptionVariable = Net.Optifine.Shaders.Config.ShaderOptionVariable
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string[], string)
  getSourceLine()Ljava/lang/String; = SourceLine
  getValueColor(Ljava/lang/String;)Ljava/lang/String; = GetValueColor(string)
  getValueText(Ljava/lang/String;)Ljava/lang/String; = GetValueText(string)
  matchesLine(Ljava/lang/String;)Z = MatchesLine(string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
  parseValues(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = ParseValues(string, string)
net/optifine/shaders/config/ShaderOptionVariable = Net.Optifine.Shaders.Config.ShaderOptionVariable
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string[], string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
  parseValues(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = ParseValues(string, string)
net/optifine/shaders/config/ShaderOptionVariableConst = Net.Optifine.Shaders.Config.ShaderOptionVariableConst
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string, string[], string)
  getSourceLine()Ljava/lang/String; = SourceLine
  matchesLine(Ljava/lang/String;)Z = MatchesLine(string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
net/optifine/shaders/config/ShaderOptionVariableConst = Net.Optifine.Shaders.Config.ShaderOptionVariableConst
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string, string[], string)
  parseOption(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = ParseOption(string, string)
net/optifine/shaders/config/ShaderPackParser = Net.Optifine.Shaders.Config.ShaderPackParser
  <init>()V = .ctor()
  PATTERN_INCLUDE = PatternInclude
  PATTERN_VERSION = PatternVersion
  addMacros(Lnet/optifine/util/LineBuffer;I)Lnet/optifine/util/LineBuffer; = AddMacros(Net.Optifine.Util.LineBuffer, int)
  loadShader(Lnet/optifine/shaders/Program;Lnet/optifine/shaders/config/ShaderType;Ljava/io/InputStream;Ljava/lang/String;Lnet/optifine/shaders/IShaderPack;Ljava/util/List;[Lnet/optifine/shaders/config/ShaderOption;)Lnet/optifine/util/LineBuffer; = LoadShader(Net.Optifine.Shaders.Program, Net.Optifine.Shaders.Config.ShaderType, System.IO.Stream, string, Net.Optifine.Shaders.IShaderPack, System.Collections.Generic.IList<string>, Net.Optifine.Shaders.Config.ShaderOption[])
  parseAlphaState(Ljava/lang/String;)Lnet/optifine/render/GlAlphaState; = ParseAlphaState(string)
  parseAlphaStates(Ljava/util/Properties;)V = ParseAlphaStates(Java.Util.Properties)
  parseBlendState(Ljava/lang/String;)Lnet/optifine/render/GlBlendState; = ParseBlendState(string)
  parseBlendStates(Ljava/util/Properties;)V = ParseBlendStates(Java.Util.Properties)
  parseBuffersFlip(Ljava/util/Properties;)V = ParseBuffersFlip(Java.Util.Properties)
  parseBufferSizes(Ljava/util/Properties;I)[Lnet/optifine/util/DynamicDimension; = ParseBufferSizes(Java.Util.Properties, int)
  parseCustomUniforms(Ljava/util/Properties;)Lnet/optifine/shaders/uniform/CustomUniforms; = ParseCustomUniforms(Java.Util.Properties)
  parseGuiScreens(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;)Ljava/util/Map; = ParseGuiScreens(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderProfile[], Net.Optifine.Shaders.Config.ShaderOption[])
  parseOptionSliders(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderOption;)Ljava/util/Set; = ParseOptionSliders(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderOption[])
  parseProfiles(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderOption;)[Lnet/optifine/shaders/config/ShaderProfile; = ParseProfiles(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderOption[])
  parseProgramConditions(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderOption;)Ljava/util/Map; = ParseProgramConditions(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderOption[])
  parseRenderScales(Ljava/util/Properties;)V = ParseRenderScales(Java.Util.Properties)
  parseShaderPackOptions(Lnet/optifine/shaders/IShaderPack;[Ljava/lang/String;Ljava/util/List;)[Lnet/optifine/shaders/config/ShaderOption; = ParseShaderPackOptions(Net.Optifine.Shaders.IShaderPack, string[], System.Collections.Generic.IList<Java.Lang.Integer>)
  remapTextureUnits(Lnet/optifine/util/LineBuffer;)Lnet/optifine/util/LineBuffer; = RemapTextureUnits(Net.Optifine.Util.LineBuffer)
  resolveIncludes(Lnet/optifine/util/LineBuffer;Ljava/lang/String;Lnet/optifine/shaders/IShaderPack;ILjava/util/List;I)Lnet/optifine/util/LineBuffer; = ResolveIncludes(Net.Optifine.Util.LineBuffer, string, Net.Optifine.Shaders.IShaderPack, int, System.Collections.Generic.IList<string>, int)
net/optifine/shaders/config/ShaderPackParser = Net.Optifine.Shaders.Config.ShaderPackParser
  <init>()V = .ctor()
  PATTERN_INCLUDE = PatternInclude
  PATTERN_VERSION = PatternVersion
  addMacros(Lnet/optifine/util/LineBuffer;I)Lnet/optifine/util/LineBuffer; = AddMacros(Net.Optifine.Util.LineBuffer, int)
  loadShader(Lnet/optifine/shaders/Program;Lnet/optifine/shaders/config/ShaderType;Ljava/io/InputStream;Ljava/lang/String;Lnet/optifine/shaders/IShaderPack;Ljava/util/List;[Lnet/optifine/shaders/config/ShaderOption;)Lnet/optifine/util/LineBuffer; = LoadShader(Net.Optifine.Shaders.Program, Net.Optifine.Shaders.Config.ShaderType, System.IO.Stream, string, Net.Optifine.Shaders.IShaderPack, System.Collections.Generic.IList<string>, Net.Optifine.Shaders.Config.ShaderOption[])
  parseAlphaState(Ljava/lang/String;)Lnet/optifine/render/GlAlphaState; = ParseAlphaState(string)
  parseAlphaStates(Ljava/util/Properties;)V = ParseAlphaStates(Java.Util.Properties)
  parseBlendState(Ljava/lang/String;)Lnet/optifine/render/GlBlendState; = ParseBlendState(string)
  parseBlendStates(Ljava/util/Properties;)V = ParseBlendStates(Java.Util.Properties)
  parseBuffersFlip(Ljava/util/Properties;)V = ParseBuffersFlip(Java.Util.Properties)
  parseBufferSizes(Ljava/util/Properties;I)[Lnet/optifine/util/DynamicDimension; = ParseBufferSizes(Java.Util.Properties, int)
  parseCustomUniforms(Ljava/util/Properties;)Lnet/optifine/shaders/uniform/CustomUniforms; = ParseCustomUniforms(Java.Util.Properties)
  parseGuiScreens(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;)Ljava/util/Map; = ParseGuiScreens(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderProfile[], Net.Optifine.Shaders.Config.ShaderOption[])
  parseOptionSliders(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderOption;)Ljava/util/Set; = ParseOptionSliders(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderOption[])
  parseProfiles(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderOption;)[Lnet/optifine/shaders/config/ShaderProfile; = ParseProfiles(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderOption[])
  parseProgramConditions(Ljava/util/Properties;[Lnet/optifine/shaders/config/ShaderOption;)Ljava/util/Map; = ParseProgramConditions(Java.Util.Properties, Net.Optifine.Shaders.Config.ShaderOption[])
  parseRenderScales(Ljava/util/Properties;)V = ParseRenderScales(Java.Util.Properties)
  parseShaderPackOptions(Lnet/optifine/shaders/IShaderPack;[Ljava/lang/String;Ljava/util/List;)[Lnet/optifine/shaders/config/ShaderOption; = ParseShaderPackOptions(Net.Optifine.Shaders.IShaderPack, string[], System.Collections.Generic.IList<Java.Lang.Integer>)
  remapTextureUnits(Lnet/optifine/util/LineBuffer;)Lnet/optifine/util/LineBuffer; = RemapTextureUnits(Net.Optifine.Util.LineBuffer)
  resolveIncludes(Lnet/optifine/util/LineBuffer;Ljava/lang/String;Lnet/optifine/shaders/IShaderPack;ILjava/util/List;I)Lnet/optifine/util/LineBuffer; = ResolveIncludes(Net.Optifine.Util.LineBuffer, string, Net.Optifine.Shaders.IShaderPack, int, System.Collections.Generic.IList<string>, int)
net/optifine/shaders/config/ShaderParser = Net.Optifine.Shaders.Config.ShaderParser
  <init>()V = .ctor()
  PATTERN_ATTRIBUTE = PatternAttribute
  PATTERN_CONST_BOOL = PatternConstBool
  PATTERN_CONST_FLOAT = PatternConstFloat
  PATTERN_CONST_INT = PatternConstInt
  PATTERN_CONST_IVEC3 = PatternConstIvec3
  PATTERN_CONST_VEC2 = PatternConstVec2
  PATTERN_CONST_VEC4 = PatternConstVec4
  PATTERN_DRAW_BUFFERS = PatternDrawBuffers
  PATTERN_EXTENSION = PatternExtension
  PATTERN_IN = PatternIn
  PATTERN_LAYOUT = PatternLayout
  PATTERN_PROPERTY = PatternProperty
  PATTERN_RENDER_TARGETS = PatternRenderTargets
  PATTERN_UNIFORM = PatternUniform
  getColorImageIndex(Ljava/lang/String;)I = GetColorImageIndex(string)
  getColorIndex(Ljava/lang/String;)I = GetColorIndex(string)
  getDepthIndex(Ljava/lang/String;)I = GetDepthIndex(string)
  getIndex(Ljava/lang/String;Ljava/lang/String;II)I = GetIndex(string, string, int, int)
  getShadowColorImageIndex(Ljava/lang/String;)I = GetShadowColorImageIndex(string)
  getShadowColorIndex(Ljava/lang/String;)I = GetShadowColorIndex(string)
  getShadowDepthIndex(Ljava/lang/String;)I = GetShadowDepthIndex(string)
  parseDrawBuffers(Ljava/lang/String;)[Ljava/lang/String; = ParseDrawBuffers(string)
  parseLine(Ljava/lang/String;Lnet/optifine/shaders/config/ShaderType;)Lnet/optifine/shaders/config/ShaderLine; = ParseLine(string, Net.Optifine.Shaders.Config.ShaderType)
  parseRenderTargets(Ljava/lang/String;)[Ljava/lang/String; = ParseRenderTargets(string)
net/optifine/shaders/config/ShaderParser = Net.Optifine.Shaders.Config.ShaderParser
  <init>()V = .ctor()
  PATTERN_ATTRIBUTE = PatternAttribute
  PATTERN_CONST_BOOL = PatternConstBool
  PATTERN_CONST_FLOAT = PatternConstFloat
  PATTERN_CONST_INT = PatternConstInt
  PATTERN_CONST_IVEC3 = PatternConstIvec3
  PATTERN_CONST_VEC2 = PatternConstVec2
  PATTERN_CONST_VEC4 = PatternConstVec4
  PATTERN_DRAW_BUFFERS = PatternDrawBuffers
  PATTERN_EXTENSION = PatternExtension
  PATTERN_IN = PatternIn
  PATTERN_LAYOUT = PatternLayout
  PATTERN_PROPERTY = PatternProperty
  PATTERN_RENDER_TARGETS = PatternRenderTargets
  PATTERN_UNIFORM = PatternUniform
  getColorImageIndex(Ljava/lang/String;)I = GetColorImageIndex(string)
  getColorIndex(Ljava/lang/String;)I = GetColorIndex(string)
  getDepthIndex(Ljava/lang/String;)I = GetDepthIndex(string)
  getIndex(Ljava/lang/String;Ljava/lang/String;II)I = GetIndex(string, string, int, int)
  getShadowColorImageIndex(Ljava/lang/String;)I = GetShadowColorImageIndex(string)
  getShadowColorIndex(Ljava/lang/String;)I = GetShadowColorIndex(string)
  getShadowDepthIndex(Ljava/lang/String;)I = GetShadowDepthIndex(string)
  parseDrawBuffers(Ljava/lang/String;)[Ljava/lang/String; = ParseDrawBuffers(string)
  parseLine(Ljava/lang/String;Lnet/optifine/shaders/config/ShaderType;)Lnet/optifine/shaders/config/ShaderLine; = ParseLine(string, Net.Optifine.Shaders.Config.ShaderType)
  parseRenderTargets(Ljava/lang/String;)[Ljava/lang/String; = ParseRenderTargets(string)
net/optifine/shaders/config/ShaderProfile = Net.Optifine.Shaders.Config.ShaderProfile
  <init>(Ljava/lang/String;)V = .ctor(string)
  getDisabledPrograms()Ljava/util/Collection; = DisabledPrograms
  getName()Ljava/lang/String; = Name
  addDisabledProgram(Ljava/lang/String;)V = AddDisabledProgram(string)
  addDisabledPrograms(Ljava/util/Collection;)V = AddDisabledPrograms(System.Collections.Generic.ICollection<string>)
  addOptionValue(Ljava/lang/String;Ljava/lang/String;)V = AddOptionValue(string, string)
  addOptionValues(Lnet/optifine/shaders/config/ShaderProfile;)V = AddOptionValues(Net.Optifine.Shaders.Config.ShaderProfile)
  applyOptionValues([Lnet/optifine/shaders/config/ShaderOption;)V = ApplyOptionValues(Net.Optifine.Shaders.Config.ShaderOption[])
  getOptions()[Ljava/lang/String; = GetOptions()
  getValue(Ljava/lang/String;)Ljava/lang/String; = GetValue(string)
  isProgramDisabled(Ljava/lang/String;)Z = IsProgramDisabled(string)
  removeDisabledProgram(Ljava/lang/String;)V = RemoveDisabledProgram(string)
net/optifine/shaders/config/ShaderProfile = Net.Optifine.Shaders.Config.ShaderProfile
  <init>(Ljava/lang/String;)V = .ctor(string)
  getDisabledPrograms()Ljava/util/Collection; = DisabledPrograms
  getName()Ljava/lang/String; = Name
  addDisabledProgram(Ljava/lang/String;)V = AddDisabledProgram(string)
  addDisabledPrograms(Ljava/util/Collection;)V = AddDisabledPrograms(System.Collections.Generic.ICollection<string>)
  addOptionValue(Ljava/lang/String;Ljava/lang/String;)V = AddOptionValue(string, string)
  addOptionValues(Lnet/optifine/shaders/config/ShaderProfile;)V = AddOptionValues(Net.Optifine.Shaders.Config.ShaderProfile)
  applyOptionValues([Lnet/optifine/shaders/config/ShaderOption;)V = ApplyOptionValues(Net.Optifine.Shaders.Config.ShaderOption[])
  getOptions()[Ljava/lang/String; = GetOptions()
  getValue(Ljava/lang/String;)Ljava/lang/String; = GetValue(string)
  isProgramDisabled(Ljava/lang/String;)Z = IsProgramDisabled(string)
  removeDisabledProgram(Ljava/lang/String;)V = RemoveDisabledProgram(string)
net/optifine/shaders/config/ShaderType = Net.Optifine.Shaders.Config.ShaderType
  COMPUTE = Compute
  FRAGMENT = Fragment
  GEOMETRY = Geometry
  VERTEX = Vertex
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderType; = ValueOf(string)
  values()[Lnet/optifine/shaders/config/ShaderType; = Values()
net/optifine/shaders/config/ShaderType = Net.Optifine.Shaders.Config.ShaderType
  COMPUTE = Compute
  FRAGMENT = Fragment
  GEOMETRY = Geometry
  VERTEX = Vertex
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderType; = ValueOf(string)
  values()[Lnet/optifine/shaders/config/ShaderType; = Values()
net/optifine/shaders/CustomTexture = Net.Optifine.Shaders.CustomTexture
  getPath()Ljava/lang/String; = Path
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/CustomTexture = Net.Optifine.Shaders.CustomTexture
  getPath()Ljava/lang/String; = Path
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
net/optifine/shaders/CustomTextureLocation = Net.Optifine.Shaders.CustomTextureLocation
  VARIANT_BASE = VariantBase
  VARIANT_NORMAL = VariantNormal
  VARIANT_SPECULAR = VariantSpecular
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
  reloadTexture()V = ReloadTexture()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/CustomTextureLocation = Net.Optifine.Shaders.CustomTextureLocation
  VARIANT_BASE = VariantBase
  VARIANT_NORMAL = VariantNormal
  VARIANT_SPECULAR = VariantSpecular
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
  reloadTexture()V = ReloadTexture()
net/optifine/shaders/CustomTextureRaw = Net.Optifine.Shaders.CustomTextureRaw
  <init>(Lnet/optifine/texture/TextureType;Lnet/optifine/texture/InternalFormat;IIILnet/optifine/texture/PixelFormat;Lnet/optifine/texture/PixelType;Ljava/nio/ByteBuffer;IZZ)V = .ctor(Net.Optifine.Texture.TextureType, Net.Optifine.Texture.InternalFormat, int, int, int, Net.Optifine.Texture.PixelFormat, Net.Optifine.Texture.PixelType, Java.Nio.ByteBuffer, int, bool, bool)
  getTarget()I = Target
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
net/optifine/shaders/CustomTextureRaw = Net.Optifine.Shaders.CustomTextureRaw
  <init>(Lnet/optifine/texture/TextureType;Lnet/optifine/texture/InternalFormat;IIILnet/optifine/texture/PixelFormat;Lnet/optifine/texture/PixelType;Ljava/nio/ByteBuffer;IZZ)V = .ctor(Net.Optifine.Texture.TextureType, Net.Optifine.Texture.InternalFormat, int, int, int, Net.Optifine.Texture.PixelFormat, Net.Optifine.Texture.PixelType, Java.Nio.ByteBuffer, int, bool, bool)
  getTarget()I = Target
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
net/optifine/shaders/DefaultShaders = Net.Optifine.Shaders.DefaultShaders
  <init>()V = .ctor()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
net/optifine/shaders/DefaultShaders = Net.Optifine.Shaders.DefaultShaders
  <init>()V = .ctor()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
net/optifine/shaders/DrawBuffers = Net.Optifine.Shaders.DrawBuffers
  <init>(Ljava/lang/String;II)V = .ctor(string, int, int)
  getGlDrawBuffers()Ljava/nio/IntBuffer; = GlDrawBuffers
  capacity()I = Capacity()
  fill(I)Lnet/optifine/shaders/DrawBuffers; = Fill(int)
  get(I)I = Get(int)
  getAttachmentMappings()[I = GetAttachmentMappings()
  getInfo(Z)Ljava/lang/String; = GetInfo(bool)
  indexOf(I)I = IndexOf(int)
  limit()I = Limit()
  limit(I)Lnet/optifine/shaders/DrawBuffers; = Limit(int)
  position()I = Position()
  position(I)Lnet/optifine/shaders/DrawBuffers; = Position(int)
  put(I)Lnet/optifine/shaders/DrawBuffers; = Put(int)
  put(II)Lnet/optifine/shaders/DrawBuffers; = Put(int, int)
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/DrawBuffers = Net.Optifine.Shaders.DrawBuffers
  <init>(Ljava/lang/String;II)V = .ctor(string, int, int)
  getGlDrawBuffers()Ljava/nio/IntBuffer; = GlDrawBuffers
  capacity()I = Capacity()
  fill(I)Lnet/optifine/shaders/DrawBuffers; = Fill(int)
  get(I)I = Get(int)
  getAttachmentMappings()[I = GetAttachmentMappings()
  getInfo(Z)Ljava/lang/String; = GetInfo(bool)
  indexOf(I)I = IndexOf(int)
  limit()I = Limit()
  limit(I)Lnet/optifine/shaders/DrawBuffers; = Limit(int)
  position()I = Position()
  position(I)Lnet/optifine/shaders/DrawBuffers; = Position(int)
  put(I)Lnet/optifine/shaders/DrawBuffers; = Put(int)
  put(II)Lnet/optifine/shaders/DrawBuffers; = Put(int, int)
net/optifine/shaders/EntityAliases = Net.Optifine.Shaders.EntityAliases
  <init>()V = .ctor()
  getEntityAliasId(I)I = GetEntityAliasId(int)
  reset()V = Reset()
  resourcesReloaded()V = ResourcesReloaded()
  update(Lnet/optifine/shaders/IShaderPack;)V = Update(Net.Optifine.Shaders.IShaderPack)
net/optifine/shaders/EntityAliases = Net.Optifine.Shaders.EntityAliases
  <init>()V = .ctor()
  getEntityAliasId(I)I = GetEntityAliasId(int)
  reset()V = Reset()
  resourcesReloaded()V = ResourcesReloaded()
  update(Lnet/optifine/shaders/IShaderPack;)V = Update(Net.Optifine.Shaders.IShaderPack)
net/optifine/shaders/FixedFramebuffer = Net.Optifine.Shaders.FixedFramebuffer
  <init>(Ljava/lang/String;II[I[IZZ)V = .ctor(string, int, int, int[], int[], bool, bool)
  bindFramebuffer()V = BindFramebuffer()
  delete()V = Delete()
  exists()Z = Exists()
  setup()V = Setup()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/FixedFramebuffer = Net.Optifine.Shaders.FixedFramebuffer
  <init>(Ljava/lang/String;II[I[IZZ)V = .ctor(string, int, int, int[], int[], bool, bool)
  bindFramebuffer()V = BindFramebuffer()
  delete()V = Delete()
  exists()Z = Exists()
  setup()V = Setup()
net/optifine/shaders/FlipTextures = Net.Optifine.Shaders.FlipTextures
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  capacity()I = Capacity()
  clear()Lnet/optifine/shaders/FlipTextures; = Clear()
  deleteTextures()V = DeleteTextures()
  fill(I)V = Fill(int)
  flip(I)V = Flip(int)
  genTextures()V = GenTextures()
  get(ZI)I = Get(bool, int)
  getA(I)I = GetA(int)
  getB(I)I = GetB(int)
  isChanged(I)Z = IsChanged(int)
  limit()I = Limit()
  limit(I)Lnet/optifine/shaders/FlipTextures; = Limit(int)
  position()I = Position()
  position(I)Lnet/optifine/shaders/FlipTextures; = Position(int)
  reset()V = Reset()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/FlipTextures = Net.Optifine.Shaders.FlipTextures
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  capacity()I = Capacity()
  clear()Lnet/optifine/shaders/FlipTextures; = Clear()
  deleteTextures()V = DeleteTextures()
  fill(I)V = Fill(int)
  flip(I)V = Flip(int)
  genTextures()V = GenTextures()
  get(ZI)I = Get(bool, int)
  getA(I)I = GetA(int)
  getB(I)I = GetB(int)
  isChanged(I)Z = IsChanged(int)
  limit()I = Limit()
  limit(I)Lnet/optifine/shaders/FlipTextures; = Limit(int)
  position()I = Position()
  position(I)Lnet/optifine/shaders/FlipTextures; = Position(int)
  reset()V = Reset()
net/optifine/shaders/GlState = Net.Optifine.Shaders.GlState
  <init>()V = .ctor()
  getDrawBuffers()Lnet/optifine/shaders/DrawBuffers; = DrawBuffers
  setDrawBuffers(Lnet/optifine/shaders/DrawBuffers;)V = DrawBuffers
  getFramebuffer()Lnet/optifine/shaders/ShadersFramebuffer; = Framebuffer
  bindFramebuffer(Lnet/optifine/shaders/ShadersFramebuffer;)V = BindFramebuffer(Net.Optifine.Shaders.ShadersFramebuffer)
  setFramebufferTexture2D(IIIII)V = SetFramebufferTexture2D(int, int, int, int, int)
net/optifine/shaders/GlState = Net.Optifine.Shaders.GlState
  <init>()V = .ctor()
  getDrawBuffers()Lnet/optifine/shaders/DrawBuffers; = DrawBuffers
  setDrawBuffers(Lnet/optifine/shaders/DrawBuffers;)V = DrawBuffers
  getFramebuffer()Lnet/optifine/shaders/ShadersFramebuffer; = Framebuffer
  bindFramebuffer(Lnet/optifine/shaders/ShadersFramebuffer;)V = BindFramebuffer(Net.Optifine.Shaders.ShadersFramebuffer)
  setFramebufferTexture2D(IIIII)V = SetFramebufferTexture2D(int, int, int, int, int)
net/optifine/shaders/HFNoiseTexture = Net.Optifine.Shaders.HFNoiseTexture
  <init>(II)V = .ctor(int, int)
  getID()I = ID
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
net/optifine/shaders/HFNoiseTexture = Net.Optifine.Shaders.HFNoiseTexture
  <init>(II)V = .ctor(int, int)
  getID()I = ID
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
net/optifine/shaders/ICustomTexture = Net.Optifine.Shaders.ICustomTexture
  getTarget()I = Target
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
net/optifine/shaders/ICustomTexture = Net.Optifine.Shaders.ICustomTexture
  getTarget()I = Target
  getTextureId()I = TextureId
  getTextureUnit()I = TextureUnit
  deleteTexture()V = DeleteTexture()
net/optifine/shaders/IShaderPack = Net.Optifine.Shaders.IShaderPack
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/IShaderPack = Net.Optifine.Shaders.IShaderPack
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ItemAliases = Net.Optifine.Shaders.ItemAliases
  <init>()V = .ctor()
  getItemAliasId(I)I = GetItemAliasId(int)
  reset()V = Reset()
  resourcesReloaded()V = ResourcesReloaded()
  update(Lnet/optifine/shaders/IShaderPack;)V = Update(Net.Optifine.Shaders.IShaderPack)
net/optifine/shaders/ItemAliases = Net.Optifine.Shaders.ItemAliases
  <init>()V = .ctor()
  getItemAliasId(I)I = GetItemAliasId(int)
  reset()V = Reset()
  resourcesReloaded()V = ResourcesReloaded()
  update(Lnet/optifine/shaders/IShaderPack;)V = Update(Net.Optifine.Shaders.IShaderPack)
net/optifine/shaders/Iterator3d = Net.Optifine.Shaders.Iterator3d
  hasNext()Z = HasNext
  main([Ljava/lang/String;)V = Main(string[])
  remove()V = Remove()
net/optifine/shaders/IteratorAxis = Net.Optifine.Shaders.IteratorAxis
  hasNext()Z = HasNext
  main([Ljava/lang/String;)V = Main(string[])
  remove()V = Remove()
net/optifine/shaders/IteratorRenderChunks = Net.Optifine.Shaders.IteratorRenderChunks
  hasNext()Z = HasNext
  remove()V = Remove()
net/optifine/shaders/ITextureFormat = Net.Optifine.Shaders.ITextureFormat
  getMacroName()Ljava/lang/String; = MacroName
  getMacroVersion()Ljava/lang/String; = MacroVersion
  getColorBlender(Lnet/optifine/shaders/ShadersTextureType;)Lnet/optifine/texture/IColorBlender; = GetColorBlender(Net.Optifine.Shaders.ShadersTextureType)
  isTextureBlend(Lnet/optifine/shaders/ShadersTextureType;)Z = IsTextureBlend(Net.Optifine.Shaders.ShadersTextureType)
  readConfiguration()Lnet/optifine/shaders/ITextureFormat; = ReadConfiguration()
net/optifine/shaders/ITextureFormat = Net.Optifine.Shaders.ITextureFormat
  getMacroName()Ljava/lang/String; = MacroName
  getMacroVersion()Ljava/lang/String; = MacroVersion
  getColorBlender(Lnet/optifine/shaders/ShadersTextureType;)Lnet/optifine/texture/IColorBlender; = GetColorBlender(Net.Optifine.Shaders.ShadersTextureType)
  isTextureBlend(Lnet/optifine/shaders/ShadersTextureType;)Z = IsTextureBlend(Net.Optifine.Shaders.ShadersTextureType)
  readConfiguration()Lnet/optifine/shaders/ITextureFormat; = ReadConfiguration()
net/optifine/shaders/MultiTexID = Net.Optifine.Shaders.MultiTexID
  <init>(III)V = .ctor(int, int, int)
  base = Base
  norm = Norm
  spec = Spec
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/MultiTexID = Net.Optifine.Shaders.MultiTexID
  <init>(III)V = .ctor(int, int, int)
  base = Base
  norm = Norm
  spec = Spec
net/optifine/shaders/Program = Net.Optifine.Shaders.Program
  <init>(ILjava/lang/String;Lnet/optifine/shaders/ProgramStage;Lnet/optifine/shaders/Program;)V = .ctor(int, string, Net.Optifine.Shaders.ProgramStage, Net.Optifine.Shaders.Program)
  <init>(ILjava/lang/String;Lnet/optifine/shaders/ProgramStage;Z)V = .ctor(int, string, Net.Optifine.Shaders.ProgramStage, bool)
  getAlphaState()Lnet/optifine/render/GlAlphaState; = AlphaState
  setAlphaState(Lnet/optifine/render/GlAlphaState;)V = AlphaState
  getBlendState()Lnet/optifine/render/GlBlendState; = BlendState
  setBlendState(Lnet/optifine/render/GlBlendState;)V = BlendState
  getCompositeMipmapSetting()I = CompositeMipmapSetting
  setCompositeMipmapSetting(I)V = CompositeMipmapSetting
  getCountInstances()I = CountInstances
  setCountInstances(I)V = CountInstances
  getDrawBuffers()Lnet/optifine/shaders/DrawBuffers; = DrawBuffers
  setDrawBuffers(Lnet/optifine/shaders/DrawBuffers;)V = DrawBuffers
  getDrawBuffersCustom()Lnet/optifine/shaders/DrawBuffers; = DrawBuffersCustom
  getDrawSize()Lnet/optifine/util/DynamicDimension; = DrawSize
  setDrawSize(Lnet/optifine/util/DynamicDimension;)V = DrawSize
  hasCompositeMipmaps()Z = HasCompositeMipmaps
  getId()I = Id
  setId(I)V = Id
  getIndex()I = Index
  getName()Ljava/lang/String; = Name
  getProgramBackup()Lnet/optifine/shaders/Program; = ProgramBackup
  getProgramStage()Lnet/optifine/shaders/ProgramStage; = ProgramStage
  getRealProgramName()Ljava/lang/String; = RealProgramName
  getRef()I = Ref
  setRef(I)V = Ref
  getRenderScale()Lnet/optifine/shaders/config/RenderScale; = RenderScale
  setRenderScale(Lnet/optifine/shaders/config/RenderScale;)V = RenderScale
  copyFrom(Lnet/optifine/shaders/Program;)V = CopyFrom(Net.Optifine.Shaders.Program)
  getBlendStatesColorIndexed()[Lnet/optifine/render/GlBlendState; = GetBlendStatesColorIndexed()
  getBlendStatesIndexed()[Lnet/optifine/render/GlBlendState; = GetBlendStatesIndexed()
  getBuffersFlip()[Ljava/lang/Boolean; = GetBuffersFlip()
  getComputePrograms()[Lnet/optifine/shaders/ComputeProgram; = GetComputePrograms()
  getDrawBufSettings()[Ljava/lang/String; = GetDrawBufSettings()
  getToggleColorTextures()[Z = GetToggleColorTextures()
  resetConfiguration()V = ResetConfiguration()
  resetId()V = ResetId()
  resetProperties()V = ResetProperties()
  setBlendStateColorIndexed(ILnet/optifine/render/GlBlendState;)V = SetBlendStateColorIndexed(int, Net.Optifine.Render.GlBlendState)
  setBlendStateIndexed(ILnet/optifine/render/GlBlendState;)V = SetBlendStateIndexed(int, Net.Optifine.Render.GlBlendState)
  setComputePrograms([Lnet/optifine/shaders/ComputeProgram;)V = SetComputePrograms(Net.Optifine.Shaders.ComputeProgram[])
  setDrawBufSettings([Ljava/lang/String;)V = SetDrawBufSettings(string[])
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/Program = Net.Optifine.Shaders.Program
  <init>(ILjava/lang/String;Lnet/optifine/shaders/ProgramStage;Lnet/optifine/shaders/Program;)V = .ctor(int, string, Net.Optifine.Shaders.ProgramStage, Net.Optifine.Shaders.Program)
  <init>(ILjava/lang/String;Lnet/optifine/shaders/ProgramStage;Z)V = .ctor(int, string, Net.Optifine.Shaders.ProgramStage, bool)
  getAlphaState()Lnet/optifine/render/GlAlphaState; = AlphaState
  setAlphaState(Lnet/optifine/render/GlAlphaState;)V = AlphaState
  getBlendState()Lnet/optifine/render/GlBlendState; = BlendState
  setBlendState(Lnet/optifine/render/GlBlendState;)V = BlendState
  getCompositeMipmapSetting()I = CompositeMipmapSetting
  setCompositeMipmapSetting(I)V = CompositeMipmapSetting
  getCountInstances()I = CountInstances
  setCountInstances(I)V = CountInstances
  getDrawBuffers()Lnet/optifine/shaders/DrawBuffers; = DrawBuffers
  setDrawBuffers(Lnet/optifine/shaders/DrawBuffers;)V = DrawBuffers
  getDrawBuffersCustom()Lnet/optifine/shaders/DrawBuffers; = DrawBuffersCustom
  getDrawSize()Lnet/optifine/util/DynamicDimension; = DrawSize
  setDrawSize(Lnet/optifine/util/DynamicDimension;)V = DrawSize
  hasCompositeMipmaps()Z = HasCompositeMipmaps
  getId()I = Id
  setId(I)V = Id
  getIndex()I = Index
  getName()Ljava/lang/String; = Name
  getProgramBackup()Lnet/optifine/shaders/Program; = ProgramBackup
  getProgramStage()Lnet/optifine/shaders/ProgramStage; = ProgramStage
  getRealProgramName()Ljava/lang/String; = RealProgramName
  getRef()I = Ref
  setRef(I)V = Ref
  getRenderScale()Lnet/optifine/shaders/config/RenderScale; = RenderScale
  setRenderScale(Lnet/optifine/shaders/config/RenderScale;)V = RenderScale
  copyFrom(Lnet/optifine/shaders/Program;)V = CopyFrom(Net.Optifine.Shaders.Program)
  getBlendStatesColorIndexed()[Lnet/optifine/render/GlBlendState; = GetBlendStatesColorIndexed()
  getBlendStatesIndexed()[Lnet/optifine/render/GlBlendState; = GetBlendStatesIndexed()
  getBuffersFlip()[Ljava/lang/Boolean; = GetBuffersFlip()
  getComputePrograms()[Lnet/optifine/shaders/ComputeProgram; = GetComputePrograms()
  getDrawBufSettings()[Ljava/lang/String; = GetDrawBufSettings()
  getToggleColorTextures()[Z = GetToggleColorTextures()
  resetConfiguration()V = ResetConfiguration()
  resetId()V = ResetId()
  resetProperties()V = ResetProperties()
  setBlendStateColorIndexed(ILnet/optifine/render/GlBlendState;)V = SetBlendStateColorIndexed(int, Net.Optifine.Render.GlBlendState)
  setBlendStateIndexed(ILnet/optifine/render/GlBlendState;)V = SetBlendStateIndexed(int, Net.Optifine.Render.GlBlendState)
  setComputePrograms([Lnet/optifine/shaders/ComputeProgram;)V = SetComputePrograms(Net.Optifine.Shaders.ComputeProgram[])
  setDrawBufSettings([Ljava/lang/String;)V = SetDrawBufSettings(string[])
net/optifine/shaders/Programs = Net.Optifine.Shaders.Programs
  <init>()V = .ctor()
  getCount()I = Count
  getProgramNone()Lnet/optifine/shaders/Program; = ProgramNone
  getProgram(Ljava/lang/String;)Lnet/optifine/shaders/Program; = GetProgram(string)
  getProgramNames()[Ljava/lang/String; = GetProgramNames()
  getPrograms()[Lnet/optifine/shaders/Program; = GetPrograms()
  getPrograms(Lnet/optifine/shaders/Program;Lnet/optifine/shaders/Program;)[Lnet/optifine/shaders/Program; = GetPrograms(Net.Optifine.Shaders.Program, Net.Optifine.Shaders.Program)
  make(Ljava/lang/String;Lnet/optifine/shaders/ProgramStage;Lnet/optifine/shaders/Program;)Lnet/optifine/shaders/Program; = Make(string, Net.Optifine.Shaders.ProgramStage, Net.Optifine.Shaders.Program)
  makeComposite(Ljava/lang/String;)Lnet/optifine/shaders/Program; = MakeComposite(string)
  makeComposites(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakeComposites(string, int)
  makeDeferred(Ljava/lang/String;)Lnet/optifine/shaders/Program; = MakeDeferred(string)
  makeDeferreds(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakeDeferreds(string, int)
  makeGbuffers(Ljava/lang/String;Lnet/optifine/shaders/Program;)Lnet/optifine/shaders/Program; = MakeGbuffers(string, Net.Optifine.Shaders.Program)
  makePrepares(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakePrepares(string, int)
  makePrograms(Ljava/lang/String;ILnet/optifine/shaders/ProgramStage;Lnet/optifine/shaders/Program;)[Lnet/optifine/shaders/Program; = MakePrograms(string, int, Net.Optifine.Shaders.ProgramStage, Net.Optifine.Shaders.Program)
  makeShadow(Ljava/lang/String;Lnet/optifine/shaders/Program;)Lnet/optifine/shaders/Program; = MakeShadow(string, Net.Optifine.Shaders.Program)
  makeShadowcomps(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakeShadowcomps(string, int)
  makeVirtual(Ljava/lang/String;)Lnet/optifine/shaders/Program; = MakeVirtual(string)
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/Programs = Net.Optifine.Shaders.Programs
  <init>()V = .ctor()
  getCount()I = Count
  getProgramNone()Lnet/optifine/shaders/Program; = ProgramNone
  getProgram(Ljava/lang/String;)Lnet/optifine/shaders/Program; = GetProgram(string)
  getProgramNames()[Ljava/lang/String; = GetProgramNames()
  getPrograms()[Lnet/optifine/shaders/Program; = GetPrograms()
  getPrograms(Lnet/optifine/shaders/Program;Lnet/optifine/shaders/Program;)[Lnet/optifine/shaders/Program; = GetPrograms(Net.Optifine.Shaders.Program, Net.Optifine.Shaders.Program)
  make(Ljava/lang/String;Lnet/optifine/shaders/ProgramStage;Lnet/optifine/shaders/Program;)Lnet/optifine/shaders/Program; = Make(string, Net.Optifine.Shaders.ProgramStage, Net.Optifine.Shaders.Program)
  makeComposite(Ljava/lang/String;)Lnet/optifine/shaders/Program; = MakeComposite(string)
  makeComposites(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakeComposites(string, int)
  makeDeferred(Ljava/lang/String;)Lnet/optifine/shaders/Program; = MakeDeferred(string)
  makeDeferreds(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakeDeferreds(string, int)
  makeGbuffers(Ljava/lang/String;Lnet/optifine/shaders/Program;)Lnet/optifine/shaders/Program; = MakeGbuffers(string, Net.Optifine.Shaders.Program)
  makePrepares(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakePrepares(string, int)
  makePrograms(Ljava/lang/String;ILnet/optifine/shaders/ProgramStage;Lnet/optifine/shaders/Program;)[Lnet/optifine/shaders/Program; = MakePrograms(string, int, Net.Optifine.Shaders.ProgramStage, Net.Optifine.Shaders.Program)
  makeShadow(Ljava/lang/String;Lnet/optifine/shaders/Program;)Lnet/optifine/shaders/Program; = MakeShadow(string, Net.Optifine.Shaders.Program)
  makeShadowcomps(Ljava/lang/String;I)[Lnet/optifine/shaders/Program; = MakeShadowcomps(string, int)
  makeVirtual(Ljava/lang/String;)Lnet/optifine/shaders/Program; = MakeVirtual(string)
net/optifine/shaders/ProgramStack = Net.Optifine.Shaders.ProgramStack
  <init>()V = .ctor()
  pop()Lnet/optifine/shaders/Program; = Pop()
  push(Lnet/optifine/shaders/Program;)V = Push(Net.Optifine.Shaders.Program)
net/optifine/shaders/ProgramStack = Net.Optifine.Shaders.ProgramStack
  <init>()V = .ctor()
  pop()Lnet/optifine/shaders/Program; = Pop()
  push(Lnet/optifine/shaders/Program;)V = Push(Net.Optifine.Shaders.Program)
net/optifine/shaders/ProgramStage = Net.Optifine.Shaders.ProgramStage
  COMPOSITE = Composite
  DEFERRED = Deferred
  GBUFFERS = Gbuffers
  NONE = None
  PREPARE = Prepare
  SHADOW = Shadow
  SHADOWCOMP = Shadowcomp
  isAnyComposite()Z = IsAnyComposite
  isAnyShadow()Z = IsAnyShadow
  isMainComposite()Z = IsMainComposite
  getName()Ljava/lang/String; = Name
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/ProgramStage; = ValueOf(string)
  values()[Lnet/optifine/shaders/ProgramStage; = Values()
net/optifine/shaders/ProgramStage = Net.Optifine.Shaders.ProgramStage
  COMPOSITE = Composite
  DEFERRED = Deferred
  GBUFFERS = Gbuffers
  NONE = None
  PREPARE = Prepare
  SHADOW = Shadow
  SHADOWCOMP = Shadowcomp
  isAnyComposite()Z = IsAnyComposite
  isAnyShadow()Z = IsAnyShadow
  isMainComposite()Z = IsMainComposite
  getName()Ljava/lang/String; = Name
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/ProgramStage; = ValueOf(string)
  values()[Lnet/optifine/shaders/ProgramStage; = Values()
net/optifine/shaders/ProgramUtils = Net.Optifine.Shaders.ProgramUtils
  <init>()V = .ctor()
  hasActive([Lnet/optifine/shaders/Program;)Z = HasActive(Net.Optifine.Shaders.Program[])
net/optifine/shaders/ProgramUtils = Net.Optifine.Shaders.ProgramUtils
  <init>()V = .ctor()
  hasActive([Lnet/optifine/shaders/Program;)Z = HasActive(Net.Optifine.Shaders.Program[])
net/optifine/shaders/RenderStage = Net.Optifine.Shaders.RenderStage
  BLOCK_ENTITIES = BlockEntities
  CLOUDS = Clouds
  CUSTOM_SKY = CustomSky
  DEBUG = Debug
  DESTROY = Destroy
  ENTITIES = Entities
  HAND_SOLID = HandSolid
  HAND_TRANSLUCENT = HandTranslucent
  MOON = Moon
  NONE = None
  OUTLINE = Outline
  PARTICLES = Particles
  RAIN_SNOW = RainSnow
  SKY = Sky
  STARS = Stars
  SUN = Sun
  SUNSET = Sunset
  TERRAIN_CUTOUT = TerrainCutout
  TERRAIN_CUTOUT_MIPPED = TerrainCutoutMipped
  TERRAIN_SOLID = TerrainSolid
  TERRAIN_TRANSLUCENT = TerrainTranslucent
  TRIPWIRE = Tripwire
  VOID = Void
  WORLD_BORDER = WorldBorder
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/RenderStage; = ValueOf(string)
  values()[Lnet/optifine/shaders/RenderStage; = Values()
net/optifine/shaders/RenderStage = Net.Optifine.Shaders.RenderStage
  BLOCK_ENTITIES = BlockEntities
  CLOUDS = Clouds
  CUSTOM_SKY = CustomSky
  DEBUG = Debug
  DESTROY = Destroy
  ENTITIES = Entities
  HAND_SOLID = HandSolid
  HAND_TRANSLUCENT = HandTranslucent
  MOON = Moon
  NONE = None
  OUTLINE = Outline
  PARTICLES = Particles
  RAIN_SNOW = RainSnow
  SKY = Sky
  STARS = Stars
  SUN = Sun
  SUNSET = Sunset
  TERRAIN_CUTOUT = TerrainCutout
  TERRAIN_CUTOUT_MIPPED = TerrainCutoutMipped
  TERRAIN_SOLID = TerrainSolid
  TERRAIN_TRANSLUCENT = TerrainTranslucent
  TRIPWIRE = Tripwire
  VOID = Void
  WORLD_BORDER = WorldBorder
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/RenderStage; = ValueOf(string)
  values()[Lnet/optifine/shaders/RenderStage; = Values()
net/optifine/shaders/ShaderPackDefault = Net.Optifine.Shaders.ShaderPackDefault
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderPackDefault = Net.Optifine.Shaders.ShaderPackDefault
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderPackFolder = Net.Optifine.Shaders.ShaderPackFolder
  <init>(Ljava/lang/String;Ljava/io/File;)V = .ctor(string, Java.IO.File)
  packFile = PackFile
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderPackFolder = Net.Optifine.Shaders.ShaderPackFolder
  <init>(Ljava/lang/String;Ljava/io/File;)V = .ctor(string, Java.IO.File)
  packFile = PackFile
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderPackNone = Net.Optifine.Shaders.ShaderPackNone
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderPackNone = Net.Optifine.Shaders.ShaderPackNone
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderPackZip = Net.Optifine.Shaders.ShaderPackZip
  <init>(Ljava/lang/String;Ljava/io/File;)V = .ctor(string, Java.IO.File)
  baseFolder = BaseFolder
  packFile = PackFile
  packZipFile = PackZipFile
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderPackZip = Net.Optifine.Shaders.ShaderPackZip
  <init>(Ljava/lang/String;Ljava/io/File;)V = .ctor(string, Java.IO.File)
  baseFolder = BaseFolder
  packFile = PackFile
  packZipFile = PackZipFile
  getName()Ljava/lang/String; = Name
  close()V = Close()
  getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceAsStream(string)
  hasDirectory(Ljava/lang/String;)Z = HasDirectory(string)
net/optifine/shaders/ShaderProgramData = Net.Optifine.Shaders.ShaderProgramData
  <init>(I)V = .ctor(int)
  programIDGL = ProgramIDGL
  uniform_aspectRatio = UniformAspectRatio
  uniform_atlasSize = UniformAtlasSize
  uniform_cameraPosition = UniformCameraPosition
  uniform_centerDepthSmooth = UniformCenterDepthSmooth
  uniform_colortex0 = UniformColortex0
  uniform_colortex1 = UniformColortex1
  uniform_colortex2 = UniformColortex2
  uniform_colortex3 = UniformColortex3
  uniform_colortex4 = UniformColortex4
  uniform_colortex5 = UniformColortex5
  uniform_colortex6 = UniformColortex6
  uniform_colortex7 = UniformColortex7
  uniform_composite = UniformComposite
  uniform_depthtex0 = UniformDepthtex0
  uniform_depthtex1 = UniformDepthtex1
  uniform_depthtex2 = UniformDepthtex2
  uniform_eyeAltitude = UniformEyeAltitude
  uniform_eyeBrightness = UniformEyeBrightness
  uniform_eyeBrightnessSmooth = UniformEyeBrightnessSmooth
  uniform_far = UniformFar
  uniform_fogColor = UniformFogColor
  uniform_fogMode = UniformFogMode
  uniform_frameTimeCounter = UniformFrameTimeCounter
  uniform_gaux1 = UniformGaux1
  uniform_gaux2 = UniformGaux2
  uniform_gaux3 = UniformGaux3
  uniform_gaux4 = UniformGaux4
  uniform_gbufferModelView = UniformGbufferModelView
  uniform_gbufferModelViewInverse = UniformGbufferModelViewInverse
  uniform_gbufferPreviousModelView = UniformGbufferPreviousModelView
  uniform_gbufferPreviousProjection = UniformGbufferPreviousProjection
  uniform_gbufferProjection = UniformGbufferProjection
  uniform_gbufferProjectionInverse = UniformGbufferProjectionInverse
  uniform_gcolor = UniformGcolor
  uniform_gdepth = UniformGdepth
  uniform_gdepthtex = UniformGdepthtex
  uniform_gnormal = UniformGnormal
  uniform_heldBlockLightValue = UniformHeldBlockLightValue
  uniform_heldItemId = UniformHeldItemId
  uniform_hideGUI = UniformHideGUI
  uniform_isEyeInWater = UniformIsEyeInWater
  uniform_lightmap = UniformLightmap
  uniform_moonPhase = UniformMoonPhase
  uniform_moonPosition = UniformMoonPosition
  uniform_near = UniformNear
  uniform_noisetex = UniformNoisetex
  uniform_normals = UniformNormals
  uniform_previousCameraPosition = UniformPreviousCameraPosition
  uniform_rainStrength = UniformRainStrength
  uniform_shadow = UniformShadow
  uniform_shadowAngle = UniformShadowAngle
  uniform_shadowcolor = UniformShadowcolor
  uniform_shadowcolor0 = UniformShadowcolor0
  uniform_shadowcolor1 = UniformShadowcolor1
  uniform_shadowModelView = UniformShadowModelView
  uniform_shadowModelViewInverse = UniformShadowModelViewInverse
  uniform_shadowProjection = UniformShadowProjection
  uniform_shadowProjectionInverse = UniformShadowProjectionInverse
  uniform_shadowtex0 = UniformShadowtex0
  uniform_shadowtex1 = UniformShadowtex1
  uniform_skyColor = UniformSkyColor
  uniform_specular = UniformSpecular
  uniform_sunAngle = UniformSunAngle
  uniform_sunPosition = UniformSunPosition
  uniform_terrainIconSize = UniformTerrainIconSize
  uniform_terrainTextureSize = UniformTerrainTextureSize
  uniform_tex = UniformTex
  uniform_texture = UniformTexture
  uniform_upPosition = UniformUpPosition
  uniform_viewHeight = UniformViewHeight
  uniform_viewWidth = UniformViewWidth
  uniform_watershadow = UniformWatershadow
  uniform_wetness = UniformWetness
  uniform_worldTime = UniformWorldTime
net/optifine/shaders/ShaderProgramData = Net.Optifine.Shaders.ShaderProgramData
  <init>(I)V = .ctor(int)
  programIDGL = ProgramIDGL
  uniform_aspectRatio = UniformAspectRatio
  uniform_atlasSize = UniformAtlasSize
  uniform_cameraPosition = UniformCameraPosition
  uniform_centerDepthSmooth = UniformCenterDepthSmooth
  uniform_colortex0 = UniformColortex0
  uniform_colortex1 = UniformColortex1
  uniform_colortex2 = UniformColortex2
  uniform_colortex3 = UniformColortex3
  uniform_colortex4 = UniformColortex4
  uniform_colortex5 = UniformColortex5
  uniform_colortex6 = UniformColortex6
  uniform_colortex7 = UniformColortex7
  uniform_composite = UniformComposite
  uniform_depthtex0 = UniformDepthtex0
  uniform_depthtex1 = UniformDepthtex1
  uniform_depthtex2 = UniformDepthtex2
  uniform_eyeAltitude = UniformEyeAltitude
  uniform_eyeBrightness = UniformEyeBrightness
  uniform_eyeBrightnessSmooth = UniformEyeBrightnessSmooth
  uniform_far = UniformFar
  uniform_fogColor = UniformFogColor
  uniform_fogMode = UniformFogMode
  uniform_frameTimeCounter = UniformFrameTimeCounter
  uniform_gaux1 = UniformGaux1
  uniform_gaux2 = UniformGaux2
  uniform_gaux3 = UniformGaux3
  uniform_gaux4 = UniformGaux4
  uniform_gbufferModelView = UniformGbufferModelView
  uniform_gbufferModelViewInverse = UniformGbufferModelViewInverse
  uniform_gbufferPreviousModelView = UniformGbufferPreviousModelView
  uniform_gbufferPreviousProjection = UniformGbufferPreviousProjection
  uniform_gbufferProjection = UniformGbufferProjection
  uniform_gbufferProjectionInverse = UniformGbufferProjectionInverse
  uniform_gcolor = UniformGcolor
  uniform_gdepth = UniformGdepth
  uniform_gdepthtex = UniformGdepthtex
  uniform_gnormal = UniformGnormal
  uniform_heldBlockLightValue = UniformHeldBlockLightValue
  uniform_heldItemId = UniformHeldItemId
  uniform_hideGUI = UniformHideGUI
  uniform_isEyeInWater = UniformIsEyeInWater
  uniform_lightmap = UniformLightmap
  uniform_moonPhase = UniformMoonPhase
  uniform_moonPosition = UniformMoonPosition
  uniform_near = UniformNear
  uniform_noisetex = UniformNoisetex
  uniform_normals = UniformNormals
  uniform_previousCameraPosition = UniformPreviousCameraPosition
  uniform_rainStrength = UniformRainStrength
  uniform_shadow = UniformShadow
  uniform_shadowAngle = UniformShadowAngle
  uniform_shadowcolor = UniformShadowcolor
  uniform_shadowcolor0 = UniformShadowcolor0
  uniform_shadowcolor1 = UniformShadowcolor1
  uniform_shadowModelView = UniformShadowModelView
  uniform_shadowModelViewInverse = UniformShadowModelViewInverse
  uniform_shadowProjection = UniformShadowProjection
  uniform_shadowProjectionInverse = UniformShadowProjectionInverse
  uniform_shadowtex0 = UniformShadowtex0
  uniform_shadowtex1 = UniformShadowtex1
  uniform_skyColor = UniformSkyColor
  uniform_specular = UniformSpecular
  uniform_sunAngle = UniformSunAngle
  uniform_sunPosition = UniformSunPosition
  uniform_terrainIconSize = UniformTerrainIconSize
  uniform_terrainTextureSize = UniformTerrainTextureSize
  uniform_tex = UniformTex
  uniform_texture = UniformTexture
  uniform_upPosition = UniformUpPosition
  uniform_viewHeight = UniformViewHeight
  uniform_viewWidth = UniformViewWidth
  uniform_watershadow = UniformWatershadow
  uniform_wetness = UniformWetness
  uniform_worldTime = UniformWorldTime
net/optifine/shaders/Shaders = Net.Optifine.Shaders.Shaders
  activeProgram = ActiveProgram
  activeProgramID = ActiveProgramID
  aoLevel = AoLevel
  atlasSizeX = AtlasSizeX
  atlasSizeY = AtlasSizeY
  blockLightLevel05 = BlockLightLevel05
  blockLightLevel06 = BlockLightLevel06
  blockLightLevel08 = BlockLightLevel08
  configAntialiasingLevel = ConfigAntialiasingLevel
  configCloudShadow = ConfigCloudShadow
  configHandDepthMul = ConfigHandDepthMul
  configNormalMap = ConfigNormalMap
  configOldHandLight = ConfigOldHandLight
  configOldLighting = ConfigOldLighting
  configRenderResMul = ConfigRenderResMul
  configShadowClipFrustrum = ConfigShadowClipFrustrum
  configShadowResMul = ConfigShadowResMul
  configSpecularMap = ConfigSpecularMap
  configTexMagFilB = ConfigTexMagFilB
  configTexMagFilN = ConfigTexMagFilN
  configTexMagFilS = ConfigTexMagFilS
  configTexMinFilB = ConfigTexMinFilB
  configTexMinFilN = ConfigTexMinFilN
  configTexMinFilS = ConfigTexMinFilS
  configTweakBlockDamage = ConfigTweakBlockDamage
  countResetDisplayLists = CountResetDisplayLists
  currentShaderName = CurrentShaderName
  drynessHalfLife = DrynessHalfLife
  entityAttrib = EntityAttrib
  entityData = EntityData
  entityDataIndex = EntityDataIndex
  eyeBrightnessHalflife = EyeBrightnessHalflife
  fogColorB = FogColorB
  fogColorG = FogColorG
  fogColorR = FogColorR
  fogDensity = FogDensity
  fogEnd = FogEnd
  fogMode = FogMode
  fogShape = FogShape
  fogStart = FogStart
  gbuffersClear = GbuffersClear
  glRendererString = GlRendererString
  glVendorString = GlVendorString
  glVersionString = GlVersionString
  hasGlGenMipmap = HasGlGenMipmap
  hasPreparePrograms = HasPreparePrograms
  hasShadowcompPrograms = HasShadowcompPrograms
  hasShadowGeometryShaders = HasShadowGeometryShaders
  hasShadowInstancing = HasShadowInstancing
  hasShadowMap = HasShadowMap
  isCompositeRendered = IsCompositeRendered
  isInitializedOnce = IsInitializedOnce
  isRenderingDfb = IsRenderingDfb
  isRenderingSky = IsRenderingSky
  isRenderingWorld = IsRenderingWorld
  isShaderPackInitialized = IsShaderPackInitialized
  isShadowPass = IsShadowPass
  isSleeping = IsSleeping
  itemToRenderMainTranslucent = ItemToRenderMainTranslucent
  itemToRenderOffTranslucent = ItemToRenderOffTranslucent
  loadedShaders = LoadedShaders
  MaxColorBuffers = MaxColorBuffers
  MaxDepthBuffers = MaxDepthBuffers
  MaxDrawBuffers = MaxDrawBuffers
  MaxShadowColorBuffers = MaxShadowColorBuffers
  MaxShadowDepthBuffers = MaxShadowDepthBuffers
  midBlockAttrib = MidBlockAttrib
  midTexCoordAttrib = MidTexCoordAttrib
  needResizeShadow = NeedResizeShadow
  OPTIONS_FILE_NAME = OptionsFileName
  PATH_SHADERS_PROPERTIES = PathShadersProperties
  pointOfViewChanged = PointOfViewChanged
  ProgramArmorGlint = ProgramArmorGlint
  ProgramBasic = ProgramBasic
  ProgramBeaconBeam = ProgramBeaconBeam
  ProgramBlock = ProgramBlock
  ProgramClouds = ProgramClouds
  ProgramComposite = ProgramComposite
  ProgramCompositePre = ProgramCompositePre
  ProgramCount = ProgramCount
  ProgramDamagedBlock = ProgramDamagedBlock
  ProgramDeferred = ProgramDeferred
  ProgramDeferredPre = ProgramDeferredPre
  ProgramEntities = ProgramEntities
  ProgramEntitiesGlowing = ProgramEntitiesGlowing
  ProgramFinal = ProgramFinal
  ProgramHand = ProgramHand
  ProgramHandWater = ProgramHandWater
  ProgramItem = ProgramItem
  ProgramLine = ProgramLine
  ProgramNone = ProgramNone
  ProgramsAll = ProgramsAll
  ProgramsComposite = ProgramsComposite
  ProgramsDeferred = ProgramsDeferred
  ProgramShadow = ProgramShadow
  ProgramShadowCutout = ProgramShadowCutout
  ProgramShadowSolid = ProgramShadowSolid
  ProgramSkyBasic = ProgramSkyBasic
  ProgramSkyTextured = ProgramSkyTextured
  ProgramSpiderEyes = ProgramSpiderEyes
  ProgramsPrepare = ProgramsPrepare
  ProgramsShadowcomp = ProgramsShadowcomp
  ProgramTerrain = ProgramTerrain
  ProgramTerrainCutout = ProgramTerrainCutout
  ProgramTerrainCutoutMip = ProgramTerrainCutoutMip
  ProgramTerrainSolid = ProgramTerrainSolid
  ProgramTextured = ProgramTextured
  ProgramTexturedLit = ProgramTexturedLit
  ProgramWater = ProgramWater
  ProgramWeather = ProgramWeather
  progUseEntityAttrib = ProgUseEntityAttrib
  progUseMidBlockAttrib = ProgUseMidBlockAttrib
  progUseMidTexCoordAttrib = ProgUseMidTexCoordAttrib
  progUseTangentAttrib = ProgUseTangentAttrib
  progUseVelocityAttrib = ProgUseVelocityAttrib
  renderHeight = RenderHeight
  renderItemKeepDepthMask = RenderItemKeepDepthMask
  renderWidth = RenderWidth
  saveFinalShaders = SaveFinalShaders
  shaderPackBackFaceCutout = ShaderPackBackFaceCutout
  shaderPackBackFaceCutoutMipped = ShaderPackBackFaceCutoutMipped
  shaderPackBackFaceSolid = ShaderPackBackFaceSolid
  shaderPackBackFaceTranslucent = ShaderPackBackFaceTranslucent
  shaderPackBeaconBeamDepth = ShaderPackBeaconBeamDepth
  shaderPackClouds = ShaderPackClouds
  shaderPackDynamicHandLight = ShaderPackDynamicHandLight
  shaderPackFrustumCulling = ShaderPackFrustumCulling
  shaderPackLoaded = ShaderPackLoaded
  shaderPackMoon = ShaderPackMoon
  SHADER_PACK_NAME_DEFAULT = ShaderPackNameDefault
  SHADER_PACK_NAME_NONE = ShaderPackNameNone
  shaderPackOldHandLight = ShaderPackOldHandLight
  shaderPackOldLighting = ShaderPackOldLighting
  shaderPackParticlesBeforeDeferred = ShaderPackParticlesBeforeDeferred
  shaderPackRainDepth = ShaderPackRainDepth
  shaderPacksDir = ShaderPacksDir
  SHADER_PACKS_DIR_NAME = ShaderPacksDirName
  shaderPackSeparateAo = ShaderPackSeparateAo
  shaderPackShadowBlockEntities = ShaderPackShadowBlockEntities
  shaderPackShadowCulling = ShaderPackShadowCulling
  shaderPackShadowEntities = ShaderPackShadowEntities
  shaderPackShadowTerrain = ShaderPackShadowTerrain
  shaderPackShadowTranslucent = ShaderPackShadowTranslucent
  shaderPackSun = ShaderPackSun
  shaderPackUnderwaterOverlay = ShaderPackUnderwaterOverlay
  shaderPackVignette = ShaderPackVignette
  shadersConfig = ShadersConfig
  shadowAngleInterval = ShadowAngleInterval
  shadowBuffersClear = ShadowBuffersClear
  shadowColorFilterNearest = ShadowColorFilterNearest
  shadowColorMipmapEnabled = ShadowColorMipmapEnabled
  shadowFilterNearest = ShadowFilterNearest
  shadowHardwareFilteringEnabled = ShadowHardwareFilteringEnabled
  shadowIntervalSize = ShadowIntervalSize
  shadowMipmapEnabled = ShadowMipmapEnabled
  shouldSkipDefaultShadow = ShouldSkipDefaultShadow
  sunPathRotation = SunPathRotation
  tangentAttrib = TangentAttrib
  terrainIconSize = TerrainIconSize
  terrainTextureSize = TerrainTextureSize
  texMagFilDesc = TexMagFilDesc
  texMagFilRange = TexMagFilRange
  texMagFilValue = TexMagFilValue
  texMinFilDesc = TexMinFilDesc
  texMinFilRange = TexMinFilRange
  texMinFilValue = TexMinFilValue
  uniform_alphaTestRef = UniformAlphaTestRef
  uniform_aspectRatio = UniformAspectRatio
  uniform_atlasSize = UniformAtlasSize
  uniform_blendFunc = UniformBlendFunc
  uniform_blindness = UniformBlindness
  uniform_blockEntityId = UniformBlockEntityId
  uniform_bossBattle = UniformBossBattle
  uniform_cameraPosition = UniformCameraPosition
  uniform_centerDepthSmooth = UniformCenterDepthSmooth
  uniform_chunkOffset = UniformChunkOffset
  uniform_colorimg0 = UniformColorimg0
  uniform_colorimg1 = UniformColorimg1
  uniform_colorimg2 = UniformColorimg2
  uniform_colorimg3 = UniformColorimg3
  uniform_colorimg4 = UniformColorimg4
  uniform_colorimg5 = UniformColorimg5
  uniform_colorModulator = UniformColorModulator
  uniform_colortex0 = UniformColortex0
  uniform_colortex1 = UniformColortex1
  uniform_colortex10 = UniformColortex10
  uniform_colortex11 = UniformColortex11
  uniform_colortex12 = UniformColortex12
  uniform_colortex13 = UniformColortex13
  uniform_colortex14 = UniformColortex14
  uniform_colortex15 = UniformColortex15
  uniform_colortex2 = UniformColortex2
  uniform_colortex3 = UniformColortex3
  uniform_colortex4 = UniformColortex4
  uniform_colortex5 = UniformColortex5
  uniform_colortex6 = UniformColortex6
  uniform_colortex7 = UniformColortex7
  uniform_colortex8 = UniformColortex8
  uniform_colortex9 = UniformColortex9
  uniform_composite = UniformComposite
  uniform_darknessFactor = UniformDarknessFactor
  uniform_darknessLightFactor = UniformDarknessLightFactor
  uniform_depthtex0 = UniformDepthtex0
  uniform_depthtex1 = UniformDepthtex1
  uniform_depthtex2 = UniformDepthtex2
  uniform_entityColor = UniformEntityColor
  uniform_entityId = UniformEntityId
  uniform_eyeAltitude = UniformEyeAltitude
  uniform_eyeBrightness = UniformEyeBrightness
  uniform_eyeBrightnessSmooth = UniformEyeBrightnessSmooth
  uniform_far = UniformFar
  uniform_fogColor = UniformFogColor
  uniform_fogDensity = UniformFogDensity
  uniform_fogEnd = UniformFogEnd
  uniform_fogMode = UniformFogMode
  uniform_fogShape = UniformFogShape
  uniform_fogStart = UniformFogStart
  uniform_frameCounter = UniformFrameCounter
  uniform_frameTime = UniformFrameTime
  uniform_frameTimeCounter = UniformFrameTimeCounter
  uniform_gaux1 = UniformGaux1
  uniform_gaux2 = UniformGaux2
  uniform_gaux3 = UniformGaux3
  uniform_gaux4 = UniformGaux4
  uniform_gbufferModelView = UniformGbufferModelView
  uniform_gbufferModelViewInverse = UniformGbufferModelViewInverse
  uniform_gbufferPreviousModelView = UniformGbufferPreviousModelView
  uniform_gbufferPreviousProjection = UniformGbufferPreviousProjection
  uniform_gbufferProjection = UniformGbufferProjection
  uniform_gbufferProjectionInverse = UniformGbufferProjectionInverse
  uniform_gcolor = UniformGcolor
  uniform_gdepth = UniformGdepth
  uniform_gdepthtex = UniformGdepthtex
  uniform_gnormal = UniformGnormal
  uniform_gtexture = UniformGtexture
  uniform_heldBlockLightValue = UniformHeldBlockLightValue
  uniform_heldBlockLightValue2 = UniformHeldBlockLightValue2
  uniform_heldItemId = UniformHeldItemId
  uniform_heldItemId2 = UniformHeldItemId2
  uniform_hideGUI = UniformHideGUI
  uniform_instanceId = UniformInstanceId
  uniform_isEyeInWater = UniformIsEyeInWater
  uniform_lightmap = UniformLightmap
  uniform_modelViewMatrix = UniformModelViewMatrix
  uniform_modelViewMatrixInverse = UniformModelViewMatrixInverse
  uniform_moonPhase = UniformMoonPhase
  uniform_moonPosition = UniformMoonPosition
  uniform_near = UniformNear
  uniform_nightVision = UniformNightVision
  uniform_noisetex = UniformNoisetex
  uniform_normalMatrix = UniformNormalMatrix
  uniform_normals = UniformNormals
  uniform_playerMood = UniformPlayerMood
  uniform_previousCameraPosition = UniformPreviousCameraPosition
  uniform_projectionMatrix = UniformProjectionMatrix
  uniform_projectionMatrixInverse = UniformProjectionMatrixInverse
  uniform_rainStrength = UniformRainStrength
  uniform_renderStage = UniformRenderStage
  uniform_screenBrightness = UniformScreenBrightness
  uniform_shadow = UniformShadow
  uniform_shadowAngle = UniformShadowAngle
  uniform_shadowcolor = UniformShadowcolor
  uniform_shadowcolor0 = UniformShadowcolor0
  uniform_shadowcolor1 = UniformShadowcolor1
  uniform_shadowcolorimg0 = UniformShadowcolorimg0
  uniform_shadowcolorimg1 = UniformShadowcolorimg1
  uniform_shadowLightPosition = UniformShadowLightPosition
  uniform_shadowModelView = UniformShadowModelView
  uniform_shadowModelViewInverse = UniformShadowModelViewInverse
  uniform_shadowProjection = UniformShadowProjection
  uniform_shadowProjectionInverse = UniformShadowProjectionInverse
  uniform_shadowtex0 = UniformShadowtex0
  uniform_shadowtex1 = UniformShadowtex1
  uniform_skyColor = UniformSkyColor
  uniform_specular = UniformSpecular
  uniform_spriteBounds = UniformSpriteBounds
  uniform_sunAngle = UniformSunAngle
  uniform_sunPosition = UniformSunPosition
  uniform_terrainIconSize = UniformTerrainIconSize
  uniform_terrainTextureSize = UniformTerrainTextureSize
  uniform_tex = UniformTex
  uniform_textureMatrix = UniformTextureMatrix
  uniform_upPosition = UniformUpPosition
  uniform_viewHeight = UniformViewHeight
  uniform_viewWidth = UniformViewWidth
  uniform_watershadow = UniformWatershadow
  uniform_wetness = UniformWetness
  uniform_worldDay = UniformWorldDay
  uniform_worldTime = UniformWorldTime
  useEntityAttrib = UseEntityAttrib
  useMidBlockAttrib = UseMidBlockAttrib
  useMidTexCoordAttrib = UseMidTexCoordAttrib
  useTangentAttrib = UseTangentAttrib
  useVelocityAttrib = UseVelocityAttrib
  velocityAttrib = VelocityAttrib
  wetnessHalfLife = WetnessHalfLife
  getEntityData()I = EntityData
  getEntityData2()I = EntityData2
  isBeaconBeamDepth()Z = IsBeaconBeamDepth
  isBothHandsRendered()Z = IsBothHandsRendered
  isCustomUniforms()Z = IsCustomUniforms
  isDynamicHandLight()Z = IsDynamicHandLight
  isEffectsModelView()Z = IsEffectsModelView
  isFrustumCulling()Z = IsFrustumCulling
  isHandRenderedMain()Z = IsHandRenderedMain
  isHandRenderedOff()Z = IsHandRenderedOff
  isItemToRenderMainTranslucent()Z = IsItemToRenderMainTranslucent
  isItemToRenderOffTranslucent()Z = IsItemToRenderOffTranslucent
  isMoon()Z = IsMoon
  isOldHandLight()Z = IsOldHandLight
  isOldLighting()Z = IsOldLighting
  isOverlayDisabled()Z = IsOverlayDisabled
  isParticlesBeforeDeferred()Z = IsParticlesBeforeDeferred
  isRainDepth()Z = IsRainDepth
  isRemapLightmap()Z = IsRemapLightmap
  isRenderBothHands()Z = IsRenderBothHands
  isRenderingFirstPersonHand()Z = IsRenderingFirstPersonHand
  isRenderShadowBlockEntities()Z = IsRenderShadowBlockEntities
  isRenderShadowEntities()Z = IsRenderShadowEntities
  isRenderShadowTerrain()Z = IsRenderShadowTerrain
  isRenderShadowTranslucent()Z = IsRenderShadowTranslucent
  isSeparateAo()Z = IsSeparateAo
  isShadowCulling()Z = IsShadowCulling
  isSun()Z = IsSun
  isUnderwaterOverlay()Z = IsUnderwaterOverlay
  isVignette()Z = IsVignette
  getShaderPack()Lnet/optifine/shaders/IShaderPack; = ShaderPack
  getShaderPackName()Ljava/lang/String; = ShaderPackName
  getShadowRenderDistance()F = ShadowRenderDistance
  beginBeacon()V = BeginBeacon()
  beginBlockEntities()V = BeginBlockEntities()
  beginClouds()V = BeginClouds()
  beginEntities()V = BeginEntities()
  beginFPOverlay()V = BeginFPOverlay()
  beginHand(Z)V = BeginHand(bool)
  beginLeash()V = BeginLeash()
  beginLines()V = BeginLines()
  beginLitParticles()V = BeginLitParticles()
  beginLivingDamage()V = BeginLivingDamage()
  beginParticles()V = BeginParticles()
  beginRenderFirstPersonHand(Z)V = BeginRenderFirstPersonHand(bool)
  beginRenderPass(F)V = BeginRenderPass(float)
  beginSky()V = BeginSky()
  beginSpiderEyes()V = BeginSpiderEyes()
  beginUpdateChunks()V = BeginUpdateChunks()
  beginWater()V = BeginWater()
  beginWaterMask()V = BeginWaterMask()
  beginWeather()V = BeginWeather()
  canRenderQuads()Z = CanRenderQuads()
  checkFramebufferStatus(Ljava/lang/String;)I = CheckFramebufferStatus(string)
  checkGLError(Ljava/lang/String;)I = CheckGLError(string)
  checkShadersModInstalled()V = CheckShadersModInstalled()
  clearRenderBuffer()V = ClearRenderBuffer()
  disableFog()V = DisableFog()
  disableLightmap()V = DisableLightmap()
  disableTexture2D()V = DisableTexture2D()
  dispatchCompute(Lnet/optifine/shaders/ComputeProgram;)V = DispatchCompute(Net.Optifine.Shaders.ComputeProgram)
  dispatchComputes(Lnet/optifine/shaders/ShadersFramebuffer;[Lnet/optifine/shaders/ComputeProgram;)V = DispatchComputes(Net.Optifine.Shaders.ShadersFramebuffer, Net.Optifine.Shaders.ComputeProgram[])
  drawComposite()V = DrawComposite()
  enableFog()V = EnableFog()
  enableLightmap()V = EnableLightmap()
  enableTexture2D()V = EnableTexture2D()
  endBeacon()V = EndBeacon()
  endBlockEntities()V = EndBlockEntities()
  endClouds()V = EndClouds()
  endEntities()V = EndEntities()
  endFPOverlay()V = EndFPOverlay()
  endHand()V = EndHand()
  endLeash()V = EndLeash()
  endLines()V = EndLines()
  endLivingDamage()V = EndLivingDamage()
  endParticles()V = EndParticles()
  endRender()V = EndRender()
  endRenderFirstPersonHand()V = EndRenderFirstPersonHand()
  endSky()V = EndSky()
  endSpiderEyes()V = EndSpiderEyes()
  endUpdateChunks()V = EndUpdateChunks()
  endWater()V = EndWater()
  endWaterMask()V = EndWaterMask()
  endWeather()V = EndWeather()
  flushRenderBuffers()V = FlushRenderBuffers()
  getBufferIndex(Ljava/lang/String;)I = GetBufferIndex(string)
  getChangedOptions([Lnet/optifine/shaders/config/ShaderOption;)[Lnet/optifine/shaders/config/ShaderOption; = GetChangedOptions(Net.Optifine.Shaders.Config.ShaderOption[])
  getEnumShaderOption(Lnet/optifine/shaders/config/EnumShaderOption;)Ljava/lang/String; = GetEnumShaderOption(Net.Optifine.Shaders.Config.EnumShaderOption)
  getImageFormat(I)I = GetImageFormat(int)
  getPixelFormat(I)I = GetPixelFormat(int)
  getProgram(Ljava/lang/String;)Lnet/optifine/shaders/Program; = GetProgram(string)
  getShaderOption(Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = GetShaderOption(string)
  getShaderPack(Ljava/lang/String;)Lnet/optifine/shaders/IShaderPack; = GetShaderPack(string)
  getShaderPackColumns(Ljava/lang/String;I)I = GetShaderPackColumns(string, int)
  getShaderPackOptions()[Lnet/optifine/shaders/config/ShaderOption; = GetShaderPackOptions()
  getShaderPackOptions(Ljava/lang/String;)[Lnet/optifine/shaders/config/ShaderOption; = GetShaderPackOptions(string)
  getShaderPackResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetShaderPackResourceStream(string)
  glDisableWrapper(I)V = GlDisableWrapper(int)
  glEnableWrapper(I)V = GlEnableWrapper(int)
  init()V = Init()
  isProgramPath(Ljava/lang/String;)Z = IsProgramPath(string)
  isShaderPackOptionSlider(Ljava/lang/String;)Z = IsShaderPackOptionSlider(string)
  isTerrain(Lnet/optifine/shaders/Program;)Z = IsTerrain(Net.Optifine.Shaders.Program)
  listOfShaders()Ljava/util/ArrayList; = ListOfShaders()
  loadConfig()V = LoadConfig()
  loadShaderPack()V = LoadShaderPack()
  mcProfilerEndSection()V = McProfilerEndSection()
  nextAntialiasingLevel(Z)V = NextAntialiasingLevel(bool)
  nextIntBuffer(I)Ljava/nio/IntBuffer; = NextIntBuffer(int)
  popEntity()V = PopEntity()
  popProgram()V = PopProgram()
  preRenderHand()V = PreRenderHand()
  preWater()V = PreWater()
  printChatAndLogError(Ljava/lang/String;)V = PrintChatAndLogError(string)
  printIntBuffer(Ljava/lang/String;Ljava/nio/IntBuffer;)V = PrintIntBuffer(string, Java.Nio.IntBuffer)
  pushEntity(I)V = PushEntity(int)
  pushEntity(II)V = PushEntity(int, int)
  pushProgram()V = PushProgram()
  pushUseProgram(Lnet/optifine/shaders/Program;)V = PushUseProgram(Net.Optifine.Shaders.Program)
  readCenterDepth()V = ReadCenterDepth()
  renderCompositeFinal()V = RenderCompositeFinal()
  renderDeferred()V = RenderDeferred()
  renderPrepare()V = RenderPrepare()
  renderPrepareComposites()V = RenderPrepareComposites()
  renderShadowComposites()V = RenderShadowComposites()
  resetDisplayLists()V = ResetDisplayLists()
  resourcesReloaded()V = ResourcesReloaded()
  saveShader(Ljava/lang/String;Ljava/lang/String;)V = SaveShader(string, string)
  saveShaderPackOptions()V = SaveShaderPackOptions()
  scheduleResize()V = ScheduleResize()
  scheduleResizeShadow()V = ScheduleResizeShadow()
  setClearColor(FFFF)V = SetClearColor(float, float, float, float)
  setColorModulator([F)V = SetColorModulator(float[])
  setDarknessFactor(F)V = SetDarknessFactor(float)
  setDarknessLightFactor(F)V = SetDarknessLightFactor(float)
  setDefaultAttribColor()V = SetDefaultAttribColor()
  setDefaultAttribColor(FFFF)V = SetDefaultAttribColor(float, float, float, float)
  setEntityColor(FFFF)V = SetEntityColor(float, float, float, float)
  setEntityData1(I)I = SetEntityData1(int)
  setEntityData2(I)I = SetEntityData2(int)
  setFogAllowed(Z)V = SetFogAllowed(bool)
  setFogColor(FFF)V = SetFogColor(float, float, float)
  setFogDensity(F)V = SetFogDensity(float)
  setFogEnd(F)V = SetFogEnd(float)
  setFogMode(I)V = SetFogMode(int)
  setFogShape(I)V = SetFogShape(int)
  setFogStart(F)V = SetFogStart(float)
  setHandsRendered(ZZ)V = SetHandsRendered(bool, bool)
  setRenderStage(Lnet/optifine/shaders/RenderStage;)V = SetRenderStage(Net.Optifine.Shaders.RenderStage)
  setShaderPack(Ljava/lang/String;)V = SetShaderPack(string)
  setSkipRenderHands(ZZ)V = SetSkipRenderHands(bool, bool)
  setViewport(IIII)V = SetViewport(int, int, int, int)
  sglDisableFog(I)V = SglDisableFog(int)
  sglDisableT2D(I)V = SglDisableT2D(int)
  sglEnableFog(I)V = SglEnableFog(int)
  sglEnableT2D(I)V = SglEnableT2D(int)
  sglFogi(II)V = SglFogi(int, int)
  storeConfig()V = StoreConfig()
  translate(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = Translate(string, string)
  uninit()V = Uninit()
  updateBlockLightLevel()V = UpdateBlockLightLevel()
  updateProjectionMatrix()V = UpdateProjectionMatrix()
  useComputeProgram(Lnet/optifine/shaders/ComputeProgram;)V = UseComputeProgram(Net.Optifine.Shaders.ComputeProgram)
  useProgram(Lnet/optifine/shaders/Program;)V = UseProgram(Net.Optifine.Shaders.Program)
net/optifine/shaders/Shaders = Net.Optifine.Shaders.Shaders
  activeProgram = ActiveProgram
  activeProgramID = ActiveProgramID
  aoLevel = AoLevel
  atlasSizeX = AtlasSizeX
  atlasSizeY = AtlasSizeY
  blockLightLevel05 = BlockLightLevel05
  blockLightLevel06 = BlockLightLevel06
  blockLightLevel08 = BlockLightLevel08
  configAntialiasingLevel = ConfigAntialiasingLevel
  configCloudShadow = ConfigCloudShadow
  configHandDepthMul = ConfigHandDepthMul
  configNormalMap = ConfigNormalMap
  configOldHandLight = ConfigOldHandLight
  configOldLighting = ConfigOldLighting
  configRenderResMul = ConfigRenderResMul
  configShadowClipFrustrum = ConfigShadowClipFrustrum
  configShadowResMul = ConfigShadowResMul
  configSpecularMap = ConfigSpecularMap
  configTexMagFilB = ConfigTexMagFilB
  configTexMagFilN = ConfigTexMagFilN
  configTexMagFilS = ConfigTexMagFilS
  configTexMinFilB = ConfigTexMinFilB
  configTexMinFilN = ConfigTexMinFilN
  configTexMinFilS = ConfigTexMinFilS
  configTweakBlockDamage = ConfigTweakBlockDamage
  countResetDisplayLists = CountResetDisplayLists
  currentShaderName = CurrentShaderName
  drynessHalfLife = DrynessHalfLife
  entityAttrib = EntityAttrib
  entityData = EntityData
  entityDataIndex = EntityDataIndex
  eyeBrightnessHalflife = EyeBrightnessHalflife
  fogColorB = FogColorB
  fogColorG = FogColorG
  fogColorR = FogColorR
  fogDensity = FogDensity
  fogEnd = FogEnd
  fogMode = FogMode
  fogShape = FogShape
  fogStart = FogStart
  gbuffersClear = GbuffersClear
  glRendererString = GlRendererString
  glVendorString = GlVendorString
  glVersionString = GlVersionString
  hasGlGenMipmap = HasGlGenMipmap
  hasPreparePrograms = HasPreparePrograms
  hasShadowcompPrograms = HasShadowcompPrograms
  hasShadowGeometryShaders = HasShadowGeometryShaders
  hasShadowInstancing = HasShadowInstancing
  hasShadowMap = HasShadowMap
  isCompositeRendered = IsCompositeRendered
  isInitializedOnce = IsInitializedOnce
  isRenderingDfb = IsRenderingDfb
  isRenderingSky = IsRenderingSky
  isRenderingWorld = IsRenderingWorld
  isShaderPackInitialized = IsShaderPackInitialized
  isShadowPass = IsShadowPass
  isSleeping = IsSleeping
  itemToRenderMainTranslucent = ItemToRenderMainTranslucent
  itemToRenderOffTranslucent = ItemToRenderOffTranslucent
  loadedShaders = LoadedShaders
  MaxColorBuffers = MaxColorBuffers
  MaxDepthBuffers = MaxDepthBuffers
  MaxDrawBuffers = MaxDrawBuffers
  MaxShadowColorBuffers = MaxShadowColorBuffers
  MaxShadowDepthBuffers = MaxShadowDepthBuffers
  midBlockAttrib = MidBlockAttrib
  midTexCoordAttrib = MidTexCoordAttrib
  needResizeShadow = NeedResizeShadow
  OPTIONS_FILE_NAME = OptionsFileName
  PATH_SHADERS_PROPERTIES = PathShadersProperties
  pointOfViewChanged = PointOfViewChanged
  ProgramArmorGlint = ProgramArmorGlint
  ProgramBasic = ProgramBasic
  ProgramBeaconBeam = ProgramBeaconBeam
  ProgramBlock = ProgramBlock
  ProgramClouds = ProgramClouds
  ProgramComposite = ProgramComposite
  ProgramCompositePre = ProgramCompositePre
  ProgramCount = ProgramCount
  ProgramDamagedBlock = ProgramDamagedBlock
  ProgramDeferred = ProgramDeferred
  ProgramDeferredPre = ProgramDeferredPre
  ProgramEntities = ProgramEntities
  ProgramEntitiesGlowing = ProgramEntitiesGlowing
  ProgramFinal = ProgramFinal
  ProgramHand = ProgramHand
  ProgramHandWater = ProgramHandWater
  ProgramItem = ProgramItem
  ProgramLine = ProgramLine
  ProgramNone = ProgramNone
  ProgramsAll = ProgramsAll
  ProgramsComposite = ProgramsComposite
  ProgramsDeferred = ProgramsDeferred
  ProgramShadow = ProgramShadow
  ProgramShadowCutout = ProgramShadowCutout
  ProgramShadowSolid = ProgramShadowSolid
  ProgramSkyBasic = ProgramSkyBasic
  ProgramSkyTextured = ProgramSkyTextured
  ProgramSpiderEyes = ProgramSpiderEyes
  ProgramsPrepare = ProgramsPrepare
  ProgramsShadowcomp = ProgramsShadowcomp
  ProgramTerrain = ProgramTerrain
  ProgramTerrainCutout = ProgramTerrainCutout
  ProgramTerrainCutoutMip = ProgramTerrainCutoutMip
  ProgramTerrainSolid = ProgramTerrainSolid
  ProgramTextured = ProgramTextured
  ProgramTexturedLit = ProgramTexturedLit
  ProgramWater = ProgramWater
  ProgramWeather = ProgramWeather
  progUseEntityAttrib = ProgUseEntityAttrib
  progUseMidBlockAttrib = ProgUseMidBlockAttrib
  progUseMidTexCoordAttrib = ProgUseMidTexCoordAttrib
  progUseTangentAttrib = ProgUseTangentAttrib
  progUseVelocityAttrib = ProgUseVelocityAttrib
  renderHeight = RenderHeight
  renderItemKeepDepthMask = RenderItemKeepDepthMask
  renderWidth = RenderWidth
  saveFinalShaders = SaveFinalShaders
  shaderPackBackFaceCutout = ShaderPackBackFaceCutout
  shaderPackBackFaceCutoutMipped = ShaderPackBackFaceCutoutMipped
  shaderPackBackFaceSolid = ShaderPackBackFaceSolid
  shaderPackBackFaceTranslucent = ShaderPackBackFaceTranslucent
  shaderPackBeaconBeamDepth = ShaderPackBeaconBeamDepth
  shaderPackClouds = ShaderPackClouds
  shaderPackDynamicHandLight = ShaderPackDynamicHandLight
  shaderPackFrustumCulling = ShaderPackFrustumCulling
  shaderPackLoaded = ShaderPackLoaded
  shaderPackMoon = ShaderPackMoon
  SHADER_PACK_NAME_DEFAULT = ShaderPackNameDefault
  SHADER_PACK_NAME_NONE = ShaderPackNameNone
  shaderPackOldHandLight = ShaderPackOldHandLight
  shaderPackOldLighting = ShaderPackOldLighting
  shaderPackParticlesBeforeDeferred = ShaderPackParticlesBeforeDeferred
  shaderPackRainDepth = ShaderPackRainDepth
  shaderPacksDir = ShaderPacksDir
  SHADER_PACKS_DIR_NAME = ShaderPacksDirName
  shaderPackSeparateAo = ShaderPackSeparateAo
  shaderPackShadowBlockEntities = ShaderPackShadowBlockEntities
  shaderPackShadowCulling = ShaderPackShadowCulling
  shaderPackShadowEntities = ShaderPackShadowEntities
  shaderPackShadowTerrain = ShaderPackShadowTerrain
  shaderPackShadowTranslucent = ShaderPackShadowTranslucent
  shaderPackSun = ShaderPackSun
  shaderPackUnderwaterOverlay = ShaderPackUnderwaterOverlay
  shaderPackVignette = ShaderPackVignette
  shadersConfig = ShadersConfig
  shadowAngleInterval = ShadowAngleInterval
  shadowBuffersClear = ShadowBuffersClear
  shadowColorFilterNearest = ShadowColorFilterNearest
  shadowColorMipmapEnabled = ShadowColorMipmapEnabled
  shadowFilterNearest = ShadowFilterNearest
  shadowHardwareFilteringEnabled = ShadowHardwareFilteringEnabled
  shadowIntervalSize = ShadowIntervalSize
  shadowMipmapEnabled = ShadowMipmapEnabled
  shouldSkipDefaultShadow = ShouldSkipDefaultShadow
  sunPathRotation = SunPathRotation
  tangentAttrib = TangentAttrib
  terrainIconSize = TerrainIconSize
  terrainTextureSize = TerrainTextureSize
  texMagFilDesc = TexMagFilDesc
  texMagFilRange = TexMagFilRange
  texMagFilValue = TexMagFilValue
  texMinFilDesc = TexMinFilDesc
  texMinFilRange = TexMinFilRange
  texMinFilValue = TexMinFilValue
  uniform_alphaTestRef = UniformAlphaTestRef
  uniform_aspectRatio = UniformAspectRatio
  uniform_atlasSize = UniformAtlasSize
  uniform_blendFunc = UniformBlendFunc
  uniform_blindness = UniformBlindness
  uniform_blockEntityId = UniformBlockEntityId
  uniform_bossBattle = UniformBossBattle
  uniform_cameraPosition = UniformCameraPosition
  uniform_centerDepthSmooth = UniformCenterDepthSmooth
  uniform_chunkOffset = UniformChunkOffset
  uniform_colorimg0 = UniformColorimg0
  uniform_colorimg1 = UniformColorimg1
  uniform_colorimg2 = UniformColorimg2
  uniform_colorimg3 = UniformColorimg3
  uniform_colorimg4 = UniformColorimg4
  uniform_colorimg5 = UniformColorimg5
  uniform_colorModulator = UniformColorModulator
  uniform_colortex0 = UniformColortex0
  uniform_colortex1 = UniformColortex1
  uniform_colortex10 = UniformColortex10
  uniform_colortex11 = UniformColortex11
  uniform_colortex12 = UniformColortex12
  uniform_colortex13 = UniformColortex13
  uniform_colortex14 = UniformColortex14
  uniform_colortex15 = UniformColortex15
  uniform_colortex2 = UniformColortex2
  uniform_colortex3 = UniformColortex3
  uniform_colortex4 = UniformColortex4
  uniform_colortex5 = UniformColortex5
  uniform_colortex6 = UniformColortex6
  uniform_colortex7 = UniformColortex7
  uniform_colortex8 = UniformColortex8
  uniform_colortex9 = UniformColortex9
  uniform_composite = UniformComposite
  uniform_darknessFactor = UniformDarknessFactor
  uniform_darknessLightFactor = UniformDarknessLightFactor
  uniform_depthtex0 = UniformDepthtex0
  uniform_depthtex1 = UniformDepthtex1
  uniform_depthtex2 = UniformDepthtex2
  uniform_entityColor = UniformEntityColor
  uniform_entityId = UniformEntityId
  uniform_eyeAltitude = UniformEyeAltitude
  uniform_eyeBrightness = UniformEyeBrightness
  uniform_eyeBrightnessSmooth = UniformEyeBrightnessSmooth
  uniform_far = UniformFar
  uniform_fogColor = UniformFogColor
  uniform_fogDensity = UniformFogDensity
  uniform_fogEnd = UniformFogEnd
  uniform_fogMode = UniformFogMode
  uniform_fogShape = UniformFogShape
  uniform_fogStart = UniformFogStart
  uniform_frameCounter = UniformFrameCounter
  uniform_frameTime = UniformFrameTime
  uniform_frameTimeCounter = UniformFrameTimeCounter
  uniform_gaux1 = UniformGaux1
  uniform_gaux2 = UniformGaux2
  uniform_gaux3 = UniformGaux3
  uniform_gaux4 = UniformGaux4
  uniform_gbufferModelView = UniformGbufferModelView
  uniform_gbufferModelViewInverse = UniformGbufferModelViewInverse
  uniform_gbufferPreviousModelView = UniformGbufferPreviousModelView
  uniform_gbufferPreviousProjection = UniformGbufferPreviousProjection
  uniform_gbufferProjection = UniformGbufferProjection
  uniform_gbufferProjectionInverse = UniformGbufferProjectionInverse
  uniform_gcolor = UniformGcolor
  uniform_gdepth = UniformGdepth
  uniform_gdepthtex = UniformGdepthtex
  uniform_gnormal = UniformGnormal
  uniform_gtexture = UniformGtexture
  uniform_heldBlockLightValue = UniformHeldBlockLightValue
  uniform_heldBlockLightValue2 = UniformHeldBlockLightValue2
  uniform_heldItemId = UniformHeldItemId
  uniform_heldItemId2 = UniformHeldItemId2
  uniform_hideGUI = UniformHideGUI
  uniform_instanceId = UniformInstanceId
  uniform_isEyeInWater = UniformIsEyeInWater
  uniform_lightmap = UniformLightmap
  uniform_modelViewMatrix = UniformModelViewMatrix
  uniform_modelViewMatrixInverse = UniformModelViewMatrixInverse
  uniform_moonPhase = UniformMoonPhase
  uniform_moonPosition = UniformMoonPosition
  uniform_near = UniformNear
  uniform_nightVision = UniformNightVision
  uniform_noisetex = UniformNoisetex
  uniform_normalMatrix = UniformNormalMatrix
  uniform_normals = UniformNormals
  uniform_playerMood = UniformPlayerMood
  uniform_previousCameraPosition = UniformPreviousCameraPosition
  uniform_projectionMatrix = UniformProjectionMatrix
  uniform_projectionMatrixInverse = UniformProjectionMatrixInverse
  uniform_rainStrength = UniformRainStrength
  uniform_renderStage = UniformRenderStage
  uniform_screenBrightness = UniformScreenBrightness
  uniform_shadow = UniformShadow
  uniform_shadowAngle = UniformShadowAngle
  uniform_shadowcolor = UniformShadowcolor
  uniform_shadowcolor0 = UniformShadowcolor0
  uniform_shadowcolor1 = UniformShadowcolor1
  uniform_shadowcolorimg0 = UniformShadowcolorimg0
  uniform_shadowcolorimg1 = UniformShadowcolorimg1
  uniform_shadowLightPosition = UniformShadowLightPosition
  uniform_shadowModelView = UniformShadowModelView
  uniform_shadowModelViewInverse = UniformShadowModelViewInverse
  uniform_shadowProjection = UniformShadowProjection
  uniform_shadowProjectionInverse = UniformShadowProjectionInverse
  uniform_shadowtex0 = UniformShadowtex0
  uniform_shadowtex1 = UniformShadowtex1
  uniform_skyColor = UniformSkyColor
  uniform_specular = UniformSpecular
  uniform_spriteBounds = UniformSpriteBounds
  uniform_sunAngle = UniformSunAngle
  uniform_sunPosition = UniformSunPosition
  uniform_terrainIconSize = UniformTerrainIconSize
  uniform_terrainTextureSize = UniformTerrainTextureSize
  uniform_tex = UniformTex
  uniform_textureMatrix = UniformTextureMatrix
  uniform_upPosition = UniformUpPosition
  uniform_viewHeight = UniformViewHeight
  uniform_viewWidth = UniformViewWidth
  uniform_watershadow = UniformWatershadow
  uniform_wetness = UniformWetness
  uniform_worldDay = UniformWorldDay
  uniform_worldTime = UniformWorldTime
  useEntityAttrib = UseEntityAttrib
  useMidBlockAttrib = UseMidBlockAttrib
  useMidTexCoordAttrib = UseMidTexCoordAttrib
  useTangentAttrib = UseTangentAttrib
  useVelocityAttrib = UseVelocityAttrib
  velocityAttrib = VelocityAttrib
  wetnessHalfLife = WetnessHalfLife
  getEntityData()I = EntityData
  getEntityData2()I = EntityData2
  isBeaconBeamDepth()Z = IsBeaconBeamDepth
  isBothHandsRendered()Z = IsBothHandsRendered
  isCustomUniforms()Z = IsCustomUniforms
  isDynamicHandLight()Z = IsDynamicHandLight
  isEffectsModelView()Z = IsEffectsModelView
  isFrustumCulling()Z = IsFrustumCulling
  isHandRenderedMain()Z = IsHandRenderedMain
  isHandRenderedOff()Z = IsHandRenderedOff
  isItemToRenderMainTranslucent()Z = IsItemToRenderMainTranslucent
  isItemToRenderOffTranslucent()Z = IsItemToRenderOffTranslucent
  isMoon()Z = IsMoon
  isOldHandLight()Z = IsOldHandLight
  isOldLighting()Z = IsOldLighting
  isOverlayDisabled()Z = IsOverlayDisabled
  isParticlesBeforeDeferred()Z = IsParticlesBeforeDeferred
  isRainDepth()Z = IsRainDepth
  isRemapLightmap()Z = IsRemapLightmap
  isRenderBothHands()Z = IsRenderBothHands
  isRenderingFirstPersonHand()Z = IsRenderingFirstPersonHand
  isRenderShadowBlockEntities()Z = IsRenderShadowBlockEntities
  isRenderShadowEntities()Z = IsRenderShadowEntities
  isRenderShadowTerrain()Z = IsRenderShadowTerrain
  isRenderShadowTranslucent()Z = IsRenderShadowTranslucent
  isSeparateAo()Z = IsSeparateAo
  isShadowCulling()Z = IsShadowCulling
  isSun()Z = IsSun
  isUnderwaterOverlay()Z = IsUnderwaterOverlay
  isVignette()Z = IsVignette
  getShaderPack()Lnet/optifine/shaders/IShaderPack; = ShaderPack
  getShaderPackName()Ljava/lang/String; = ShaderPackName
  getShadowRenderDistance()F = ShadowRenderDistance
  beginBeacon()V = BeginBeacon()
  beginBlockEntities()V = BeginBlockEntities()
  beginClouds()V = BeginClouds()
  beginEntities()V = BeginEntities()
  beginFPOverlay()V = BeginFPOverlay()
  beginHand(Z)V = BeginHand(bool)
  beginLeash()V = BeginLeash()
  beginLines()V = BeginLines()
  beginLitParticles()V = BeginLitParticles()
  beginLivingDamage()V = BeginLivingDamage()
  beginParticles()V = BeginParticles()
  beginRenderFirstPersonHand(Z)V = BeginRenderFirstPersonHand(bool)
  beginRenderPass(F)V = BeginRenderPass(float)
  beginSky()V = BeginSky()
  beginSpiderEyes()V = BeginSpiderEyes()
  beginUpdateChunks()V = BeginUpdateChunks()
  beginWater()V = BeginWater()
  beginWaterMask()V = BeginWaterMask()
  beginWeather()V = BeginWeather()
  canRenderQuads()Z = CanRenderQuads()
  checkFramebufferStatus(Ljava/lang/String;)I = CheckFramebufferStatus(string)
  checkGLError(Ljava/lang/String;)I = CheckGLError(string)
  checkShadersModInstalled()V = CheckShadersModInstalled()
  clearRenderBuffer()V = ClearRenderBuffer()
  disableFog()V = DisableFog()
  disableLightmap()V = DisableLightmap()
  disableTexture2D()V = DisableTexture2D()
  dispatchCompute(Lnet/optifine/shaders/ComputeProgram;)V = DispatchCompute(Net.Optifine.Shaders.ComputeProgram)
  dispatchComputes(Lnet/optifine/shaders/ShadersFramebuffer;[Lnet/optifine/shaders/ComputeProgram;)V = DispatchComputes(Net.Optifine.Shaders.ShadersFramebuffer, Net.Optifine.Shaders.ComputeProgram[])
  drawComposite()V = DrawComposite()
  enableFog()V = EnableFog()
  enableLightmap()V = EnableLightmap()
  enableTexture2D()V = EnableTexture2D()
  endBeacon()V = EndBeacon()
  endBlockEntities()V = EndBlockEntities()
  endClouds()V = EndClouds()
  endEntities()V = EndEntities()
  endFPOverlay()V = EndFPOverlay()
  endHand()V = EndHand()
  endLeash()V = EndLeash()
  endLines()V = EndLines()
  endLivingDamage()V = EndLivingDamage()
  endParticles()V = EndParticles()
  endRender()V = EndRender()
  endRenderFirstPersonHand()V = EndRenderFirstPersonHand()
  endSky()V = EndSky()
  endSpiderEyes()V = EndSpiderEyes()
  endUpdateChunks()V = EndUpdateChunks()
  endWater()V = EndWater()
  endWaterMask()V = EndWaterMask()
  endWeather()V = EndWeather()
  flushRenderBuffers()V = FlushRenderBuffers()
  getBufferIndex(Ljava/lang/String;)I = GetBufferIndex(string)
  getChangedOptions([Lnet/optifine/shaders/config/ShaderOption;)[Lnet/optifine/shaders/config/ShaderOption; = GetChangedOptions(Net.Optifine.Shaders.Config.ShaderOption[])
  getEnumShaderOption(Lnet/optifine/shaders/config/EnumShaderOption;)Ljava/lang/String; = GetEnumShaderOption(Net.Optifine.Shaders.Config.EnumShaderOption)
  getImageFormat(I)I = GetImageFormat(int)
  getPixelFormat(I)I = GetPixelFormat(int)
  getProgram(Ljava/lang/String;)Lnet/optifine/shaders/Program; = GetProgram(string)
  getShaderOption(Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderOption; = GetShaderOption(string)
  getShaderPack(Ljava/lang/String;)Lnet/optifine/shaders/IShaderPack; = GetShaderPack(string)
  getShaderPackColumns(Ljava/lang/String;I)I = GetShaderPackColumns(string, int)
  getShaderPackOptions()[Lnet/optifine/shaders/config/ShaderOption; = GetShaderPackOptions()
  getShaderPackOptions(Ljava/lang/String;)[Lnet/optifine/shaders/config/ShaderOption; = GetShaderPackOptions(string)
  getShaderPackResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetShaderPackResourceStream(string)
  glDisableWrapper(I)V = GlDisableWrapper(int)
  glEnableWrapper(I)V = GlEnableWrapper(int)
  init()V = Init()
  isProgramPath(Ljava/lang/String;)Z = IsProgramPath(string)
  isShaderPackOptionSlider(Ljava/lang/String;)Z = IsShaderPackOptionSlider(string)
  isTerrain(Lnet/optifine/shaders/Program;)Z = IsTerrain(Net.Optifine.Shaders.Program)
  listOfShaders()Ljava/util/ArrayList; = ListOfShaders()
  loadConfig()V = LoadConfig()
  loadShaderPack()V = LoadShaderPack()
  mcProfilerEndSection()V = McProfilerEndSection()
  nextAntialiasingLevel(Z)V = NextAntialiasingLevel(bool)
  nextIntBuffer(I)Ljava/nio/IntBuffer; = NextIntBuffer(int)
  popEntity()V = PopEntity()
  popProgram()V = PopProgram()
  preRenderHand()V = PreRenderHand()
  preWater()V = PreWater()
  printChatAndLogError(Ljava/lang/String;)V = PrintChatAndLogError(string)
  printIntBuffer(Ljava/lang/String;Ljava/nio/IntBuffer;)V = PrintIntBuffer(string, Java.Nio.IntBuffer)
  pushEntity(I)V = PushEntity(int)
  pushEntity(II)V = PushEntity(int, int)
  pushProgram()V = PushProgram()
  pushUseProgram(Lnet/optifine/shaders/Program;)V = PushUseProgram(Net.Optifine.Shaders.Program)
  readCenterDepth()V = ReadCenterDepth()
  renderCompositeFinal()V = RenderCompositeFinal()
  renderDeferred()V = RenderDeferred()
  renderPrepare()V = RenderPrepare()
  renderPrepareComposites()V = RenderPrepareComposites()
  renderShadowComposites()V = RenderShadowComposites()
  resetDisplayLists()V = ResetDisplayLists()
  resourcesReloaded()V = ResourcesReloaded()
  saveShader(Ljava/lang/String;Ljava/lang/String;)V = SaveShader(string, string)
  saveShaderPackOptions()V = SaveShaderPackOptions()
  scheduleResize()V = ScheduleResize()
  scheduleResizeShadow()V = ScheduleResizeShadow()
  setClearColor(FFFF)V = SetClearColor(float, float, float, float)
  setColorModulator([F)V = SetColorModulator(float[])
  setDarknessFactor(F)V = SetDarknessFactor(float)
  setDarknessLightFactor(F)V = SetDarknessLightFactor(float)
  setDefaultAttribColor()V = SetDefaultAttribColor()
  setDefaultAttribColor(FFFF)V = SetDefaultAttribColor(float, float, float, float)
  setEntityColor(FFFF)V = SetEntityColor(float, float, float, float)
  setEntityData1(I)I = SetEntityData1(int)
  setEntityData2(I)I = SetEntityData2(int)
  setFogAllowed(Z)V = SetFogAllowed(bool)
  setFogColor(FFF)V = SetFogColor(float, float, float)
  setFogDensity(F)V = SetFogDensity(float)
  setFogEnd(F)V = SetFogEnd(float)
  setFogMode(I)V = SetFogMode(int)
  setFogShape(I)V = SetFogShape(int)
  setFogStart(F)V = SetFogStart(float)
  setHandsRendered(ZZ)V = SetHandsRendered(bool, bool)
  setRenderStage(Lnet/optifine/shaders/RenderStage;)V = SetRenderStage(Net.Optifine.Shaders.RenderStage)
  setShaderPack(Ljava/lang/String;)V = SetShaderPack(string)
  setSkipRenderHands(ZZ)V = SetSkipRenderHands(bool, bool)
  setViewport(IIII)V = SetViewport(int, int, int, int)
  sglDisableFog(I)V = SglDisableFog(int)
  sglDisableT2D(I)V = SglDisableT2D(int)
  sglEnableFog(I)V = SglEnableFog(int)
  sglEnableT2D(I)V = SglEnableT2D(int)
  sglFogi(II)V = SglFogi(int, int)
  storeConfig()V = StoreConfig()
  translate(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = Translate(string, string)
  uninit()V = Uninit()
  updateBlockLightLevel()V = UpdateBlockLightLevel()
  updateProjectionMatrix()V = UpdateProjectionMatrix()
  useComputeProgram(Lnet/optifine/shaders/ComputeProgram;)V = UseComputeProgram(Net.Optifine.Shaders.ComputeProgram)
  useProgram(Lnet/optifine/shaders/Program;)V = UseProgram(Net.Optifine.Shaders.Program)
net/optifine/shaders/ShadersCompatibility = Net.Optifine.Shaders.ShadersCompatibility
  <init>()V = .ctor()
  ALPHA_TEST_REF = AlphaTestRef
  CHUNK_OFFSET = ChunkOffset
  COLOR = Color
  FOG_COLOR = FogColor
  FOG_DENSITY = FogDensity
  FOG_END = FogEnd
  FOG_FRAG_COORD_IN = FogFragCoordIn
  FOG_FRAG_COORD_OUT = FogFragCoordOut
  FOG_START = FogStart
  FRONT_COLOR_IN = FrontColorIn
  FRONT_COLOR_OUT = FrontColorOut
  FTRANSORM_BASIC = FtransormBasic
  MODEL_VIEW_MATRIX = ModelViewMatrix
  MODEL_VIEW_MATRIX_INVERSE = ModelViewMatrixInverse
  NORMAL = Normal
  NORMAL_MATRIX = NormalMatrix
  PATTERN_CONST = PatternConst
  PATTERN_EXTENSION = PatternExtension
  PATTERN_FUNCTION = PatternFunction
  PATTERN_IN = PatternIn
  PATTERN_LINE = PatternLine
  PATTERN_OUT = PatternOut
  PATTERN_UNIFORM = PatternUniform
  PATTERN_VARYING = PatternVarying
  POSITION = Position
  PROJECTION_MATRIX = ProjectionMatrix
  PROJECTION_MATRIX_INVERSE = ProjectionMatrixInverse
  RENDER_STAGE = RenderStage
  TEXTURE_MATRIX = TextureMatrix
  TEXTURE_MATRIX_2 = TextureMatrix2
  UV0 = Uv0
  UV1 = Uv1
  UV2 = Uv2
  VIEW_HEIGHT = ViewHeight
  VIEW_WIDTH = ViewWidth
  remap(Lnet/optifine/shaders/Program;Lnet/optifine/shaders/config/ShaderType;Lnet/optifine/util/LineBuffer;)Lnet/optifine/util/LineBuffer; = Remap(Net.Optifine.Shaders.Program, Net.Optifine.Shaders.Config.ShaderType, Net.Optifine.Util.LineBuffer)
net/optifine/shaders/ShadersCompatibility = Net.Optifine.Shaders.ShadersCompatibility
  <init>()V = .ctor()
  ALPHA_TEST_REF = AlphaTestRef
  CHUNK_OFFSET = ChunkOffset
  COLOR = Color
  FOG_COLOR = FogColor
  FOG_DENSITY = FogDensity
  FOG_END = FogEnd
  FOG_FRAG_COORD_IN = FogFragCoordIn
  FOG_FRAG_COORD_OUT = FogFragCoordOut
  FOG_START = FogStart
  FRONT_COLOR_IN = FrontColorIn
  FRONT_COLOR_OUT = FrontColorOut
  FTRANSORM_BASIC = FtransormBasic
  MODEL_VIEW_MATRIX = ModelViewMatrix
  MODEL_VIEW_MATRIX_INVERSE = ModelViewMatrixInverse
  NORMAL = Normal
  NORMAL_MATRIX = NormalMatrix
  PATTERN_CONST = PatternConst
  PATTERN_EXTENSION = PatternExtension
  PATTERN_FUNCTION = PatternFunction
  PATTERN_IN = PatternIn
  PATTERN_LINE = PatternLine
  PATTERN_OUT = PatternOut
  PATTERN_UNIFORM = PatternUniform
  PATTERN_VARYING = PatternVarying
  POSITION = Position
  PROJECTION_MATRIX = ProjectionMatrix
  PROJECTION_MATRIX_INVERSE = ProjectionMatrixInverse
  RENDER_STAGE = RenderStage
  TEXTURE_MATRIX = TextureMatrix
  TEXTURE_MATRIX_2 = TextureMatrix2
  UV0 = Uv0
  UV1 = Uv1
  UV2 = Uv2
  VIEW_HEIGHT = ViewHeight
  VIEW_WIDTH = ViewWidth
  remap(Lnet/optifine/shaders/Program;Lnet/optifine/shaders/config/ShaderType;Lnet/optifine/util/LineBuffer;)Lnet/optifine/util/LineBuffer; = Remap(Net.Optifine.Shaders.Program, Net.Optifine.Shaders.Config.ShaderType, Net.Optifine.Util.LineBuffer)
net/optifine/shaders/ShadersFramebuffer = Net.Optifine.Shaders.ShadersFramebuffer
  <init>(Ljava/lang/String;IIIII[Z[Z[Z[Lnet/optifine/util/DynamicDimension;[I[I[I[ILnet/optifine/shaders/DrawBuffers;)V = .ctor(string, int, int, int, int, int, bool[], bool[], bool[], Net.Optifine.Util.DynamicDimension[], int[], int[], int[], int[], Net.Optifine.Shaders.DrawBuffers)
  getDrawBuffers()Lnet/optifine/shaders/DrawBuffers; = DrawBuffers
  setDrawBuffers(Lnet/optifine/shaders/DrawBuffers;)V = DrawBuffers
  getGlFramebuffer()I = GlFramebuffer
  getHeight()I = Height
  getName()Ljava/lang/String; = Name
  getWidth()I = Width
  bindColorImage(IZ)V = BindColorImage(int, bool)
  bindColorImages(Z)V = BindColorImages(bool)
  bindColorTextures(I)V = BindColorTextures(int)
  bindDepthTextures([I)V = BindDepthTextures(int[])
  bindFramebuffer()V = BindFramebuffer()
  delete()V = Delete()
  exists()Z = Exists()
  flipColorTexture(I)V = FlipColorTexture(int)
  flipColorTextures([Z)V = FlipColorTextures(bool[])
  genCompositeMipmap(I)V = GenCompositeMipmap(int)
  generateColorMipmaps(Z[Z)V = GenerateColorMipmaps(bool, bool[])
  generateDepthMipmaps([Z)V = GenerateDepthMipmaps(bool[])
  getFixedFramebuffer(IILnet/optifine/shaders/DrawBuffers;Z)Lnet/optifine/shaders/FixedFramebuffer; = GetFixedFramebuffer(int, int, Net.Optifine.Shaders.DrawBuffers, bool)
  isColorBufferIndex(I)Z = IsColorBufferIndex(int)
  isColorExtendedIndex(I)Z = IsColorExtendedIndex(int)
  isDrawBufferIndex(I)Z = IsDrawBufferIndex(int)
  setColorBuffersFiltering(II)V = SetColorBuffersFiltering(int, int)
  setColorTextures(Z)V = SetColorTextures(bool)
  setDepthTexture()V = SetDepthTexture()
  setDrawBuffers()V = SetDrawBuffers()
  setFramebufferTexture2D(IIIII)V = SetFramebufferTexture2D(int, int, int, int, int)
  setup()V = Setup()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/ShadersFramebuffer = Net.Optifine.Shaders.ShadersFramebuffer
  <init>(Ljava/lang/String;IIIII[Z[Z[Z[Lnet/optifine/util/DynamicDimension;[I[I[I[ILnet/optifine/shaders/DrawBuffers;)V = .ctor(string, int, int, int, int, int, bool[], bool[], bool[], Net.Optifine.Util.DynamicDimension[], int[], int[], int[], int[], Net.Optifine.Shaders.DrawBuffers)
  getDrawBuffers()Lnet/optifine/shaders/DrawBuffers; = DrawBuffers
  setDrawBuffers(Lnet/optifine/shaders/DrawBuffers;)V = DrawBuffers
  getGlFramebuffer()I = GlFramebuffer
  getHeight()I = Height
  getName()Ljava/lang/String; = Name
  getWidth()I = Width
  bindColorImage(IZ)V = BindColorImage(int, bool)
  bindColorImages(Z)V = BindColorImages(bool)
  bindColorTextures(I)V = BindColorTextures(int)
  bindDepthTextures([I)V = BindDepthTextures(int[])
  bindFramebuffer()V = BindFramebuffer()
  delete()V = Delete()
  exists()Z = Exists()
  flipColorTexture(I)V = FlipColorTexture(int)
  flipColorTextures([Z)V = FlipColorTextures(bool[])
  genCompositeMipmap(I)V = GenCompositeMipmap(int)
  generateColorMipmaps(Z[Z)V = GenerateColorMipmaps(bool, bool[])
  generateDepthMipmaps([Z)V = GenerateDepthMipmaps(bool[])
  getFixedFramebuffer(IILnet/optifine/shaders/DrawBuffers;Z)Lnet/optifine/shaders/FixedFramebuffer; = GetFixedFramebuffer(int, int, Net.Optifine.Shaders.DrawBuffers, bool)
  isColorBufferIndex(I)Z = IsColorBufferIndex(int)
  isColorExtendedIndex(I)Z = IsColorExtendedIndex(int)
  isDrawBufferIndex(I)Z = IsDrawBufferIndex(int)
  setColorBuffersFiltering(II)V = SetColorBuffersFiltering(int, int)
  setColorTextures(Z)V = SetColorTextures(bool)
  setDepthTexture()V = SetDepthTexture()
  setDrawBuffers()V = SetDrawBuffers()
  setFramebufferTexture2D(IIIII)V = SetFramebufferTexture2D(int, int, int, int, int)
  setup()V = Setup()
net/optifine/shaders/ShadersRender = Net.Optifine.Shaders.ShadersRender
  <init>()V = .ctor()
  countEntitiesRenderedShadow = CountEntitiesRenderedShadow
  countTileEntitiesRenderedShadow = CountTileEntitiesRenderedShadow
  frustumEntitiesShadowChanged = FrustumEntitiesShadowChanged
  frustumTerrainShadowChanged = FrustumTerrainShadowChanged
  beaconBeamBegin()V = BeaconBeamBegin()
  beaconBeamDraw1()V = BeaconBeamDraw1()
  beaconBeamDraw2()V = BeaconBeamDraw2()
  beaconBeamStartQuad1()V = BeaconBeamStartQuad1()
  beaconBeamStartQuad2()V = BeaconBeamStartQuad2()
  beginBlockDamage()V = BeginBlockDamage()
  beginDebug()V = BeginDebug()
  beginOutline()V = BeginOutline()
  beginTerrainCutout()V = BeginTerrainCutout()
  beginTerrainCutoutMipped()V = BeginTerrainCutoutMipped()
  beginTerrainSolid()V = BeginTerrainSolid()
  beginTranslucent()V = BeginTranslucent()
  beginTripwire()V = BeginTripwire()
  enableArrayPointerVbo()V = EnableArrayPointerVbo()
  endBlockDamage()V = EndBlockDamage()
  endDebug()V = EndDebug()
  endOutline()V = EndOutline()
  endTerrain()V = EndTerrain()
  endTranslucent()V = EndTranslucent()
  endTripwire()V = EndTripwire()
  renderEnchantedGlintBegin()V = RenderEnchantedGlintBegin()
  renderEnchantedGlintEnd()V = RenderEnchantedGlintEnd()
  setFrustrumPosition(Lnet/optifine/render/ICamera;DDD)V = SetFrustrumPosition(Net.Optifine.Render.ICamera, double, double, double)
  setupArrayPointersVbo()V = SetupArrayPointersVbo()
net/optifine/shaders/ShadersRender = Net.Optifine.Shaders.ShadersRender
  <init>()V = .ctor()
  countEntitiesRenderedShadow = CountEntitiesRenderedShadow
  countTileEntitiesRenderedShadow = CountTileEntitiesRenderedShadow
  frustumEntitiesShadowChanged = FrustumEntitiesShadowChanged
  frustumTerrainShadowChanged = FrustumTerrainShadowChanged
  beaconBeamBegin()V = BeaconBeamBegin()
  beaconBeamDraw1()V = BeaconBeamDraw1()
  beaconBeamDraw2()V = BeaconBeamDraw2()
  beaconBeamStartQuad1()V = BeaconBeamStartQuad1()
  beaconBeamStartQuad2()V = BeaconBeamStartQuad2()
  beginBlockDamage()V = BeginBlockDamage()
  beginDebug()V = BeginDebug()
  beginOutline()V = BeginOutline()
  beginTerrainCutout()V = BeginTerrainCutout()
  beginTerrainCutoutMipped()V = BeginTerrainCutoutMipped()
  beginTerrainSolid()V = BeginTerrainSolid()
  beginTranslucent()V = BeginTranslucent()
  beginTripwire()V = BeginTripwire()
  enableArrayPointerVbo()V = EnableArrayPointerVbo()
  endBlockDamage()V = EndBlockDamage()
  endDebug()V = EndDebug()
  endOutline()V = EndOutline()
  endTerrain()V = EndTerrain()
  endTranslucent()V = EndTranslucent()
  endTripwire()V = EndTripwire()
  renderEnchantedGlintBegin()V = RenderEnchantedGlintBegin()
  renderEnchantedGlintEnd()V = RenderEnchantedGlintEnd()
  setFrustrumPosition(Lnet/optifine/render/ICamera;DDD)V = SetFrustrumPosition(Net.Optifine.Render.ICamera, double, double, double)
  setupArrayPointersVbo()V = SetupArrayPointersVbo()
net/optifine/shaders/ShadersTex = Net.Optifine.Shaders.ShadersTex
  <init>()V = .ctor()
  byteBuffer = ByteBuffer
  defBaseTexColor = DefBaseTexColor
  defNormTexColor = DefNormTexColor
  defSpecTexColor = DefSpecTexColor
  initialBufferSize = InitialBufferSize
  intArray = IntArray
  intBuffer = IntBuffer
  multiTexMap = MultiTexMap
  bindNSTextures(IIZZZ)V = BindNSTextures(int, int, bool, bool, bool)
  bindNSTextures(Lnet/optifine/shaders/MultiTexID;)V = BindNSTextures(Net.Optifine.Shaders.MultiTexID)
  bindTexture(I)V = BindTexture(int)
  bindTextures(I)V = BindTextures(int)
  bindTextures(III)V = BindTextures(int, int, int)
  bindTextures(Lnet/optifine/shaders/MultiTexID;ZZZ)V = BindTextures(Net.Optifine.Shaders.MultiTexID, bool, bool, bool)
  blend4Alpha(IIII)I = Blend4Alpha(int, int, int, int)
  blend4Simple(IIII)I = Blend4Simple(int, int, int, int)
  blendColor(III)I = BlendColor(int, int, int)
  createAIntImage(I)[I = CreateAIntImage(int)
  createAIntImage(II)[I = CreateAIntImage(int, int)
  fillIntBuffer(II)Ljava/nio/IntBuffer; = FillIntBuffer(int, int)
  genMipmapAlpha([IIII)V = GenMipmapAlpha(int[], int, int, int)
  genMipmapSimple([IIII)V = GenMipmapSimple(int[], int, int, int)
  genMipmapsSimple(II[[I)[[I = GenMipmapsSimple(int, int, int[][])
  getFrameTexData([[IIII)[[I = GetFrameTexData(int[][], int, int, int)
  getIntArray(I)[I = GetIntArray(int)
  getIntBuffer(I)Ljava/nio/IntBuffer; = GetIntBuffer(int)
  isSemiTransparent([III)Z = IsSemiTransparent(int[], int, int)
  log2(I)I = Log2(int)
  mergeImage([IIII)V = MergeImage(int[], int, int, int)
  roundUpPOT(I)I = RoundUpPOT(int)
  updateDynTexSubImage1([IIIIII)V = UpdateDynTexSubImage1(int[], int, int, int, int, int)
  updateSubImage(Lnet/optifine/shaders/MultiTexID;[IIIIIZZ)V = UpdateSubImage(Net.Optifine.Shaders.MultiTexID, int[], int, int, int, int, bool, bool)
  updateSubTex1([IIIII)V = UpdateSubTex1(int[], int, int, int, int)
  updateTextureMinMagFilter()V = UpdateTextureMinMagFilter()
  uploadTexSub1([[IIIIII)V = UploadTexSub1(int[][], int, int, int, int, int)
net/optifine/shaders/ShadersTex = Net.Optifine.Shaders.ShadersTex
  <init>()V = .ctor()
  byteBuffer = ByteBuffer
  defBaseTexColor = DefBaseTexColor
  defNormTexColor = DefNormTexColor
  defSpecTexColor = DefSpecTexColor
  initialBufferSize = InitialBufferSize
  intArray = IntArray
  intBuffer = IntBuffer
  multiTexMap = MultiTexMap
  bindNSTextures(IIZZZ)V = BindNSTextures(int, int, bool, bool, bool)
  bindNSTextures(Lnet/optifine/shaders/MultiTexID;)V = BindNSTextures(Net.Optifine.Shaders.MultiTexID)
  bindTexture(I)V = BindTexture(int)
  bindTextures(I)V = BindTextures(int)
  bindTextures(III)V = BindTextures(int, int, int)
  bindTextures(Lnet/optifine/shaders/MultiTexID;ZZZ)V = BindTextures(Net.Optifine.Shaders.MultiTexID, bool, bool, bool)
  blend4Alpha(IIII)I = Blend4Alpha(int, int, int, int)
  blend4Simple(IIII)I = Blend4Simple(int, int, int, int)
  blendColor(III)I = BlendColor(int, int, int)
  createAIntImage(I)[I = CreateAIntImage(int)
  createAIntImage(II)[I = CreateAIntImage(int, int)
  fillIntBuffer(II)Ljava/nio/IntBuffer; = FillIntBuffer(int, int)
  genMipmapAlpha([IIII)V = GenMipmapAlpha(int[], int, int, int)
  genMipmapSimple([IIII)V = GenMipmapSimple(int[], int, int, int)
  genMipmapsSimple(II[[I)[[I = GenMipmapsSimple(int, int, int[][])
  getFrameTexData([[IIII)[[I = GetFrameTexData(int[][], int, int, int)
  getIntArray(I)[I = GetIntArray(int)
  getIntBuffer(I)Ljava/nio/IntBuffer; = GetIntBuffer(int)
  isSemiTransparent([III)Z = IsSemiTransparent(int[], int, int)
  log2(I)I = Log2(int)
  mergeImage([IIII)V = MergeImage(int[], int, int, int)
  roundUpPOT(I)I = RoundUpPOT(int)
  updateDynTexSubImage1([IIIIII)V = UpdateDynTexSubImage1(int[], int, int, int, int, int)
  updateSubImage(Lnet/optifine/shaders/MultiTexID;[IIIIIZZ)V = UpdateSubImage(Net.Optifine.Shaders.MultiTexID, int[], int, int, int, int, bool, bool)
  updateSubTex1([IIIII)V = UpdateSubTex1(int[], int, int, int, int)
  updateTextureMinMagFilter()V = UpdateTextureMinMagFilter()
  uploadTexSub1([[IIIIII)V = UploadTexSub1(int[][], int, int, int, int, int)
net/optifine/shaders/ShadersTextureType = Net.Optifine.Shaders.ShadersTextureType
  NORMAL = Normal
  SPECULAR = Specular
  getSuffix()Ljava/lang/String; = Suffix
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/ShadersTextureType; = ValueOf(string)
  values()[Lnet/optifine/shaders/ShadersTextureType; = Values()
net/optifine/shaders/ShadersTextureType = Net.Optifine.Shaders.ShadersTextureType
  NORMAL = Normal
  SPECULAR = Specular
  getSuffix()Ljava/lang/String; = Suffix
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/ShadersTextureType; = ValueOf(string)
  values()[Lnet/optifine/shaders/ShadersTextureType; = Values()
net/optifine/shaders/ShaderUtils = Net.Optifine.Shaders.ShaderUtils
  <init>()V = .ctor()
  detectProfile([Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Lnet/optifine/shaders/config/ShaderProfile; = DetectProfile(Net.Optifine.Shaders.Config.ShaderProfile[], Net.Optifine.Shaders.Config.ShaderOption[], bool)
  getShaderOption(Ljava/lang/String;[Lnet/optifine/shaders/config/ShaderOption;)Lnet/optifine/shaders/config/ShaderOption; = GetShaderOption(string, Net.Optifine.Shaders.Config.ShaderOption[])
  matchProfile(Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Z = MatchProfile(Net.Optifine.Shaders.Config.ShaderProfile, Net.Optifine.Shaders.Config.ShaderOption[], bool)
net/optifine/shaders/ShaderUtils = Net.Optifine.Shaders.ShaderUtils
  <init>()V = .ctor()
  detectProfile([Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Lnet/optifine/shaders/config/ShaderProfile; = DetectProfile(Net.Optifine.Shaders.Config.ShaderProfile[], Net.Optifine.Shaders.Config.ShaderOption[], bool)
  getShaderOption(Ljava/lang/String;[Lnet/optifine/shaders/config/ShaderOption;)Lnet/optifine/shaders/config/ShaderOption; = GetShaderOption(string, Net.Optifine.Shaders.Config.ShaderOption[])
  matchProfile(Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Z = MatchProfile(Net.Optifine.Shaders.Config.ShaderProfile, Net.Optifine.Shaders.Config.ShaderOption[], bool)
net/optifine/shaders/ShadowUtils = Net.Optifine.Shaders.ShadowUtils
  <init>()V = .ctor()
net/optifine/shaders/ShadowUtils = Net.Optifine.Shaders.ShadowUtils
  <init>()V = .ctor()
net/optifine/shaders/SMath = Net.Optifine.Shaders.SMath
  <init>()V = .ctor()
net/optifine/shaders/SMath = Net.Optifine.Shaders.SMath
  <init>()V = .ctor()
net/optifine/shaders/SMCLog = Net.Optifine.Shaders.SMCLog
  <init>()V = .ctor()
  fine(Ljava/lang/String;)V = Fine(string)
  fine(Ljava/lang/String;[Ljava/lang/Object;)V = Fine(string, params Java.Lang.Object[])
  info(Ljava/lang/String;)V = Info(string)
  info(Ljava/lang/String;[Ljava/lang/Object;)V = Info(string, params Java.Lang.Object[])
  severe(Ljava/lang/String;)V = Severe(string)
  severe(Ljava/lang/String;[Ljava/lang/Object;)V = Severe(string, params Java.Lang.Object[])
  warning(Ljava/lang/String;)V = Warning(string)
  warning(Ljava/lang/String;[Ljava/lang/Object;)V = Warning(string, params Java.Lang.Object[])
net/optifine/shaders/SMCLog = Net.Optifine.Shaders.SMCLog
  <init>()V = .ctor()
  fine(Ljava/lang/String;)V = Fine(string)
  fine(Ljava/lang/String;[Ljava/lang/Object;)V = Fine(string, params Java.Lang.Object[])
  info(Ljava/lang/String;)V = Info(string)
  info(Ljava/lang/String;[Ljava/lang/Object;)V = Info(string, params Java.Lang.Object[])
  severe(Ljava/lang/String;)V = Severe(string)
  severe(Ljava/lang/String;[Ljava/lang/Object;)V = Severe(string, params Java.Lang.Object[])
  warning(Ljava/lang/String;)V = Warning(string)
  warning(Ljava/lang/String;[Ljava/lang/Object;)V = Warning(string, params Java.Lang.Object[])
net/optifine/shaders/SVertexAttrib = Net.Optifine.Shaders.SVertexAttrib
  count = Count
  index = Index
  offset = Offset
net/optifine/shaders/SVertexAttrib = Net.Optifine.Shaders.SVertexAttrib
  count = Count
  index = Index
  offset = Offset
net/optifine/shaders/SVertexBuilder = Net.Optifine.Shaders.SVertexBuilder
  <init>()V = .ctor()
  popEntity()V = PopEntity()
  postDrawArrays()V = PostDrawArrays()
  pushEntity(J)V = PushEntity(long)
  setMidBlock(Ljava/nio/IntBuffer;IIFFF)V = SetMidBlock(Java.Nio.IntBuffer, int, int, float, float, float)
  setVelocity(Ljava/nio/FloatBuffer;II[Lnet/optifine/render/VertexPosition;IFFF)V = SetVelocity(Java.Nio.FloatBuffer, int, int, Net.Optifine.Render.VertexPosition[], int, float, float, float)
net/optifine/shaders/SVertexBuilder = Net.Optifine.Shaders.SVertexBuilder
  <init>()V = .ctor()
  popEntity()V = PopEntity()
  postDrawArrays()V = PostDrawArrays()
  pushEntity(J)V = PushEntity(long)
  setMidBlock(Ljava/nio/IntBuffer;IIFFF)V = SetMidBlock(Java.Nio.IntBuffer, int, int, float, float, float)
  setVelocity(Ljava/nio/FloatBuffer;II[Lnet/optifine/render/VertexPosition;IFFF)V = SetVelocity(Java.Nio.FloatBuffer, int, int, Net.Optifine.Render.VertexPosition[], int, float, float, float)
net/optifine/shaders/SVertexFormat = Net.Optifine.Shaders.SVertexFormat
  <init>()V = .ctor()
  offsetEntity = OffsetEntity
  offsetMidBlock = OffsetMidBlock
  offsetMidTexCoord = OffsetMidTexCoord
  offsetTangent = OffsetTangent
  offsetVelocity = OffsetVelocity
  vertexSizeBlock = VertexSizeBlock
  removeExtendedElements(I)I = RemoveExtendedElements(int)
net/optifine/shaders/SVertexFormat = Net.Optifine.Shaders.SVertexFormat
  <init>()V = .ctor()
  offsetEntity = OffsetEntity
  offsetMidBlock = OffsetMidBlock
  offsetMidTexCoord = OffsetMidTexCoord
  offsetTangent = OffsetTangent
  offsetVelocity = OffsetVelocity
  vertexSizeBlock = VertexSizeBlock
  removeExtendedElements(I)I = RemoveExtendedElements(int)
net/optifine/shaders/TextureFormatLabPbr = Net.Optifine.Shaders.TextureFormatLabPbr
  <init>(Ljava/lang/String;)V = .ctor(string)
  getMacroName()Ljava/lang/String; = MacroName
  getMacroVersion()Ljava/lang/String; = MacroVersion
  getColorBlender(Lnet/optifine/shaders/ShadersTextureType;)Lnet/optifine/texture/IColorBlender; = GetColorBlender(Net.Optifine.Shaders.ShadersTextureType)
  isTextureBlend(Lnet/optifine/shaders/ShadersTextureType;)Z = IsTextureBlend(Net.Optifine.Shaders.ShadersTextureType)
net/optifine/shaders/TextureFormatLabPbr = Net.Optifine.Shaders.TextureFormatLabPbr
  <init>(Ljava/lang/String;)V = .ctor(string)
  getMacroName()Ljava/lang/String; = MacroName
  getMacroVersion()Ljava/lang/String; = MacroVersion
  getColorBlender(Lnet/optifine/shaders/ShadersTextureType;)Lnet/optifine/texture/IColorBlender; = GetColorBlender(Net.Optifine.Shaders.ShadersTextureType)
  isTextureBlend(Lnet/optifine/shaders/ShadersTextureType;)Z = IsTextureBlend(Net.Optifine.Shaders.ShadersTextureType)
net/optifine/shaders/uniform/CustomUniform = Net.Optifine.Shaders.Uniform.CustomUniform
  <init>(Ljava/lang/String;Lnet/optifine/shaders/uniform/UniformType;Lnet/optifine/expr/IExpression;)V = .ctor(string, Net.Optifine.Shaders.Uniform.UniformType, Net.Optifine.Expr.IExpression)
  getExpression()Lnet/optifine/expr/IExpression; = Expression
  getName()Ljava/lang/String; = Name
  getShaderUniform()Lnet/optifine/shaders/uniform/ShaderUniformBase; = ShaderUniform
  getType()Lnet/optifine/shaders/uniform/UniformType; = Type
  reset()V = Reset()
  setProgram(I)V = SetProgram(int)
  toString()Ljava/lang/String; = ToString()
  update()V = Update()
net/optifine/shaders/uniform/CustomUniform = Net.Optifine.Shaders.Uniform.CustomUniform
  <init>(Ljava/lang/String;Lnet/optifine/shaders/uniform/UniformType;Lnet/optifine/expr/IExpression;)V = .ctor(string, Net.Optifine.Shaders.Uniform.UniformType, Net.Optifine.Expr.IExpression)
  getExpression()Lnet/optifine/expr/IExpression; = Expression
  getName()Ljava/lang/String; = Name
  getShaderUniform()Lnet/optifine/shaders/uniform/ShaderUniformBase; = ShaderUniform
  getType()Lnet/optifine/shaders/uniform/UniformType; = Type
  reset()V = Reset()
  setProgram(I)V = SetProgram(int)
  update()V = Update()
net/optifine/shaders/uniform/CustomUniforms = Net.Optifine.Shaders.Uniform.CustomUniforms
  <init>([Lnet/optifine/shaders/uniform/CustomUniform;Ljava/util/Map;)V = .ctor(Net.Optifine.Shaders.Uniform.CustomUniform[], System.Collections.Generic.IDictionary<string, Net.Optifine.Expr.IExpression>)
  reset()V = Reset()
  setProgram(I)V = SetProgram(int)
  update()V = Update()
net/optifine/shaders/uniform/CustomUniforms = Net.Optifine.Shaders.Uniform.CustomUniforms
  <init>([Lnet/optifine/shaders/uniform/CustomUniform;Ljava/util/Map;)V = .ctor(Net.Optifine.Shaders.Uniform.CustomUniform[], System.Collections.Generic.IDictionary<string, Net.Optifine.Expr.IExpression>)
  reset()V = Reset()
  setProgram(I)V = SetProgram(int)
  update()V = Update()
net/optifine/shaders/uniform/ShaderExpressionResolver = Net.Optifine.Shaders.Uniform.ShaderExpressionResolver
  <init>(Ljava/util/Map;)V = .ctor(System.Collections.Generic.IDictionary<string, Net.Optifine.Expr.IExpression>)
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
  hasExpression(Ljava/lang/String;)Z = HasExpression(string)
  registerExpression(Ljava/lang/String;Lnet/optifine/expr/IExpression;)Z = RegisterExpression(string, Net.Optifine.Expr.IExpression)
net/optifine/shaders/uniform/ShaderExpressionResolver = Net.Optifine.Shaders.Uniform.ShaderExpressionResolver
  <init>(Ljava/util/Map;)V = .ctor(System.Collections.Generic.IDictionary<string, Net.Optifine.Expr.IExpression>)
  getExpression(Ljava/lang/String;)Lnet/optifine/expr/IExpression; = GetExpression(string)
  hasExpression(Ljava/lang/String;)Z = HasExpression(string)
  registerExpression(Ljava/lang/String;Lnet/optifine/expr/IExpression;)Z = RegisterExpression(string, Net.Optifine.Expr.IExpression)
net/optifine/shaders/uniform/ShaderParameterBool = Net.Optifine.Shaders.Uniform.ShaderParameterBool
  IS_ALIVE = IsAlive
  IS_BURNING = IsBurning
  IS_CHILD = IsChild
  IS_GLOWING = IsGlowing
  IS_HURT = IsHurt
  IS_IN_LAVA = IsInLava
  IS_INVISIBLE = IsInvisible
  IS_IN_WATER = IsInWater
  IS_ON_GROUND = IsOnGround
  IS_RIDDEN = IsRidden
  IS_RIDING = IsRiding
  IS_SNEAKING = IsSneaking
  IS_SPRINTING = IsSprinting
  IS_WET = IsWet
  getName()Ljava/lang/String; = Name
  eval()Z = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderParameterBool; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderParameterBool; = ValueOf(string)
  values()[Lnet/optifine/shaders/uniform/ShaderParameterBool; = Values()
net/optifine/shaders/uniform/ShaderParameterBool = Net.Optifine.Shaders.Uniform.ShaderParameterBool
  IS_ALIVE = IsAlive
  IS_BURNING = IsBurning
  IS_CHILD = IsChild
  IS_GLOWING = IsGlowing
  IS_HURT = IsHurt
  IS_IN_LAVA = IsInLava
  IS_INVISIBLE = IsInvisible
  IS_IN_WATER = IsInWater
  IS_ON_GROUND = IsOnGround
  IS_RIDDEN = IsRidden
  IS_RIDING = IsRiding
  IS_SNEAKING = IsSneaking
  IS_SPRINTING = IsSprinting
  IS_WET = IsWet
  getName()Ljava/lang/String; = Name
  eval()Z = Eval()
  parse(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderParameterBool; = Parse(string)
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderParameterBool; = ValueOf(string)
  values()[Lnet/optifine/shaders/uniform/ShaderParameterBool; = Values()
net/optifine/shaders/uniform/ShaderParameterFloat = Net.Optifine.Shaders.Uniform.ShaderParameterFloat
  ASPECT_RATIO = AspectRatio
  ATLAS_SIZE = AtlasSize
  BIOME = Biome
  BIOME_CATEGORY = BiomeCategory
  BIOME_PRECIPITATION = BiomePrecipitation
  BLINDNESS = Blindness
  CAMERA_POSITION = CameraPosition
  CENTER_DEPT_SMOOTH = CenterDeptSmooth
  EYE_ALTITUDE = EyeAltitude
  EYE_BRIGHTNESS = EyeBrightness
  FAR = Far
  FRAME_COUNTER = FrameCounter
  FRAME_TIME = FrameTime
  FRAME_TIME_COUNTER = FrameTimeCounter
  GBUFFER_MODEL_VIEW = GbufferModelView
  GBUFFER_MODEL_VIEW_INVERSE = GbufferModelViewInverse
  GBUFFER_PREVIOUS_MODEL_VIEW = GbufferPreviousModelView
  GBUFFER_PREVIOUS_PROJECTION = GbufferPreviousProjection
  GBUFFER_PROJECTION = GbufferProjection
  GBUFFER_PROJECTION_INVERSE = GbufferProjectionInverse
  HELD_BLOCK_LIGHT_VALUE = HeldBlockLightValue
  HELD_BLOCK_LIGHT_VALUE2 = HeldBlockLightValue2
  HELD_ITEM_ID = HeldItemId
  HELD_ITEM_ID2 = HeldItemId2
  HIDE_GUI = HideGui
  IS_EYE_IN_WATER = IsEyeInWater
  MOON_PHASE = MoonPhase
  MOON_POSITION = MoonPosition
  NEAR = Near
  NIGHT_VISION = NightVision
  PLAYER_MOOD = PlayerMood
  PREVIOUS_CAMERA_POSITION = PreviousCameraPosition
  RAINFALL = Rainfall
  RAIN_STRENGTH = RainStrength
  SCREEN_BRIGHTNESS = ScreenBrightness
  SHADOW_ANGLE = ShadowAngle
  SHADOW_LIGHT_POSITION = ShadowLightPosition
  SHADOW_MODEL_VIEW = ShadowModelView
  SHADOW_MODEL_VIEW_INVERSE = ShadowModelViewInverse
  SHADOW_PROJECTION = ShadowProjection
  SHADOW_PROJECTION_INVERSE = ShadowProjectionInverse
  SKY_COLOR = SkyColor
  SUN_ANGLE = SunAngle
  SUN_POSITION = SunPosition
  TEMPERATURE = Temperature
  TERRAIN_TEXTURE_SIZE = TerrainTextureSize
  TERRRAIN_ICON_SIZE = TerrrainIconSize
  UP_POSITION = UpPosition
  VIEW_HEIGHT = ViewHeight
  VIEW_WIDTH = ViewWidth
  WETNESS = Wetness
  WORLD_DAY = WorldDay
  WORLD_TIME = WorldTime
  getName()Ljava/lang/String; = Name
  getUniform()Lnet/optifine/shaders/uniform/ShaderUniformBase; = Uniform
  eval(II)F = Eval(int, int)
  getIndexNames1()[Ljava/lang/String; = GetIndexNames1()
  getIndexNames2()[Ljava/lang/String; = GetIndexNames2()
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderParameterFloat; = ValueOf(string)
  values()[Lnet/optifine/shaders/uniform/ShaderParameterFloat; = Values()
net/optifine/shaders/uniform/ShaderParameterFloat = Net.Optifine.Shaders.Uniform.ShaderParameterFloat
  ASPECT_RATIO = AspectRatio
  ATLAS_SIZE = AtlasSize
  BIOME = Biome
  BIOME_CATEGORY = BiomeCategory
  BIOME_PRECIPITATION = BiomePrecipitation
  BLINDNESS = Blindness
  CAMERA_POSITION = CameraPosition
  CENTER_DEPT_SMOOTH = CenterDeptSmooth
  EYE_ALTITUDE = EyeAltitude
  EYE_BRIGHTNESS = EyeBrightness
  FAR = Far
  FRAME_COUNTER = FrameCounter
  FRAME_TIME = FrameTime
  FRAME_TIME_COUNTER = FrameTimeCounter
  GBUFFER_MODEL_VIEW = GbufferModelView
  GBUFFER_MODEL_VIEW_INVERSE = GbufferModelViewInverse
  GBUFFER_PREVIOUS_MODEL_VIEW = GbufferPreviousModelView
  GBUFFER_PREVIOUS_PROJECTION = GbufferPreviousProjection
  GBUFFER_PROJECTION = GbufferProjection
  GBUFFER_PROJECTION_INVERSE = GbufferProjectionInverse
  HELD_BLOCK_LIGHT_VALUE = HeldBlockLightValue
  HELD_BLOCK_LIGHT_VALUE2 = HeldBlockLightValue2
  HELD_ITEM_ID = HeldItemId
  HELD_ITEM_ID2 = HeldItemId2
  HIDE_GUI = HideGui
  IS_EYE_IN_WATER = IsEyeInWater
  MOON_PHASE = MoonPhase
  MOON_POSITION = MoonPosition
  NEAR = Near
  NIGHT_VISION = NightVision
  PLAYER_MOOD = PlayerMood
  PREVIOUS_CAMERA_POSITION = PreviousCameraPosition
  RAINFALL = Rainfall
  RAIN_STRENGTH = RainStrength
  SCREEN_BRIGHTNESS = ScreenBrightness
  SHADOW_ANGLE = ShadowAngle
  SHADOW_LIGHT_POSITION = ShadowLightPosition
  SHADOW_MODEL_VIEW = ShadowModelView
  SHADOW_MODEL_VIEW_INVERSE = ShadowModelViewInverse
  SHADOW_PROJECTION = ShadowProjection
  SHADOW_PROJECTION_INVERSE = ShadowProjectionInverse
  SKY_COLOR = SkyColor
  SUN_ANGLE = SunAngle
  SUN_POSITION = SunPosition
  TEMPERATURE = Temperature
  TERRAIN_TEXTURE_SIZE = TerrainTextureSize
  TERRRAIN_ICON_SIZE = TerrrainIconSize
  UP_POSITION = UpPosition
  VIEW_HEIGHT = ViewHeight
  VIEW_WIDTH = ViewWidth
  WETNESS = Wetness
  WORLD_DAY = WorldDay
  WORLD_TIME = WorldTime
  getName()Ljava/lang/String; = Name
  getUniform()Lnet/optifine/shaders/uniform/ShaderUniformBase; = Uniform
  eval(II)F = Eval(int, int)
  getIndexNames1()[Ljava/lang/String; = GetIndexNames1()
  getIndexNames2()[Ljava/lang/String; = GetIndexNames2()
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderParameterFloat; = ValueOf(string)
  values()[Lnet/optifine/shaders/uniform/ShaderParameterFloat; = Values()
net/optifine/shaders/uniform/ShaderParameterIndexed = Net.Optifine.Shaders.Uniform.ShaderParameterIndexed
  <init>(Lnet/optifine/shaders/uniform/ShaderParameterFloat;)V = .ctor(Net.Optifine.Shaders.Uniform.ShaderParameterFloat)
  <init>(Lnet/optifine/shaders/uniform/ShaderParameterFloat;I)V = .ctor(Net.Optifine.Shaders.Uniform.ShaderParameterFloat, int)
  <init>(Lnet/optifine/shaders/uniform/ShaderParameterFloat;II)V = .ctor(Net.Optifine.Shaders.Uniform.ShaderParameterFloat, int, int)
  eval()F = Eval()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/uniform/ShaderParameterIndexed = Net.Optifine.Shaders.Uniform.ShaderParameterIndexed
  <init>(Lnet/optifine/shaders/uniform/ShaderParameterFloat;)V = .ctor(Net.Optifine.Shaders.Uniform.ShaderParameterFloat)
  <init>(Lnet/optifine/shaders/uniform/ShaderParameterFloat;I)V = .ctor(Net.Optifine.Shaders.Uniform.ShaderParameterFloat, int)
  <init>(Lnet/optifine/shaders/uniform/ShaderParameterFloat;II)V = .ctor(Net.Optifine.Shaders.Uniform.ShaderParameterFloat, int, int)
  eval()F = Eval()
net/optifine/shaders/uniform/ShaderUniform1f = Net.Optifine.Shaders.Uniform.ShaderUniform1f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()F = Value
  setValue(F)V = Value
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
net/optifine/shaders/uniform/ShaderUniform1f = Net.Optifine.Shaders.Uniform.ShaderUniform1f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()F = Value
  setValue(F)V = Value
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
net/optifine/shaders/uniform/ShaderUniform1i = Net.Optifine.Shaders.Uniform.ShaderUniform1i
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()I = Value
  setValue(I)V = Value
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
net/optifine/shaders/uniform/ShaderUniform1i = Net.Optifine.Shaders.Uniform.ShaderUniform1i
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()I = Value
  setValue(I)V = Value
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
net/optifine/shaders/uniform/ShaderUniform2f = Net.Optifine.Shaders.Uniform.ShaderUniform2f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[F = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(FF)V = SetValue(float, float)
net/optifine/shaders/uniform/ShaderUniform2f = Net.Optifine.Shaders.Uniform.ShaderUniform2f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[F = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(FF)V = SetValue(float, float)
net/optifine/shaders/uniform/ShaderUniform2i = Net.Optifine.Shaders.Uniform.ShaderUniform2i
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[I = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(II)V = SetValue(int, int)
net/optifine/shaders/uniform/ShaderUniform2i = Net.Optifine.Shaders.Uniform.ShaderUniform2i
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[I = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(II)V = SetValue(int, int)
net/optifine/shaders/uniform/ShaderUniform3f = Net.Optifine.Shaders.Uniform.ShaderUniform3f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[F = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(FFF)V = SetValue(float, float, float)
net/optifine/shaders/uniform/ShaderUniform3f = Net.Optifine.Shaders.Uniform.ShaderUniform3f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[F = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(FFF)V = SetValue(float, float, float)
net/optifine/shaders/uniform/ShaderUniform4f = Net.Optifine.Shaders.Uniform.ShaderUniform4f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[F = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(FFFF)V = SetValue(float, float, float, float)
net/optifine/shaders/uniform/ShaderUniform4f = Net.Optifine.Shaders.Uniform.ShaderUniform4f
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[F = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(FFFF)V = SetValue(float, float, float, float)
net/optifine/shaders/uniform/ShaderUniform4i = Net.Optifine.Shaders.Uniform.ShaderUniform4i
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[I = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(IIII)V = SetValue(int, int, int, int)
net/optifine/shaders/uniform/ShaderUniform4i = Net.Optifine.Shaders.Uniform.ShaderUniform4i
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue()[I = GetValue()
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(IIII)V = SetValue(int, int, int, int)
net/optifine/shaders/uniform/ShaderUniformBase = Net.Optifine.Shaders.Uniform.ShaderUniformBase
  <init>(Ljava/lang/String;)V = .ctor(string)
  isDefined()Z = IsDefined
  getLocation()I = Location
  getName()Ljava/lang/String; = Name
  getProgram()I = Program
  setProgram(I)V = Program
  checkGLError()V = CheckGLError()
  disable()V = Disable()
  flushRenderBuffers()V = FlushRenderBuffers()
  onProgramSet(I)V = OnProgramSet(int)
  reset()V = Reset()
  resetValue()V = ResetValue()
  toString()Ljava/lang/String; = ToString()
net/optifine/shaders/uniform/ShaderUniformBase = Net.Optifine.Shaders.Uniform.ShaderUniformBase
  <init>(Ljava/lang/String;)V = .ctor(string)
  isDefined()Z = IsDefined
  getLocation()I = Location
  getName()Ljava/lang/String; = Name
  getProgram()I = Program
  setProgram(I)V = Program
  checkGLError()V = CheckGLError()
  disable()V = Disable()
  flushRenderBuffers()V = FlushRenderBuffers()
  onProgramSet(I)V = OnProgramSet(int)
  reset()V = Reset()
  resetValue()V = ResetValue()
net/optifine/shaders/uniform/ShaderUniformM3 = Net.Optifine.Shaders.Uniform.ShaderUniformM3
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue(II)F = GetValue(int, int)
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(ZLjava/nio/FloatBuffer;)V = SetValue(bool, Java.Nio.FloatBuffer)
net/optifine/shaders/uniform/ShaderUniformM3 = Net.Optifine.Shaders.Uniform.ShaderUniformM3
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue(II)F = GetValue(int, int)
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(ZLjava/nio/FloatBuffer;)V = SetValue(bool, Java.Nio.FloatBuffer)
net/optifine/shaders/uniform/ShaderUniformM4 = Net.Optifine.Shaders.Uniform.ShaderUniformM4
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue(II)F = GetValue(int, int)
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(ZLjava/nio/FloatBuffer;)V = SetValue(bool, Java.Nio.FloatBuffer)
net/optifine/shaders/uniform/ShaderUniformM4 = Net.Optifine.Shaders.Uniform.ShaderUniformM4
  <init>(Ljava/lang/String;)V = .ctor(string)
  getValue(II)F = GetValue(int, int)
  onProgramSet(I)V = OnProgramSet(int)
  resetValue()V = ResetValue()
  setValue(ZLjava/nio/FloatBuffer;)V = SetValue(bool, Java.Nio.FloatBuffer)
net/optifine/shaders/uniform/ShaderUniforms = Net.Optifine.Shaders.Uniform.ShaderUniforms
  <init>()V = .ctor()
  make1f(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform1f; = Make1f(string)
  make1i(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform1i; = Make1i(string)
  make2i(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform2i; = Make2i(string)
  make3f(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform3f; = Make3f(string)
  make4f(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform4f; = Make4f(string)
  make4i(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform4i; = Make4i(string)
  makeM3(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniformM3; = MakeM3(string)
  makeM4(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniformM4; = MakeM4(string)
  reset()V = Reset()
  setProgram(I)V = SetProgram(int)
net/optifine/shaders/uniform/ShaderUniforms = Net.Optifine.Shaders.Uniform.ShaderUniforms
  <init>()V = .ctor()
  make1f(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform1f; = Make1f(string)
  make1i(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform1i; = Make1i(string)
  make2i(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform2i; = Make2i(string)
  make3f(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform3f; = Make3f(string)
  make4f(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform4f; = Make4f(string)
  make4i(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniform4i; = Make4i(string)
  makeM3(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniformM3; = MakeM3(string)
  makeM4(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniformM4; = MakeM4(string)
  reset()V = Reset()
  setProgram(I)V = SetProgram(int)
net/optifine/shaders/uniform/Smoother = Net.Optifine.Shaders.Uniform.Smoother
  <init>()V = .ctor()
  getNextId()I = NextId
  getSmoothValue(IFFF)F = GetSmoothValue(int, float, float, float)
  resetValues()V = ResetValues()
net/optifine/shaders/uniform/Smoother = Net.Optifine.Shaders.Uniform.Smoother
  <init>()V = .ctor()
  getNextId()I = NextId
  getSmoothValue(IFFF)F = GetSmoothValue(int, float, float, float)
  resetValues()V = ResetValues()
net/optifine/shaders/uniform/UniformType = Net.Optifine.Shaders.Uniform.UniformType
  BOOL = Bool
  FLOAT = Float
  INT = Int
  VEC2 = Vec2
  VEC3 = Vec3
  VEC4 = Vec4
  makeShaderUniform(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniformBase; = MakeShaderUniform(string)
  matchesExpressionType(Lnet/optifine/expr/ExpressionType;)Z = MatchesExpressionType(Net.Optifine.Expr.ExpressionType)
  parse(Ljava/lang/String;)Lnet/optifine/shaders/uniform/UniformType; = Parse(string)
  updateUniform(Lnet/optifine/expr/IExpression;Lnet/optifine/shaders/uniform/ShaderUniformBase;)V = UpdateUniform(Net.Optifine.Expr.IExpression, Net.Optifine.Shaders.Uniform.ShaderUniformBase)
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/uniform/UniformType; = ValueOf(string)
  values()[Lnet/optifine/shaders/uniform/UniformType; = Values()
net/optifine/shaders/uniform/UniformType = Net.Optifine.Shaders.Uniform.UniformType
  BOOL = Bool
  FLOAT = Float
  INT = Int
  VEC2 = Vec2
  VEC3 = Vec3
  VEC4 = Vec4
  makeShaderUniform(Ljava/lang/String;)Lnet/optifine/shaders/uniform/ShaderUniformBase; = MakeShaderUniform(string)
  matchesExpressionType(Lnet/optifine/expr/ExpressionType;)Z = MatchesExpressionType(Net.Optifine.Expr.ExpressionType)
  parse(Ljava/lang/String;)Lnet/optifine/shaders/uniform/UniformType; = Parse(string)
  updateUniform(Lnet/optifine/expr/IExpression;Lnet/optifine/shaders/uniform/ShaderUniformBase;)V = UpdateUniform(Net.Optifine.Expr.IExpression, Net.Optifine.Shaders.Uniform.ShaderUniformBase)
  valueOf(Ljava/lang/String;)Lnet/optifine/shaders/uniform/UniformType; = ValueOf(string)
  values()[Lnet/optifine/shaders/uniform/UniformType; = Values()
net/optifine/SmartAnimations = Net.Optifine.SmartAnimations
  <init>()V = .ctor()
  isActive()Z = IsActive
  isTextureRendered(I)Z = IsTextureRendered(int)
  resetTexturesRendered()V = ResetTexturesRendered()
  spritesRendered(Ljava/util/BitSet;)V = SpritesRendered(Java.Util.BitSet)
  textureRendered(I)V = TextureRendered(int)
  update()V = Update()
net/optifine/SmartAnimations = Net.Optifine.SmartAnimations
  <init>()V = .ctor()
  isActive()Z = IsActive
  isTextureRendered(I)Z = IsTextureRendered(int)
  resetTexturesRendered()V = ResetTexturesRendered()
  spritesRendered(Ljava/util/BitSet;)V = SpritesRendered(Java.Util.BitSet)
  textureRendered(I)V = TextureRendered(int)
  update()V = Update()
net/optifine/SmartExecutorService = Net.Optifine.SmartExecutorService
  <init>(Ljava/util/concurrent/ExecutorService;)V = .ctor(Java.Util.Concurrent.IExecutorService)
  delegate()Ljava/util/concurrent/ExecutorService; = Delegate()
  execute(Ljava/lang/Runnable;)V = Execute(Java.Lang.IRunnable)
net/optifine/SmartExecutorService = Net.Optifine.SmartExecutorService
  <init>(Ljava/util/concurrent/ExecutorService;)V = .ctor(Java.Util.Concurrent.IExecutorService)
  delegate()Ljava/util/concurrent/ExecutorService; = Delegate()
net/optifine/SmartLeaves = Net.Optifine.SmartLeaves
  <init>()V = .ctor()
  updateLeavesModels()V = UpdateLeavesModels()
net/optifine/SmartLeaves = Net.Optifine.SmartLeaves
  <init>()V = .ctor()
  updateLeavesModels()V = UpdateLeavesModels()
net/optifine/texture/BlenderLinear = Net.Optifine.Texture.BlenderLinear
  <init>()V = .ctor()
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/BlenderLinear = Net.Optifine.Texture.BlenderLinear
  <init>()V = .ctor()
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/BlenderSplit = Net.Optifine.Texture.BlenderSplit
  <init>(IZ)V = .ctor(int, bool)
  blend(IIII)I = Blend(int, int, int, int)
  main([Ljava/lang/String;)V = Main(string[])
  toString()Ljava/lang/String; = ToString()
net/optifine/texture/BlenderSplit = Net.Optifine.Texture.BlenderSplit
  <init>(IZ)V = .ctor(int, bool)
  blend(IIII)I = Blend(int, int, int, int)
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/texture/ColorBlenderAlpha = Net.Optifine.Texture.ColorBlenderAlpha
  <init>()V = .ctor()
  <init>(II)V = .ctor(int, int)
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/ColorBlenderAlpha = Net.Optifine.Texture.ColorBlenderAlpha
  <init>()V = .ctor()
  <init>(II)V = .ctor(int, int)
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/ColorBlenderKeepAlpha = Net.Optifine.Texture.ColorBlenderKeepAlpha
  <init>()V = .ctor()
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/ColorBlenderKeepAlpha = Net.Optifine.Texture.ColorBlenderKeepAlpha
  <init>()V = .ctor()
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/ColorBlenderLabPbrSpecular = Net.Optifine.Texture.ColorBlenderLabPbrSpecular
  <init>()V = .ctor()
net/optifine/texture/ColorBlenderLabPbrSpecular = Net.Optifine.Texture.ColorBlenderLabPbrSpecular
  <init>()V = .ctor()
net/optifine/texture/ColorBlenderLinear = Net.Optifine.Texture.ColorBlenderLinear
  <init>()V = .ctor()
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/ColorBlenderLinear = Net.Optifine.Texture.ColorBlenderLinear
  <init>()V = .ctor()
net/optifine/texture/ColorBlenderSeparate = Net.Optifine.Texture.ColorBlenderSeparate
  <init>(Lnet/optifine/texture/IBlender;Lnet/optifine/texture/IBlender;Lnet/optifine/texture/IBlender;Lnet/optifine/texture/IBlender;)V = .ctor(Net.Optifine.Texture.IBlender, Net.Optifine.Texture.IBlender, Net.Optifine.Texture.IBlender, Net.Optifine.Texture.IBlender)
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/ColorBlenderSeparate = Net.Optifine.Texture.ColorBlenderSeparate
  <init>(Lnet/optifine/texture/IBlender;Lnet/optifine/texture/IBlender;Lnet/optifine/texture/IBlender;Lnet/optifine/texture/IBlender;)V = .ctor(Net.Optifine.Texture.IBlender, Net.Optifine.Texture.IBlender, Net.Optifine.Texture.IBlender, Net.Optifine.Texture.IBlender)
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/IBlender = Net.Optifine.Texture.IBlender
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/IBlender = Net.Optifine.Texture.IBlender
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/IColorBlender = Net.Optifine.Texture.IColorBlender
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/IColorBlender = Net.Optifine.Texture.IColorBlender
  blend(IIII)I = Blend(int, int, int, int)
net/optifine/texture/InternalFormat = Net.Optifine.Texture.InternalFormat
  R11F_G11F_B10F = R11fG11fB10f
  R16 = R16
  R16F = R16f
  R16_SNORM = R16Snorm
  R32F = R32f
  R32I = R32i
  R32UI = R32ui
  R3_G3_B2 = R3G3B2
  R8 = R8
  R8_SNORM = R8Snorm
  RG16 = Rg16
  RG16F = Rg16f
  RG16_SNORM = Rg16Snorm
  RG32F = Rg32f
  RG32I = Rg32i
  RG32UI = Rg32ui
  RG8 = Rg8
  RG8_SNORM = Rg8Snorm
  RGB10_A2 = Rgb10A2
  RGB16 = Rgb16
  RGB16F = Rgb16f
  RGB16_SNORM = Rgb16Snorm
  RGB32F = Rgb32f
  RGB32I = Rgb32i
  RGB32UI = Rgb32ui
  RGB5_A1 = Rgb5A1
  RGB8 = Rgb8
  RGB8_SNORM = Rgb8Snorm
  RGB9_E5 = Rgb9E5
  RGBA16 = Rgba16
  RGBA16F = Rgba16f
  RGBA16_SNORM = Rgba16Snorm
  RGBA32F = Rgba32f
  RGBA32I = Rgba32i
  RGBA32UI = Rgba32ui
  RGBA8 = Rgba8
  RGBA8_SNORM = Rgba8Snorm
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/InternalFormat; = ValueOf(string)
  values()[Lnet/optifine/texture/InternalFormat; = Values()
net/optifine/texture/InternalFormat = Net.Optifine.Texture.InternalFormat
  R11F_G11F_B10F = R11fG11fB10f
  R16 = R16
  R16F = R16f
  R16_SNORM = R16Snorm
  R32F = R32f
  R32I = R32i
  R32UI = R32ui
  R3_G3_B2 = R3G3B2
  R8 = R8
  R8_SNORM = R8Snorm
  RG16 = Rg16
  RG16F = Rg16f
  RG16_SNORM = Rg16Snorm
  RG32F = Rg32f
  RG32I = Rg32i
  RG32UI = Rg32ui
  RG8 = Rg8
  RG8_SNORM = Rg8Snorm
  RGB10_A2 = Rgb10A2
  RGB16 = Rgb16
  RGB16F = Rgb16f
  RGB16_SNORM = Rgb16Snorm
  RGB32F = Rgb32f
  RGB32I = Rgb32i
  RGB32UI = Rgb32ui
  RGB5_A1 = Rgb5A1
  RGB8 = Rgb8
  RGB8_SNORM = Rgb8Snorm
  RGB9_E5 = Rgb9E5
  RGBA16 = Rgba16
  RGBA16F = Rgba16f
  RGBA16_SNORM = Rgba16Snorm
  RGBA32F = Rgba32f
  RGBA32I = Rgba32i
  RGBA32UI = Rgba32ui
  RGBA8 = Rgba8
  RGBA8_SNORM = Rgba8Snorm
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/InternalFormat; = ValueOf(string)
  values()[Lnet/optifine/texture/InternalFormat; = Values()
net/optifine/texture/PixelFormat = Net.Optifine.Texture.PixelFormat
  BGR = Bgr
  BGRA = Bgra
  BGRA_INTEGER = BgraInteger
  BGR_INTEGER = BgrInteger
  RED = Red
  RED_INTEGER = RedInteger
  RG = Rg
  RGB = Rgb
  RGBA = Rgba
  RGBA_INTEGER = RgbaInteger
  RGB_INTEGER = RgbInteger
  RG_INTEGER = RgInteger
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/PixelFormat; = ValueOf(string)
  values()[Lnet/optifine/texture/PixelFormat; = Values()
net/optifine/texture/PixelFormat = Net.Optifine.Texture.PixelFormat
  BGR = Bgr
  BGRA = Bgra
  BGRA_INTEGER = BgraInteger
  BGR_INTEGER = BgrInteger
  RED = Red
  RED_INTEGER = RedInteger
  RG = Rg
  RGB = Rgb
  RGBA = Rgba
  RGBA_INTEGER = RgbaInteger
  RGB_INTEGER = RgbInteger
  RG_INTEGER = RgInteger
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/PixelFormat; = ValueOf(string)
  values()[Lnet/optifine/texture/PixelFormat; = Values()
net/optifine/texture/PixelType = Net.Optifine.Texture.PixelType
  BYTE = Byte
  FLOAT = Float
  HALF_FLOAT = HalfFloat
  INT = Int
  SHORT = Short
  UNSIGNED_BYTE = UnsignedByte
  UNSIGNED_BYTE_2_3_3_REV = UnsignedByte233Rev
  UNSIGNED_BYTE_3_3_2 = UnsignedByte332
  UNSIGNED_INT = UnsignedInt
  UNSIGNED_INT_10_10_10_2 = UnsignedInt1010102
  UNSIGNED_INT_2_10_10_10_REV = UnsignedInt2101010Rev
  UNSIGNED_INT_8_8_8_8 = UnsignedInt8888
  UNSIGNED_INT_8_8_8_8_REV = UnsignedInt8888Rev
  UNSIGNED_SHORT = UnsignedShort
  UNSIGNED_SHORT_1_5_5_5_REV = UnsignedShort1555Rev
  UNSIGNED_SHORT_4_4_4_4 = UnsignedShort4444
  UNSIGNED_SHORT_4_4_4_4_REV = UnsignedShort4444Rev
  UNSIGNED_SHORT_5_5_5_1 = UnsignedShort5551
  UNSIGNED_SHORT_5_6_5 = UnsignedShort565
  UNSIGNED_SHORT_5_6_5_REV = UnsignedShort565Rev
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/PixelType; = ValueOf(string)
  values()[Lnet/optifine/texture/PixelType; = Values()
net/optifine/texture/PixelType = Net.Optifine.Texture.PixelType
  BYTE = Byte
  FLOAT = Float
  HALF_FLOAT = HalfFloat
  INT = Int
  SHORT = Short
  UNSIGNED_BYTE = UnsignedByte
  UNSIGNED_BYTE_2_3_3_REV = UnsignedByte233Rev
  UNSIGNED_BYTE_3_3_2 = UnsignedByte332
  UNSIGNED_INT = UnsignedInt
  UNSIGNED_INT_10_10_10_2 = UnsignedInt1010102
  UNSIGNED_INT_2_10_10_10_REV = UnsignedInt2101010Rev
  UNSIGNED_INT_8_8_8_8 = UnsignedInt8888
  UNSIGNED_INT_8_8_8_8_REV = UnsignedInt8888Rev
  UNSIGNED_SHORT = UnsignedShort
  UNSIGNED_SHORT_1_5_5_5_REV = UnsignedShort1555Rev
  UNSIGNED_SHORT_4_4_4_4 = UnsignedShort4444
  UNSIGNED_SHORT_4_4_4_4_REV = UnsignedShort4444Rev
  UNSIGNED_SHORT_5_5_5_1 = UnsignedShort5551
  UNSIGNED_SHORT_5_6_5 = UnsignedShort565
  UNSIGNED_SHORT_5_6_5_REV = UnsignedShort565Rev
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/PixelType; = ValueOf(string)
  values()[Lnet/optifine/texture/PixelType; = Values()
net/optifine/texture/SpriteSourceCollector = Net.Optifine.Texture.SpriteSourceCollector
  removeAll(Ljava/util/function/Predicate;)V = RemoveAll(Java.Util.Functions.IPredicate)
net/optifine/texture/TextureType = Net.Optifine.Texture.TextureType
  TEXTURE_1D = Texture1d
  TEXTURE_2D = Texture2d
  TEXTURE_3D = Texture3d
  TEXTURE_RECTANGLE = TextureRectangle
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/TextureType; = ValueOf(string)
  values()[Lnet/optifine/texture/TextureType; = Values()
net/optifine/texture/TextureType = Net.Optifine.Texture.TextureType
  TEXTURE_1D = Texture1d
  TEXTURE_2D = Texture2d
  TEXTURE_3D = Texture3d
  TEXTURE_RECTANGLE = TextureRectangle
  getId()I = Id
  valueOf(Ljava/lang/String;)Lnet/optifine/texture/TextureType; = ValueOf(string)
  values()[Lnet/optifine/texture/TextureType; = Values()
net/optifine/TextureAnimation = Net.Optifine.TextureAnimation
  getCurrentFrame()Lnet/optifine/TextureAnimationFrame; = CurrentFrame
  getDstTex()Ljava/lang/String; = DstTex
  getFrameCount()I = FrameCount
  isActive()Z = IsActive
  getSrcTex()Ljava/lang/String; = SrcTex
  getFrame(I)Lnet/optifine/TextureAnimationFrame; = GetFrame(int)
  nextFrame()Z = NextFrame()
  updateTexture()V = UpdateTexture()
net/optifine/TextureAnimation = Net.Optifine.TextureAnimation
  getCurrentFrame()Lnet/optifine/TextureAnimationFrame; = CurrentFrame
  getDstTex()Ljava/lang/String; = DstTex
  getFrameCount()I = FrameCount
  isActive()Z = IsActive
  getSrcTex()Ljava/lang/String; = SrcTex
  getFrame(I)Lnet/optifine/TextureAnimationFrame; = GetFrame(int)
  nextFrame()Z = NextFrame()
  updateTexture()V = UpdateTexture()
net/optifine/TextureAnimationFrame = Net.Optifine.TextureAnimationFrame
  <init>(II)V = .ctor(int, int)
  counter = Counter
  duration = Duration
  index = Index
net/optifine/TextureAnimationFrame = Net.Optifine.TextureAnimationFrame
  <init>(II)V = .ctor(int, int)
  counter = Counter
  duration = Duration
  index = Index
net/optifine/TextureAnimations = Net.Optifine.TextureAnimations
  <init>()V = .ctor()
  getCountAnimations()I = CountAnimations
  getCountAnimationsActive()I = CountAnimationsActive
  reset()V = Reset()
  update()V = Update()
  updateAnimations()V = UpdateAnimations()
net/optifine/TextureAnimations = Net.Optifine.TextureAnimations
  <init>()V = .ctor()
  getCountAnimations()I = CountAnimations
  getCountAnimationsActive()I = CountAnimationsActive
  reset()V = Reset()
  update()V = Update()
  updateAnimations()V = UpdateAnimations()
net/optifine/util/ArrayCache = Net.Optifine.Util.ArrayCache
  <init>(Ljava/lang/Class;I)V = .ctor(Java.Lang.Class, int)
  allocate(I)Ljava/lang/Object; = Allocate(int)
  free(Ljava/lang/Object;)V = Free(Java.Lang.Object)
net/optifine/util/ArrayCache = Net.Optifine.Util.ArrayCache
  <init>(Ljava/lang/Class;I)V = .ctor(Java.Lang.Class, int)
  allocate(I)Ljava/lang/Object; = Allocate(int)
  free(Ljava/lang/Object;)V = Free(Java.Lang.Object)
net/optifine/util/ArrayCaches = Net.Optifine.Util.ArrayCaches
  <init>([ILjava/lang/Class;I)V = .ctor(int[], Java.Lang.Class, int)
  allocate(I)Ljava/lang/Object; = Allocate(int)
  free(Ljava/lang/Object;)V = Free(Java.Lang.Object)
net/optifine/util/ArrayCaches = Net.Optifine.Util.ArrayCaches
  <init>([ILjava/lang/Class;I)V = .ctor(int[], Java.Lang.Class, int)
  allocate(I)Ljava/lang/Object; = Allocate(int)
  free(Ljava/lang/Object;)V = Free(Java.Lang.Object)
net/optifine/util/ArrayUtils = Net.Optifine.Util.ArrayUtils
  <init>()V = .ctor()
  addIntsToArray([I[I)[I = AddIntsToArray(int[], int[])
  addIntToArray([II)[I = AddIntToArray(int[], int)
  addObjectsToArray([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectsToArray(Java.Lang.Object[], Java.Lang.Object[])
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object)
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;I)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object, int)
  arrayToHexString([ILjava/lang/String;)Ljava/lang/String; = ArrayToHexString(int[], string)
  arrayToString([Z)Ljava/lang/String; = ArrayToString(bool[])
  arrayToString([ZI)Ljava/lang/String; = ArrayToString(bool[], int)
  arrayToString([ZLjava/lang/String;)Ljava/lang/String; = ArrayToString(bool[], string)
  arrayToString([ZLjava/lang/String;I)Ljava/lang/String; = ArrayToString(bool[], string, int)
  arrayToString([F)Ljava/lang/String; = ArrayToString(float[])
  arrayToString([FLjava/lang/String;)Ljava/lang/String; = ArrayToString(float[], string)
  arrayToString([FLjava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ArrayToString(float[], string, string)
  arrayToString([I)Ljava/lang/String; = ArrayToString(int[])
  arrayToString([ILjava/lang/String;)Ljava/lang/String; = ArrayToString(int[], string)
  arrayToString([Ljava/lang/Object;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[])
  arrayToString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[], string)
  collectionToArray(Ljava/util/Collection;Ljava/lang/Class;)[Ljava/lang/Object; = CollectionToArray(System.Collections.ICollection, Java.Lang.Class)
  contains([II)Z = Contains(int[], int)
  contains([Ljava/lang/Object;Ljava/lang/Object;)Z = Contains(Java.Lang.Object[], Java.Lang.Object)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  equalsOne(I[I)Z = EqualsOne(int, int[])
  equalsOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = EqualsOne(Java.Lang.Object, Java.Lang.Object[])
  indexOf([II)I = IndexOf(int[], int)
  indexOf([Ljava/lang/Object;Ljava/lang/Object;)I = IndexOf(Java.Lang.Object[], Java.Lang.Object)
  isSameOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = IsSameOne(Java.Lang.Object, Java.Lang.Object[])
  newBoolean(IZ)[Z = NewBoolean(int, bool)
  newInt(II)[I = NewInt(int, int)
  newObject(ILjava/lang/Object;)[Ljava/lang/Object; = NewObject(int, Java.Lang.Object)
  removeObjectFromArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = RemoveObjectFromArray(Java.Lang.Object[], Java.Lang.Object)
  toObject([I)[Ljava/lang/Integer; = ToObject(int[])
  toPrimitive([Ljava/lang/Integer;)[I = ToPrimitive(Java.Lang.Integer[])
net/optifine/util/ArrayUtils = Net.Optifine.Util.ArrayUtils
  <init>()V = .ctor()
  addIntsToArray([I[I)[I = AddIntsToArray(int[], int[])
  addIntToArray([II)[I = AddIntToArray(int[], int)
  addObjectsToArray([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectsToArray(Java.Lang.Object[], Java.Lang.Object[])
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object)
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;I)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object, int)
  arrayToHexString([ILjava/lang/String;)Ljava/lang/String; = ArrayToHexString(int[], string)
  arrayToString([Z)Ljava/lang/String; = ArrayToString(bool[])
  arrayToString([ZI)Ljava/lang/String; = ArrayToString(bool[], int)
  arrayToString([ZLjava/lang/String;)Ljava/lang/String; = ArrayToString(bool[], string)
  arrayToString([ZLjava/lang/String;I)Ljava/lang/String; = ArrayToString(bool[], string, int)
  arrayToString([F)Ljava/lang/String; = ArrayToString(float[])
  arrayToString([FLjava/lang/String;)Ljava/lang/String; = ArrayToString(float[], string)
  arrayToString([FLjava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ArrayToString(float[], string, string)
  arrayToString([I)Ljava/lang/String; = ArrayToString(int[])
  arrayToString([ILjava/lang/String;)Ljava/lang/String; = ArrayToString(int[], string)
  arrayToString([Ljava/lang/Object;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[])
  arrayToString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String; = ArrayToString(Java.Lang.Object[], string)
  collectionToArray(Ljava/util/Collection;Ljava/lang/Class;)[Ljava/lang/Object; = CollectionToArray(System.Collections.ICollection, Java.Lang.Class)
  contains([II)Z = Contains(int[], int)
  contains([Ljava/lang/Object;Ljava/lang/Object;)Z = Contains(Java.Lang.Object[], Java.Lang.Object)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  equalsOne(I[I)Z = EqualsOne(int, int[])
  equalsOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = EqualsOne(Java.Lang.Object, Java.Lang.Object[])
  indexOf([II)I = IndexOf(int[], int)
  indexOf([Ljava/lang/Object;Ljava/lang/Object;)I = IndexOf(Java.Lang.Object[], Java.Lang.Object)
  isSameOne(Ljava/lang/Object;[Ljava/lang/Object;)Z = IsSameOne(Java.Lang.Object, Java.Lang.Object[])
  newBoolean(IZ)[Z = NewBoolean(int, bool)
  newInt(II)[I = NewInt(int, int)
  newObject(ILjava/lang/Object;)[Ljava/lang/Object; = NewObject(int, Java.Lang.Object)
  removeObjectFromArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = RemoveObjectFromArray(Java.Lang.Object[], Java.Lang.Object)
  toObject([I)[Ljava/lang/Integer; = ToObject(int[])
  toPrimitive([Ljava/lang/Integer;)[I = ToPrimitive(Java.Lang.Integer[])
net/optifine/util/BiomeCategory = Net.Optifine.Util.BiomeCategory
  BEACH = Beach
  DESERT = Desert
  EXTREME_HILLS = ExtremeHills
  FOREST = Forest
  ICY = Icy
  JUNGLE = Jungle
  MESA = Mesa
  MOUNTAIN = Mountain
  MUSHROOM = Mushroom
  NETHER = Nether
  NONE = None
  OCEAN = Ocean
  PLAINS = Plains
  RIVER = River
  SAVANNA = Savanna
  SWAMP = Swamp
  TAIGA = Taiga
  THEEND = Theend
  UNDERGROUND = Underground
  getName()Ljava/lang/String; = Name
  valueOf(Ljava/lang/String;)Lnet/optifine/util/BiomeCategory; = ValueOf(string)
  values()[Lnet/optifine/util/BiomeCategory; = Values()
net/optifine/util/BiomeCategory = Net.Optifine.Util.BiomeCategory
  BEACH = Beach
  DESERT = Desert
  EXTREME_HILLS = ExtremeHills
  FOREST = Forest
  ICY = Icy
  JUNGLE = Jungle
  MESA = Mesa
  MOUNTAIN = Mountain
  MUSHROOM = Mushroom
  NETHER = Nether
  NONE = None
  OCEAN = Ocean
  PLAINS = Plains
  RIVER = River
  SAVANNA = Savanna
  SWAMP = Swamp
  TAIGA = Taiga
  THEEND = Theend
  UNDERGROUND = Underground
  getName()Ljava/lang/String; = Name
  valueOf(Ljava/lang/String;)Lnet/optifine/util/BiomeCategory; = ValueOf(string)
  values()[Lnet/optifine/util/BiomeCategory; = Values()
net/optifine/util/BiomeUtils = Net.Optifine.Util.BiomeUtils
  <init>()V = .ctor()
  getBiomeIds()Ljava/util/List; = BiomeIds
net/optifine/util/BiomeUtils = Net.Optifine.Util.BiomeUtils
  <init>()V = .ctor()
  getBiomeIds()Ljava/util/List; = BiomeIds
net/optifine/util/BlockUtils = Net.Optifine.Util.BlockUtils
  <init>()V = .ctor()
net/optifine/util/BlockUtils = Net.Optifine.Util.BlockUtils
  <init>()V = .ctor()
net/optifine/util/BufferUtil = Net.Optifine.Util.BufferUtil
  <init>()V = .ctor()
  createDirectFloatBuffer(I)Ljava/nio/FloatBuffer; = CreateDirectFloatBuffer(int)
  fill(Ljava/nio/FloatBuffer;F)V = Fill(Java.Nio.FloatBuffer, float)
  getBufferString(Ljava/nio/IntBuffer;)Ljava/lang/String; = GetBufferString(Java.Nio.IntBuffer)
  toArray(Ljava/nio/IntBuffer;)[I = ToArray(Java.Nio.IntBuffer)
net/optifine/util/BufferUtil = Net.Optifine.Util.BufferUtil
  <init>()V = .ctor()
  createDirectFloatBuffer(I)Ljava/nio/FloatBuffer; = CreateDirectFloatBuffer(int)
  fill(Ljava/nio/FloatBuffer;F)V = Fill(Java.Nio.FloatBuffer, float)
  getBufferString(Ljava/nio/IntBuffer;)Ljava/lang/String; = GetBufferString(Java.Nio.IntBuffer)
  toArray(Ljava/nio/IntBuffer;)[I = ToArray(Java.Nio.IntBuffer)
net/optifine/util/CacheLocal = Net.Optifine.Util.CacheLocal
  <init>(III)V = .ctor(int, int, int)
  get(III)I = Get(int, int, int)
  resetCache()V = ResetCache()
  setLast(I)V = SetLast(int)
  setOffset(III)V = SetOffset(int, int, int)
net/optifine/util/CacheLocal = Net.Optifine.Util.CacheLocal
  <init>(III)V = .ctor(int, int, int)
  get(III)I = Get(int, int, int)
  resetCache()V = ResetCache()
  setLast(I)V = SetLast(int)
  setOffset(III)V = SetOffset(int, int, int)
net/optifine/util/CacheLocalByte = Net.Optifine.Util.CacheLocalByte
  <init>(III)V = .ctor(int, int, int)
  get(III)B = Get(int, int, int)
  resetCache()V = ResetCache()
  setLast(B)V = SetLast(sbyte)
  setOffset(III)V = SetOffset(int, int, int)
net/optifine/util/CacheLocalByte = Net.Optifine.Util.CacheLocalByte
  <init>(III)V = .ctor(int, int, int)
  get(III)B = Get(int, int, int)
  resetCache()V = ResetCache()
  setLast(B)V = SetLast(sbyte)
  setOffset(III)V = SetOffset(int, int, int)
net/optifine/util/CacheObjectArray = Net.Optifine.Util.CacheObjectArray
  <init>()V = .ctor()
  freeArray([I)V = FreeArray(int[])
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/CacheObjectArray = Net.Optifine.Util.CacheObjectArray
  <init>()V = .ctor()
  freeArray([I)V = FreeArray(int[])
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/ChunkUtils = Net.Optifine.Util.ChunkUtils
  <init>()V = .ctor()
net/optifine/util/ChunkUtils = Net.Optifine.Util.ChunkUtils
  <init>()V = .ctor()
net/optifine/util/CollectionUtils = Net.Optifine.Util.CollectionUtils
  <init>()V = .ctor()
  anyMatch(Ljava/util/Set;Ljava/util/Set;)Z = AnyMatch(System.Collections.ICollection, System.Collections.ICollection)
  noneMatch(Ljava/util/Set;Ljava/util/Set;)Z = NoneMatch(System.Collections.ICollection, System.Collections.ICollection)
net/optifine/util/CollectionUtils = Net.Optifine.Util.CollectionUtils
  <init>()V = .ctor()
  anyMatch(Ljava/util/Set;Ljava/util/Set;)Z = AnyMatch(System.Collections.ICollection, System.Collections.ICollection)
  noneMatch(Ljava/util/Set;Ljava/util/Set;)Z = NoneMatch(System.Collections.ICollection, System.Collections.ICollection)
net/optifine/util/ColorSamplerM = Net.Optifine.Util.IColorSamplerM
net/optifine/util/CompactArrayList = Net.Optifine.Util.CompactArrayList
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  <init>(IF)V = .ctor(int, float)
  getCountValid()I = CountValid
  isEmpty()Z = IsEmpty
  add(ILjava/lang/Object;)V = Add(int, Java.Lang.Object)
  add(Ljava/lang/Object;)Z = Add(Java.Lang.Object)
  clear()V = Clear()
  compact()V = Compact()
  contains(Ljava/lang/Object;)Z = Contains(Java.Lang.Object)
  get(I)Ljava/lang/Object; = Get(int)
  remove(I)Ljava/lang/Object; = Remove(int)
  set(ILjava/lang/Object;)Ljava/lang/Object; = Set(int, Java.Lang.Object)
  size()I = Size()
net/optifine/util/CompactArrayList = Net.Optifine.Util.CompactArrayList
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  <init>(IF)V = .ctor(int, float)
  getCountValid()I = CountValid
  isEmpty()Z = IsEmpty
  add(ILjava/lang/Object;)V = Add(int, Java.Lang.Object)
  add(Ljava/lang/Object;)Z = Add(Java.Lang.Object)
  clear()V = Clear()
  compact()V = Compact()
  contains(Ljava/lang/Object;)Z = Contains(Java.Lang.Object)
  get(I)Ljava/lang/Object; = Get(int)
  remove(I)Ljava/lang/Object; = Remove(int)
  set(ILjava/lang/Object;)Ljava/lang/Object; = Set(int, Java.Lang.Object)
  size()I = Size()
net/optifine/util/CompareUtils = Net.Optifine.Util.CompareUtils
  <init>()V = .ctor()
  hash(Z)I = Hash(bool)
  hash(ZZ)I = Hash(bool, bool)
  hash(F)I = Hash(float)
  hash(FF)I = Hash(float, float)
  hash(I)I = Hash(int)
  hash(IF)I = Hash(int, float)
  hash(ILjava/lang/Object;)I = Hash(int, Java.Lang.Object)
  hash(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)I = Hash(int, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  hash(Ljava/lang/Object;)I = Hash(Java.Lang.Object)
  hash(Ljava/lang/Object;Z)I = Hash(Java.Lang.Object, bool)
  hash(Ljava/lang/Object;Ljava/lang/Object;)I = Hash(Java.Lang.Object, Java.Lang.Object)
net/optifine/util/CompareUtils = Net.Optifine.Util.CompareUtils
  <init>()V = .ctor()
  hash(Z)I = Hash(bool)
  hash(ZZ)I = Hash(bool, bool)
  hash(F)I = Hash(float)
  hash(FF)I = Hash(float, float)
  hash(I)I = Hash(int)
  hash(IF)I = Hash(int, float)
  hash(ILjava/lang/Object;)I = Hash(int, Java.Lang.Object)
  hash(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)I = Hash(int, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  hash(Ljava/lang/Object;)I = Hash(Java.Lang.Object)
  hash(Ljava/lang/Object;Z)I = Hash(Java.Lang.Object, bool)
  hash(Ljava/lang/Object;Ljava/lang/Object;)I = Hash(Java.Lang.Object, Java.Lang.Object)
net/optifine/util/ComponentUtils = Net.Optifine.Util.ComponentUtils
  <init>()V = .ctor()
net/optifine/util/ComponentUtils = Net.Optifine.Util.ComponentUtils
  <init>()V = .ctor()
net/optifine/util/CompoundIntKey = Net.Optifine.Util.CompoundIntKey
  <init>([I)V = .ctor(int[])
  <init>(II)V = .ctor(int, int)
  <init>(III)V = .ctor(int, int, int)
  <init>(IIII)V = .ctor(int, int, int, int)
  equals(Ljava/lang/Object;)Z = Equals(Java.Lang.Object)
  hashCode()I = GetHashCode()
  getKeysCopy()[I = GetKeysCopy()
  toString()Ljava/lang/String; = ToString()
net/optifine/util/CompoundIntKey = Net.Optifine.Util.CompoundIntKey
  <init>([I)V = .ctor(int[])
  <init>(II)V = .ctor(int, int)
  <init>(III)V = .ctor(int, int, int)
  <init>(IIII)V = .ctor(int, int, int, int)
  getKeysCopy()[I = GetKeysCopy()
net/optifine/util/CompoundKey = Net.Optifine.Util.CompoundKey
  <init>([Ljava/lang/Object;)V = .ctor(Java.Lang.Object[])
  <init>(Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object, Java.Lang.Object)
  <init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  <init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  equals(Ljava/lang/Object;)Z = Equals(Java.Lang.Object)
  hashCode()I = GetHashCode()
  getKeysCopy()[Ljava/lang/Object; = GetKeysCopy()
  toString()Ljava/lang/String; = ToString()
net/optifine/util/CompoundKey = Net.Optifine.Util.CompoundKey
  <init>([Ljava/lang/Object;)V = .ctor(Java.Lang.Object[])
  <init>(Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object, Java.Lang.Object)
  <init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  <init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  getKeysCopy()[Ljava/lang/Object; = GetKeysCopy()
net/optifine/util/CounterInt = Net.Optifine.Util.CounterInt
  <init>(I)V = .ctor(int)
  getValue()I = Value
  nextValue()I = NextValue()
  reset()V = Reset()
net/optifine/util/CounterInt = Net.Optifine.Util.CounterInt
  <init>(I)V = .ctor(int)
  getValue()I = Value
  nextValue()I = NextValue()
  reset()V = Reset()
net/optifine/util/DebugUtils = Net.Optifine.Util.DebugUtils
  <init>()V = .ctor()
  getGlModelView()Ljava/lang/String; = GlModelView
  getGlProjection()Ljava/lang/String; = GlProjection
  debugTextures()V = DebugTextures()
net/optifine/util/DebugUtils = Net.Optifine.Util.DebugUtils
  <init>()V = .ctor()
  getGlModelView()Ljava/lang/String; = GlModelView
  getGlProjection()Ljava/lang/String; = GlProjection
  debugTextures()V = DebugTextures()
net/optifine/util/DisplayModeComparator = Net.Optifine.Util.DisplayModeComparator
  <init>()V = .ctor()
  compare(Ljava/lang/Object;Ljava/lang/Object;)I = Compare(Java.Lang.Object, Java.Lang.Object)
net/optifine/util/DisplayModeComparator = Net.Optifine.Util.DisplayModeComparator
  <init>()V = .ctor()
  compare(Ljava/lang/Object;Ljava/lang/Object;)I = Compare(Java.Lang.Object, Java.Lang.Object)
net/optifine/util/DummyList = Net.Optifine.Util.DummyList
  <init>()V = .ctor()
  INSTANCE = Instance
  isEmpty()Z = IsEmpty
  add(Ljava/lang/Object;)Z = Add(Java.Lang.Object)
  add(ILjava/lang/Object;)V = Add(int, Java.Lang.Object)
  addAll(ILjava/util/Collection;)Z = AddAll(int, System.Collections.ICollection)
  addAll(Ljava/util/Collection;)Z = AddAll(System.Collections.ICollection)
  clear()V = Clear()
  contains(Ljava/lang/Object;)Z = Contains(Java.Lang.Object)
  containsAll(Ljava/util/Collection;)Z = ContainsAll(System.Collections.ICollection)
  get(I)Ljava/lang/Object; = Get(int)
  indexOf(Ljava/lang/Object;)I = IndexOf(Java.Lang.Object)
  iterator()Ljava/util/Iterator; = Iterator()
  lastIndexOf(Ljava/lang/Object;)I = LastIndexOf(Java.Lang.Object)
  listIterator()Ljava/util/ListIterator; = ListIterator()
  listIterator(I)Ljava/util/ListIterator; = ListIterator(int)
  remove(I)Ljava/lang/Object; = Remove(int)
  remove(Ljava/lang/Object;)Z = Remove(Java.Lang.Object)
  removeAll(Ljava/util/Collection;)Z = RemoveAll(System.Collections.ICollection)
  retainAll(Ljava/util/Collection;)Z = RetainAll(System.Collections.ICollection)
  set(ILjava/lang/Object;)Ljava/lang/Object; = Set(int, Java.Lang.Object)
  size()I = Size()
  subList(II)Ljava/util/List; = SubList(int, int)
  toArray()[Ljava/lang/Object; = ToArray()
  toArray([Ljava/lang/Object;)[Ljava/lang/Object; = ToArray(Java.Lang.Object[])
net/optifine/util/DummyList = Net.Optifine.Util.DummyList
  <init>()V = .ctor()
  INSTANCE = Instance
  isEmpty()Z = IsEmpty
  add(Ljava/lang/Object;)Z = Add(Java.Lang.Object)
  add(ILjava/lang/Object;)V = Add(int, Java.Lang.Object)
  addAll(ILjava/util/Collection;)Z = AddAll(int, System.Collections.ICollection)
  addAll(Ljava/util/Collection;)Z = AddAll(System.Collections.ICollection)
  clear()V = Clear()
  contains(Ljava/lang/Object;)Z = Contains(Java.Lang.Object)
  containsAll(Ljava/util/Collection;)Z = ContainsAll(System.Collections.ICollection)
  get(I)Ljava/lang/Object; = Get(int)
  indexOf(Ljava/lang/Object;)I = IndexOf(Java.Lang.Object)
  iterator()Ljava/util/Iterator; = Iterator()
  lastIndexOf(Ljava/lang/Object;)I = LastIndexOf(Java.Lang.Object)
  listIterator()Ljava/util/ListIterator; = ListIterator()
  listIterator(I)Ljava/util/ListIterator; = ListIterator(int)
  remove(I)Ljava/lang/Object; = Remove(int)
  remove(Ljava/lang/Object;)Z = Remove(Java.Lang.Object)
  removeAll(Ljava/util/Collection;)Z = RemoveAll(System.Collections.ICollection)
  retainAll(Ljava/util/Collection;)Z = RetainAll(System.Collections.ICollection)
  set(ILjava/lang/Object;)Ljava/lang/Object; = Set(int, Java.Lang.Object)
  size()I = Size()
  subList(II)Ljava/util/List; = SubList(int, int)
  toArray()[Ljava/lang/Object; = ToArray()
  toArray([Ljava/lang/Object;)[Ljava/lang/Object; = ToArray(Java.Lang.Object[])
net/optifine/util/DynamicDimension = Net.Optifine.Util.DynamicDimension
  <init>(ZFF)V = .ctor(bool, float, float)
  getHeight()F = Height
  isRelative()Z = IsRelative
  getWidth()F = Width
  equals(Ljava/lang/Object;)Z = Equals(Java.Lang.Object)
  hashCode()I = GetHashCode()
net/optifine/util/DynamicDimension = Net.Optifine.Util.DynamicDimension
  <init>(ZFF)V = .ctor(bool, float, float)
  getHeight()F = Height
  isRelative()Z = IsRelative
  getWidth()F = Width
net/optifine/util/Either = Net.Optifine.Util.Either
  getLeft()Ljava/util/Optional; = Left
  getRight()Ljava/util/Optional; = Right
  makeLeft(Ljava/lang/Object;)Lnet/optifine/util/Either; = MakeLeft(Java.Lang.Object)
  makeRight(Ljava/lang/Object;)Lnet/optifine/util/Either; = MakeRight(Java.Lang.Object)
net/optifine/util/Either = Net.Optifine.Util.Either
  getLeft()Ljava/util/Optional; = Left
  getRight()Ljava/util/Optional; = Right
  makeLeft(Ljava/lang/Object;)Lnet/optifine/util/Either; = MakeLeft(Java.Lang.Object)
  makeRight(Ljava/lang/Object;)Lnet/optifine/util/Either; = MakeRight(Java.Lang.Object)
net/optifine/util/EnchantmentUtils = Net.Optifine.Util.EnchantmentUtils
  <init>()V = .ctor()
  getMaxEnchantmentId()I = MaxEnchantmentId
net/optifine/util/EnchantmentUtils = Net.Optifine.Util.EnchantmentUtils
  <init>()V = .ctor()
  getMaxEnchantmentId()I = MaxEnchantmentId
net/optifine/util/EntityTypeUtils = Net.Optifine.Util.EntityTypeUtils
  <init>()V = .ctor()
net/optifine/util/EntityTypeUtils = Net.Optifine.Util.EntityTypeUtils
  <init>()V = .ctor()
net/optifine/util/EntityUtils = Net.Optifine.Util.EntityUtils
  <init>()V = .ctor()
  getEntityIdByLocation(Ljava/lang/String;)I = GetEntityIdByLocation(string)
  getEntityIdByName(Ljava/lang/String;)I = GetEntityIdByName(string)
net/optifine/util/EntityUtils = Net.Optifine.Util.EntityUtils
  <init>()V = .ctor()
  getEntityIdByLocation(Ljava/lang/String;)I = GetEntityIdByLocation(string)
  getEntityIdByName(Ljava/lang/String;)I = GetEntityIdByName(string)
net/optifine/util/ExecutorProxy = Net.Optifine.Util.ExecutorProxy
  <init>()V = .ctor()
  isShutdown()Z = IsShutdown
  isTerminated()Z = IsTerminated
  awaitTermination(JLjava/util/concurrent/TimeUnit;)Z = AwaitTermination(long, Java.Util.Concurrent.TimeUnit)
  delegate()Ljava/util/concurrent/ExecutorService; = Delegate()
  execute(Ljava/lang/Runnable;)V = Execute(Java.Lang.IRunnable)
  invokeAll(Ljava/util/Collection;)Ljava/util/List; = InvokeAll(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>)
  invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List; = InvokeAll(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>, long, Java.Util.Concurrent.TimeUnit)
  invokeAny(Ljava/util/Collection;)Ljava/lang/Object; = InvokeAny(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>)
  invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object; = InvokeAny(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>, long, Java.Util.Concurrent.TimeUnit)
  shutdown()V = Shutdown()
  shutdownNow()Ljava/util/List; = ShutdownNow()
  submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future; = Submit(Java.Lang.IRunnable)
  submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future; = Submit(Java.Lang.IRunnable, Java.Lang.Object)
  submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future; = Submit(Java.Util.Concurrent.ICallable)
net/optifine/util/ExecutorProxy = Net.Optifine.Util.ExecutorProxy
  <init>()V = .ctor()
  isShutdown()Z = IsShutdown
  isTerminated()Z = IsTerminated
  awaitTermination(JLjava/util/concurrent/TimeUnit;)Z = AwaitTermination(long, Java.Util.Concurrent.TimeUnit)
  delegate()Ljava/util/concurrent/ExecutorService; = Delegate()
  execute(Ljava/lang/Runnable;)V = Execute(Java.Lang.IRunnable)
  invokeAll(Ljava/util/Collection;)Ljava/util/List; = InvokeAll(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>)
  invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List; = InvokeAll(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>, long, Java.Util.Concurrent.TimeUnit)
  invokeAny(Ljava/util/Collection;)Ljava/lang/Object; = InvokeAny(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>)
  invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object; = InvokeAny(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable>, long, Java.Util.Concurrent.TimeUnit)
  shutdown()V = Shutdown()
  shutdownNow()Ljava/util/List; = ShutdownNow()
  submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future; = Submit(Java.Lang.IRunnable)
  submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future; = Submit(Java.Lang.IRunnable, Java.Lang.Object)
  submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future; = Submit(Java.Util.Concurrent.ICallable)
net/optifine/util/FastArrayList = Net.Optifine.Util.FastArrayList
  <init>(I)V = .ctor(int)
  add(Ljava/lang/Object;)V = Add(Java.Lang.Object)
  clear()V = Clear()
  get(I)Ljava/lang/Object; = Get(int)
  size()I = Size()
net/optifine/util/FastArrayList = Net.Optifine.Util.FastArrayList
  <init>(I)V = .ctor(int)
  add(Ljava/lang/Object;)V = Add(Java.Lang.Object)
  clear()V = Clear()
  get(I)Ljava/lang/Object; = Get(int)
  size()I = Size()
net/optifine/util/FileUtils = Net.Optifine.Util.FileUtils
  <init>()V = .ctor()
  collectFiles(Ljava/io/File;Z)Ljava/util/List; = CollectFiles(Java.IO.File, bool)
  collectFiles(Ljava/io/File;Ljava/lang/String;Ljava/util/List;Z)V = CollectFiles(Java.IO.File, string, System.Collections.Generic.IList<string>, bool)
net/optifine/util/FileUtils = Net.Optifine.Util.FileUtils
  <init>()V = .ctor()
  collectFiles(Ljava/io/File;Z)Ljava/util/List; = CollectFiles(Java.IO.File, bool)
  collectFiles(Ljava/io/File;Ljava/lang/String;Ljava/util/List;Z)V = CollectFiles(Java.IO.File, string, System.Collections.Generic.IList<string>, bool)
net/optifine/util/FlagEvent = Net.Optifine.Util.FlagEvent
  <init>()V = .ctor()
  clear(Ljava/lang/String;)Z = Clear(string)
  isActive(Ljava/lang/String;)Z = IsActive(string)
  isActiveClear(Ljava/lang/String;)Z = IsActiveClear(string)
  set(Ljava/lang/String;)V = Set(string)
net/optifine/util/FlagEvent = Net.Optifine.Util.FlagEvent
  <init>()V = .ctor()
  clear(Ljava/lang/String;)Z = Clear(string)
  isActive(Ljava/lang/String;)Z = IsActive(string)
  isActiveClear(Ljava/lang/String;)Z = IsActiveClear(string)
  set(Ljava/lang/String;)V = Set(string)
net/optifine/util/FontUtils = Net.Optifine.Util.FontUtils
  <init>()V = .ctor()
  readBoolean(Ljava/util/Properties;Ljava/lang/String;Z)Z = ReadBoolean(Java.Util.Properties, string, bool)
  readFloat(Ljava/util/Properties;Ljava/lang/String;F)F = ReadFloat(Java.Util.Properties, string, float)
  reloadFonts()V = ReloadFonts()
net/optifine/util/FontUtils = Net.Optifine.Util.FontUtils
  <init>()V = .ctor()
  readBoolean(Ljava/util/Properties;Ljava/lang/String;Z)Z = ReadBoolean(Java.Util.Properties, string, bool)
  readFloat(Ljava/util/Properties;Ljava/lang/String;F)F = ReadFloat(Java.Util.Properties, string, float)
  reloadFonts()V = ReloadFonts()
net/optifine/util/FrameEvent = Net.Optifine.Util.FrameEvent
  <init>()V = .ctor()
  isActive(Ljava/lang/String;I)Z = IsActive(string, int)
net/optifine/util/FrameEvent = Net.Optifine.Util.FrameEvent
  <init>()V = .ctor()
  isActive(Ljava/lang/String;I)Z = IsActive(string, int)
net/optifine/util/GlUtils = Net.Optifine.Util.GlUtils
  <init>()V = .ctor()
  getBlendState()Lnet/optifine/render/GlBlendState; = BlendState
  getCullState()Lnet/optifine/render/GlCullState; = CullState
  getDepthState()Lnet/optifine/render/GlDepthState; = DepthState
net/optifine/util/GlUtils = Net.Optifine.Util.GlUtils
  <init>()V = .ctor()
  getBlendState()Lnet/optifine/render/GlBlendState; = BlendState
  getCullState()Lnet/optifine/render/GlCullState; = CullState
  getDepthState()Lnet/optifine/render/GlDepthState; = DepthState
net/optifine/util/GpuFrameTimer = Net.Optifine.Util.GpuFrameTimer
  <init>()V = .ctor()
  getGpuLoad()D = GpuLoad
  finishRender()V = FinishRender()
  startRender()V = StartRender()
net/optifine/util/GpuFrameTimer = Net.Optifine.Util.GpuFrameTimer
  <init>()V = .ctor()
  getGpuLoad()D = GpuLoad
  finishRender()V = FinishRender()
  startRender()V = StartRender()
net/optifine/util/GpuMemory = Net.Optifine.Util.GpuMemory
  <init>()V = .ctor()
  getBufferAllocated()J = BufferAllocated
  getTextureAllocated()J = TextureAllocated
  bufferFreed(J)V = BufferFreed(long)
  bufferAllocated(J)V = InvokeBufferAllocated(long)
net/optifine/util/GpuMemory = Net.Optifine.Util.GpuMemory
  <init>()V = .ctor()
  getBufferAllocated()J = BufferAllocated
  getTextureAllocated()J = TextureAllocated
  bufferFreed(J)V = BufferFreed(long)
  bufferAllocated(J)V = InvokeBufferAllocated(long)
net/optifine/util/GuiPoint = Net.Optifine.Util.GuiPoint
  <init>(II)V = .ctor(int, int)
  getX()I = GetX()
  getY()I = GetY()
net/optifine/util/GuiPoint = Net.Optifine.Util.GuiPoint
  <init>(II)V = .ctor(int, int)
  getX()I = GetX()
  getY()I = GetY()
net/optifine/util/GuiRect = Net.Optifine.Util.GuiRect
  <init>(IIII)V = .ctor(int, int, int, int)
  getBottom()I = Bottom
  getLeft()I = Left
  getRight()I = Right
  getTop()I = Top
net/optifine/util/GuiRect = Net.Optifine.Util.GuiRect
  <init>(IIII)V = .ctor(int, int, int, int)
  getBottom()I = Bottom
  getLeft()I = Left
  getRight()I = Right
  getTop()I = Top
net/optifine/util/GuiUtils = Net.Optifine.Util.GuiUtils
  <init>()V = .ctor()
net/optifine/util/GuiUtils = Net.Optifine.Util.GuiUtils
  <init>()V = .ctor()
net/optifine/util/IntArray = Net.Optifine.Util.IntArray
  <init>(I)V = .ctor(int)
  getLimit()I = Limit
  getPosition()I = Position
  clear()V = Clear()
  get(I)I = Get(int)
  getArray()[I = GetArray()
  position(I)V = InvokePosition(int)
  put(I)V = Put(int)
  put(II)V = Put(int, int)
  put([I)V = Put(int[])
  toIntArray()[I = ToIntArray()
  toString()Ljava/lang/String; = ToString()
net/optifine/util/IntArray = Net.Optifine.Util.IntArray
  <init>(I)V = .ctor(int)
  getLimit()I = Limit
  getPosition()I = Position
  clear()V = Clear()
  get(I)I = Get(int)
  getArray()[I = GetArray()
  position(I)V = InvokePosition(int)
  put(I)V = Put(int)
  put(II)V = Put(int, int)
  put([I)V = Put(int[])
  toIntArray()[I = ToIntArray()
net/optifine/util/IntegratedServerUtils = Net.Optifine.Util.IntegratedServerUtils
  <init>()V = .ctor()
net/optifine/util/IntegratedServerUtils = Net.Optifine.Util.IntegratedServerUtils
  <init>()V = .ctor()
net/optifine/util/IntExpiringCache = Net.Optifine.Util.IntExpiringCache
  <init>(I)V = .ctor(int)
  get(I)Ljava/lang/Object; = Get(int)
  make()Ljava/lang/Object; = Make()
net/optifine/util/IntExpiringCache = Net.Optifine.Util.IntExpiringCache
  <init>(I)V = .ctor(int)
  get(I)Ljava/lang/Object; = Get(int)
  make()Ljava/lang/Object; = Make()
net/optifine/util/ItemUtils = Net.Optifine.Util.ItemUtils
  <init>()V = .ctor()
net/optifine/util/ItemUtils = Net.Optifine.Util.ItemUtils
  <init>()V = .ctor()
net/optifine/util/IteratorCache = Net.Optifine.Util.IteratorCache
  <init>()V = .ctor()
  getReadOnly(Ljava/util/List;)Ljava/util/Iterator; = GetReadOnly(System.Collections.IList)
net/optifine/util/IteratorCache = Net.Optifine.Util.IteratorCache
  <init>()V = .ctor()
  getReadOnly(Ljava/util/List;)Ljava/util/Iterator; = GetReadOnly(System.Collections.IList)
net/optifine/util/Json = Net.Optifine.Util.Json
  <init>()V = .ctor()
net/optifine/util/Json = Net.Optifine.Util.Json
  <init>()V = .ctor()
net/optifine/util/KeyUtils = Net.Optifine.Util.KeyUtils
  <init>()V = .ctor()
net/optifine/util/KeyUtils = Net.Optifine.Util.KeyUtils
  <init>()V = .ctor()
net/optifine/util/LineBuffer = Net.Optifine.Util.LineBuffer
  <init>()V = .ctor()
  <init>([Ljava/lang/String;)V = .ctor(string[])
  add(Ljava/lang/String;)V = Add(string)
  add([Ljava/lang/String;)V = Add(string[])
  contains(Ljava/lang/String;)Z = Contains(string)
  get(I)Ljava/lang/String; = Get(int)
  getLines()[Ljava/lang/String; = GetLines()
  indexMatch(Ljava/util/regex/Pattern;)I = IndexMatch(Java.Util.Regex.Pattern)
  indexMatch(Ljava/util/regex/Pattern;I)I = IndexMatch(Java.Util.Regex.Pattern, int)
  indexMatch(Ljava/util/regex/Pattern;IZ)I = IndexMatch(Java.Util.Regex.Pattern, int, bool)
  indexNonMatch(Ljava/util/regex/Pattern;)I = IndexNonMatch(Java.Util.Regex.Pattern)
  indexNonMatch(Ljava/util/regex/Pattern;I)I = IndexNonMatch(Java.Util.Regex.Pattern, int)
  insert(ILjava/lang/String;)V = Insert(int, string)
  insert(I[Ljava/lang/String;)V = Insert(int, string[])
  iterator()Ljava/util/Iterator; = Iterator()
  lastIndexMatch(Ljava/util/regex/Pattern;)I = LastIndexMatch(Java.Util.Regex.Pattern)
  lastIndexMatch(Ljava/util/regex/Pattern;I)I = LastIndexMatch(Java.Util.Regex.Pattern, int)
  lastIndexMatch(Ljava/util/regex/Pattern;IZ)I = LastIndexMatch(Java.Util.Regex.Pattern, int, bool)
  readAll(Ljava/io/Reader;)Lnet/optifine/util/LineBuffer; = ReadAll(Java.IO.Reader)
  remove(I)Ljava/lang/String; = Remove(int)
  remove(Ljava/lang/String;)Z = Remove(string)
  set(ILjava/lang/String;)Ljava/lang/String; = Set(int, string)
  size()I = Size()
  toString()Ljava/lang/String; = ToString()
net/optifine/util/LineBuffer = Net.Optifine.Util.LineBuffer
  <init>()V = .ctor()
  <init>([Ljava/lang/String;)V = .ctor(string[])
  add(Ljava/lang/String;)V = Add(string)
  add([Ljava/lang/String;)V = Add(string[])
  contains(Ljava/lang/String;)Z = Contains(string)
  get(I)Ljava/lang/String; = Get(int)
  getLines()[Ljava/lang/String; = GetLines()
  indexMatch(Ljava/util/regex/Pattern;)I = IndexMatch(Java.Util.Regex.Pattern)
  indexMatch(Ljava/util/regex/Pattern;I)I = IndexMatch(Java.Util.Regex.Pattern, int)
  indexMatch(Ljava/util/regex/Pattern;IZ)I = IndexMatch(Java.Util.Regex.Pattern, int, bool)
  indexNonMatch(Ljava/util/regex/Pattern;)I = IndexNonMatch(Java.Util.Regex.Pattern)
  indexNonMatch(Ljava/util/regex/Pattern;I)I = IndexNonMatch(Java.Util.Regex.Pattern, int)
  insert(ILjava/lang/String;)V = Insert(int, string)
  insert(I[Ljava/lang/String;)V = Insert(int, string[])
  iterator()Ljava/util/Iterator; = Iterator()
  lastIndexMatch(Ljava/util/regex/Pattern;)I = LastIndexMatch(Java.Util.Regex.Pattern)
  lastIndexMatch(Ljava/util/regex/Pattern;I)I = LastIndexMatch(Java.Util.Regex.Pattern, int)
  lastIndexMatch(Ljava/util/regex/Pattern;IZ)I = LastIndexMatch(Java.Util.Regex.Pattern, int, bool)
  readAll(Ljava/io/Reader;)Lnet/optifine/util/LineBuffer; = ReadAll(Java.IO.Reader)
  remove(I)Ljava/lang/String; = Remove(int)
  remove(Ljava/lang/String;)Z = Remove(string)
  set(ILjava/lang/String;)Ljava/lang/String; = Set(int, string)
  size()I = Size()
net/optifine/util/LinkedList = Net.Optifine.Util.LinkedList
  <init>()V = .ctor()
  getFirst()Lnet/optifine/util/LinkedList$Node; = First
  isEmpty()Z = IsEmpty
  getLast()Lnet/optifine/util/LinkedList$Node; = Last
  getSize()I = Size
  addAfter(Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;)V = AddAfter(Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node)
  addFirst(Lnet/optifine/util/LinkedList$Node;)V = AddFirst(Net.Optifine.Util.LinkedList.Node)
  addLast(Lnet/optifine/util/LinkedList$Node;)V = AddLast(Net.Optifine.Util.LinkedList.Node)
  contains(Lnet/optifine/util/LinkedList$Node;)Z = Contains(Net.Optifine.Util.LinkedList.Node)
  find(Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;)Z = Find(Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node)
  iterator()Ljava/util/Iterator; = Iterator()
  moveAfter(Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;)V = MoveAfter(Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node)
  remove(Lnet/optifine/util/LinkedList$Node;)Lnet/optifine/util/LinkedList$Node; = Remove(Net.Optifine.Util.LinkedList.Node)
  toString()Ljava/lang/String; = ToString()
net/optifine/util/LinkedList = Net.Optifine.Util.LinkedList
  <init>()V = .ctor()
  getFirst()Lnet/optifine/util/LinkedList$Node; = First
  isEmpty()Z = IsEmpty
  getLast()Lnet/optifine/util/LinkedList$Node; = Last
  getSize()I = Size
  addAfter(Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;)V = AddAfter(Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node)
  addFirst(Lnet/optifine/util/LinkedList$Node;)V = AddFirst(Net.Optifine.Util.LinkedList.Node)
  addLast(Lnet/optifine/util/LinkedList$Node;)V = AddLast(Net.Optifine.Util.LinkedList.Node)
  contains(Lnet/optifine/util/LinkedList$Node;)Z = Contains(Net.Optifine.Util.LinkedList.Node)
  find(Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;)Z = Find(Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node)
  iterator()Ljava/util/Iterator; = Iterator()
  moveAfter(Lnet/optifine/util/LinkedList$Node;Lnet/optifine/util/LinkedList$Node;)V = MoveAfter(Net.Optifine.Util.LinkedList.Node, Net.Optifine.Util.LinkedList.Node)
  remove(Lnet/optifine/util/LinkedList$Node;)Lnet/optifine/util/LinkedList$Node; = Remove(Net.Optifine.Util.LinkedList.Node)
net/optifine/util/LinkedListTest = Net.Optifine.Util.LinkedListTest
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/LinkedListTest = Net.Optifine.Util.LinkedListTest
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/LockCounter = Net.Optifine.Util.LockCounter
  <init>()V = .ctor()
  isLocked()Z = IsLocked
  getLockCount()I = LockCount
  lock()Z = Lock()
  toString()Ljava/lang/String; = ToString()
  unlock()Z = Unlock()
net/optifine/util/LockCounter = Net.Optifine.Util.LockCounter
  <init>()V = .ctor()
  isLocked()Z = IsLocked
  getLockCount()I = LockCount
  lock()Z = Lock()
  unlock()Z = Unlock()
net/optifine/util/MathUtils = Net.Optifine.Util.MathUtils
  <init>()V = .ctor()
  PI = Pi
  PI2 = Pi2
  PId2 = PId2
  acos(F)F = Acos(float)
  asin(F)F = Asin(float)
  distanceSq(DDDDDD)D = DistanceSq(double, double, double, double, double, double)
  distanceSq(FFFFFF)F = DistanceSq(float, float, float, float, float, float)
  equalsDelta(FFF)Z = EqualsDelta(float, float, float)
  getAverage([I)I = GetAverage(int[])
  getSum([I)I = GetSum(int[])
  roundDownToPowerOfTwo(I)I = RoundDownToPowerOfTwo(int)
  roundToFloat(D)F = RoundToFloat(double)
  toDeg(F)F = ToDeg(float)
  toRad(F)F = ToRad(float)
net/optifine/util/MathUtils = Net.Optifine.Util.MathUtils
  <init>()V = .ctor()
  PI = Pi
  PI2 = Pi2
  PId2 = PId2
  acos(F)F = Acos(float)
  asin(F)F = Asin(float)
  distanceSq(DDDDDD)D = DistanceSq(double, double, double, double, double, double)
  distanceSq(FFFFFF)F = DistanceSq(float, float, float, float, float, float)
  equalsDelta(FFF)Z = EqualsDelta(float, float, float)
  getAverage([I)I = GetAverage(int[])
  getSum([I)I = GetSum(int[])
  roundDownToPowerOfTwo(I)I = RoundDownToPowerOfTwo(int)
  roundToFloat(D)F = RoundToFloat(double)
  toDeg(F)F = ToDeg(float)
  toRad(F)F = ToRad(float)
net/optifine/util/MathUtilsTest = Net.Optifine.Util.MathUtilsTest
  <init>()V = .ctor()
  dbg(Ljava/lang/String;)V = Dbg(string)
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/MathUtilsTest = Net.Optifine.Util.MathUtilsTest
  <init>()V = .ctor()
  dbg(Ljava/lang/String;)V = Dbg(string)
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/MemoryMonitor = Net.Optifine.Util.MemoryMonitor
  <init>()V = .ctor()
  getAllocationRateAvgMb()J = AllocationRateAvgMb
  getAllocationRateMb()J = AllocationRateMb
  getGcRateMb()J = GcRateMb
  isGcEvent()Z = IsGcEvent
  getStartMemoryMb()J = StartMemoryMb
  getStartTimeMs()J = StartTimeMs
  update()V = Update()
net/optifine/util/MemoryMonitor = Net.Optifine.Util.MemoryMonitor
  <init>()V = .ctor()
  getAllocationRateAvgMb()J = AllocationRateAvgMb
  getAllocationRateMb()J = AllocationRateMb
  getGcRateMb()J = GcRateMb
  isGcEvent()Z = IsGcEvent
  getStartMemoryMb()J = StartMemoryMb
  getStartTimeMs()J = StartTimeMs
  update()V = Update()
net/optifine/util/NativeMemory = Net.Optifine.Util.NativeMemory
  <init>()V = .ctor()
  getBufferAllocated()J = BufferAllocated
  getBufferMaximum()J = BufferMaximum
  getImageAllocated()J = ImageAllocated
net/optifine/util/NativeMemory = Net.Optifine.Util.NativeMemory
  <init>()V = .ctor()
  getBufferAllocated()J = BufferAllocated
  getBufferMaximum()J = BufferMaximum
  getImageAllocated()J = ImageAllocated
net/optifine/util/NumUtils = Net.Optifine.Util.NumUtils
  <init>()V = .ctor()
  limit(DDD)D = Limit(double, double, double)
  limit(FFF)F = Limit(float, float, float)
  limit(III)I = Limit(int, int, int)
  mod(II)I = Mod(int, int)
net/optifine/util/NumUtils = Net.Optifine.Util.NumUtils
  <init>()V = .ctor()
  limit(DDD)D = Limit(double, double, double)
  limit(FFF)F = Limit(float, float, float)
  limit(III)I = Limit(int, int, int)
  mod(II)I = Mod(int, int)
net/optifine/util/PacketRunnable = Net.Optifine.Util.PacketRunnable
  run()V = Run()
  toString()Ljava/lang/String; = ToString()
net/optifine/util/PacketRunnable = Net.Optifine.Util.PacketRunnable
  run()V = Run()
net/optifine/util/PairInt = Net.Optifine.Util.PairInt
  <init>(II)V = .ctor(int, int)
  getLeft()I = Left
  getRight()I = Right
  equals(Ljava/lang/Object;)Z = Equals(Java.Lang.Object)
  hashCode()I = GetHashCode()
  of(II)Lnet/optifine/util/PairInt; = Of(int, int)
  toString()Ljava/lang/String; = ToString()
net/optifine/util/PairInt = Net.Optifine.Util.PairInt
  <init>(II)V = .ctor(int, int)
  getLeft()I = Left
  getRight()I = Right
  of(II)Lnet/optifine/util/PairInt; = Of(int, int)
net/optifine/util/PotionUtils = Net.Optifine.Util.PotionUtils
  <init>()V = .ctor()
net/optifine/util/PotionUtils = Net.Optifine.Util.PotionUtils
  <init>()V = .ctor()
net/optifine/util/PropertiesOrdered = Net.Optifine.Util.PropertiesOrdered
  <init>()V = .ctor()
  keys()Ljava/util/Enumeration; = Keys()
  keySet()Ljava/util/Set; = KeySet()
  put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; = Put(Java.Lang.Object, Java.Lang.Object)
net/optifine/util/PropertiesOrdered = Net.Optifine.Util.PropertiesOrdered
  <init>()V = .ctor()
  keys()Ljava/util/Enumeration; = Keys()
  keySet()Ljava/util/Set; = KeySet()
  put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; = Put(Java.Lang.Object, Java.Lang.Object)
net/optifine/util/RandomUtils = Net.Optifine.Util.RandomUtils
  <init>()V = .ctor()
  getRandom()Ljava/util/Random; = Random
  getRandomBytes(I)[B = GetRandomBytes(int)
  getRandomInt(I)I = GetRandomInt(int)
net/optifine/util/RandomUtils = Net.Optifine.Util.RandomUtils
  <init>()V = .ctor()
  getRandom()Ljava/util/Random; = Random
  getRandomBytes(I)[B = GetRandomBytes(int)
  getRandomInt(I)I = GetRandomInt(int)
net/optifine/util/RenderChunkUtils = Net.Optifine.Util.RenderChunkUtils
  <init>()V = .ctor()
  getRelativeBufferSize(I)D = GetRelativeBufferSize(int)
net/optifine/util/RenderChunkUtils = Net.Optifine.Util.RenderChunkUtils
  <init>()V = .ctor()
  getRelativeBufferSize(I)D = GetRelativeBufferSize(int)
net/optifine/util/ResUtils = Net.Optifine.Util.ResUtils
  <init>()V = .ctor()
  collectFiles(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = CollectFiles(string, string)
  collectFiles([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String; = CollectFiles(string[], string[])
  readProperties(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/Properties; = ReadProperties(System.IO.Stream, string)
  readProperties(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties; = ReadProperties(string, string)
net/optifine/util/ResUtils = Net.Optifine.Util.ResUtils
  <init>()V = .ctor()
  collectFiles(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = CollectFiles(string, string)
  collectFiles([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String; = CollectFiles(string[], string[])
  readProperties(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/Properties; = ReadProperties(System.IO.Stream, string)
  readProperties(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties; = ReadProperties(string, string)
net/optifine/util/SingleIterable = Net.Optifine.Util.SingleIterable
  <init>()V = .ctor()
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  hasNext()Z = HasNext
  iterator()Ljava/util/Iterator; = Iterator()
  next()Ljava/lang/Object; = Next()
  setValue(Ljava/lang/Object;)V = SetValue(Java.Lang.Object)
net/optifine/util/SingleIterable = Net.Optifine.Util.SingleIterable
  <init>()V = .ctor()
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  hasNext()Z = HasNext
  iterator()Ljava/util/Iterator; = Iterator()
  next()Ljava/lang/Object; = Next()
  setValue(Ljava/lang/Object;)V = SetValue(Java.Lang.Object)
net/optifine/util/SmoothFloat = Net.Optifine.Util.SmoothFloat
  <init>(FF)V = .ctor(float, float)
  <init>(FFF)V = .ctor(float, float, float)
  getTimeFadeDownSec()F = TimeFadeDownSec
  getTimeFadeUpSec()F = TimeFadeUpSec
  getTimeLastMs()J = TimeLastMs
  getValueLast()F = ValueLast
  getSmoothValue(F)F = GetSmoothValue(float)
  getSmoothValue(FFF)F = GetSmoothValue(float, float, float)
  getSmoothValue(FFFF)F = GetSmoothValue(float, float, float, float)
net/optifine/util/SmoothFloat = Net.Optifine.Util.SmoothFloat
  <init>(FF)V = .ctor(float, float)
  <init>(FFF)V = .ctor(float, float, float)
  getTimeFadeDownSec()F = TimeFadeDownSec
  getTimeFadeUpSec()F = TimeFadeUpSec
  getTimeLastMs()J = TimeLastMs
  getValueLast()F = ValueLast
  getSmoothValue(F)F = GetSmoothValue(float)
  getSmoothValue(FFF)F = GetSmoothValue(float, float, float)
  getSmoothValue(FFFF)F = GetSmoothValue(float, float, float, float)
net/optifine/util/StaticMap = Net.Optifine.Util.StaticMap
  <init>()V = .ctor()
  addLong(Ljava/lang/String;JJ)J = AddLong(string, long, long)
  contains(Ljava/lang/String;)Z = Contains(string)
  contains(Ljava/lang/String;Ljava/lang/Object;)Z = Contains(string, Java.Lang.Object)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  getInt(Ljava/lang/String;I)I = GetInt(string, int)
  getLong(Ljava/lang/String;J)J = GetLong(string, long)
  put(Ljava/lang/String;Ljava/lang/Object;)V = Put(string, Java.Lang.Object)
  putInt(Ljava/lang/String;I)I = PutInt(string, int)
  putLong(Ljava/lang/String;J)V = PutLong(string, long)
  putLong(Ljava/lang/String;JJ)J = PutLong(string, long, long)
  remove(Ljava/lang/String;)V = Remove(string)
net/optifine/util/StaticMap = Net.Optifine.Util.StaticMap
  <init>()V = .ctor()
  addLong(Ljava/lang/String;JJ)J = AddLong(string, long, long)
  contains(Ljava/lang/String;)Z = Contains(string)
  contains(Ljava/lang/String;Ljava/lang/Object;)Z = Contains(string, Java.Lang.Object)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  getInt(Ljava/lang/String;I)I = GetInt(string, int)
  getLong(Ljava/lang/String;J)J = GetLong(string, long)
  put(Ljava/lang/String;Ljava/lang/Object;)V = Put(string, Java.Lang.Object)
  putInt(Ljava/lang/String;I)I = PutInt(string, int)
  putLong(Ljava/lang/String;J)V = PutLong(string, long)
  putLong(Ljava/lang/String;JJ)J = PutLong(string, long, long)
  remove(Ljava/lang/String;)V = Remove(string)
net/optifine/util/StaticMultiMap = Net.Optifine.Util.StaticMultiMap
  <init>()V = .ctor()
  contains(Ljava/lang/String;Ljava/lang/String;)Z = Contains(string, string)
  contains(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z = Contains(string, string, Java.Lang.Object)
  containsValue(Ljava/lang/String;Ljava/lang/Object;)Z = ContainsValue(string, Java.Lang.Object)
  get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; = Get(string, string)
  getMap(Ljava/lang/String;)Ljava/util/Map; = GetMap(string)
  put(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V = Put(string, string, Java.Lang.Object)
net/optifine/util/StaticMultiMap = Net.Optifine.Util.StaticMultiMap
  <init>()V = .ctor()
  contains(Ljava/lang/String;Ljava/lang/String;)Z = Contains(string, string)
  contains(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z = Contains(string, string, Java.Lang.Object)
  containsValue(Ljava/lang/String;Ljava/lang/Object;)Z = ContainsValue(string, Java.Lang.Object)
  get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; = Get(string, string)
  getMap(Ljava/lang/String;)Ljava/util/Map; = GetMap(string)
  put(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V = Put(string, string, Java.Lang.Object)
net/optifine/util/StrUtils = Net.Optifine.Util.StrUtils
  <init>()V = .ctor()
  addIfNotContains(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = AddIfNotContains(string, string)
  addPrefixCheck(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = AddPrefixCheck(string, string)
  addSuffixCheck(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = AddSuffixCheck(string, string)
  endsWith(Ljava/lang/String;[Ljava/lang/String;)Z = EndsWith(string, string[])
  endsWithDigit(Ljava/lang/String;)Z = EndsWithDigit(string)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  equalsMask(Ljava/lang/String;Ljava/lang/String;C)Z = EqualsMask(string, string, char)
  equalsMask(Ljava/lang/String;Ljava/lang/String;CC)Z = EqualsMask(string, string, char, char)
  equalsMask(Ljava/lang/String;[Ljava/lang/String;C)Z = EqualsMask(string, string[], char)
  equalsTrim(Ljava/lang/String;Ljava/lang/String;)Z = EqualsTrim(string, string)
  fillLeft(Ljava/lang/String;IC)Ljava/lang/String; = FillLeft(string, int, char)
  fillRight(Ljava/lang/String;IC)Ljava/lang/String; = FillRight(string, int, char)
  findPrefix([Ljava/lang/String;Ljava/lang/String;)I = FindPrefix(string[], string)
  findSuffix([Ljava/lang/String;Ljava/lang/String;)I = FindSuffix(string[], string)
  getSegment(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetSegment(string, string, string)
  isEmpty(Ljava/lang/String;)Z = IsEmpty(string)
  isFilled(Ljava/lang/String;)Z = IsFilled(string)
  parseInt(Ljava/lang/String;I)I = ParseInt(string, int)
  remove([Ljava/lang/String;II)[Ljava/lang/String; = Remove(string[], int, int)
  removePrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string)
  removePrefix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string[])
  removePrefixSuffix(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemovePrefixSuffix(string, string, string)
  removePrefixSuffix(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemovePrefixSuffix(string, string[], string[])
  removeSuffix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemoveSuffix(string, string)
  removeSuffix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemoveSuffix(string, string[])
  replaceChar(Ljava/lang/String;CC)Ljava/lang/String; = ReplaceChar(string, char, char)
  replacePrefix(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReplacePrefix(string, string, string)
  replaceString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReplaceString(string, string, string)
  replaceStrings(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = ReplaceStrings(string, string[], string[])
  replaceSuffix(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReplaceSuffix(string, string, string)
  split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = Split(string, string)
  startsWith(Ljava/lang/String;[Ljava/lang/String;)Z = StartsWith(string, string[])
  stringInc(Ljava/lang/String;)Ljava/lang/String; = StringInc(string)
  trim(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = Trim(string, string)
  trimLeading(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = TrimLeading(string, string)
  trimTrailing(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = TrimTrailing(string, string)
net/optifine/util/StrUtils = Net.Optifine.Util.StrUtils
  <init>()V = .ctor()
  addIfNotContains(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = AddIfNotContains(string, string)
  addPrefixCheck(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = AddPrefixCheck(string, string)
  addSuffixCheck(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = AddSuffixCheck(string, string)
  endsWith(Ljava/lang/String;[Ljava/lang/String;)Z = EndsWith(string, string[])
  endsWithDigit(Ljava/lang/String;)Z = EndsWithDigit(string)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  equalsMask(Ljava/lang/String;Ljava/lang/String;C)Z = EqualsMask(string, string, char)
  equalsMask(Ljava/lang/String;Ljava/lang/String;CC)Z = EqualsMask(string, string, char, char)
  equalsMask(Ljava/lang/String;[Ljava/lang/String;C)Z = EqualsMask(string, string[], char)
  equalsTrim(Ljava/lang/String;Ljava/lang/String;)Z = EqualsTrim(string, string)
  fillLeft(Ljava/lang/String;IC)Ljava/lang/String; = FillLeft(string, int, char)
  fillRight(Ljava/lang/String;IC)Ljava/lang/String; = FillRight(string, int, char)
  findPrefix([Ljava/lang/String;Ljava/lang/String;)I = FindPrefix(string[], string)
  findSuffix([Ljava/lang/String;Ljava/lang/String;)I = FindSuffix(string[], string)
  getSegment(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetSegment(string, string, string)
  isEmpty(Ljava/lang/String;)Z = IsEmpty(string)
  isFilled(Ljava/lang/String;)Z = IsFilled(string)
  parseInt(Ljava/lang/String;I)I = ParseInt(string, int)
  remove([Ljava/lang/String;II)[Ljava/lang/String; = Remove(string[], int, int)
  removePrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string)
  removePrefix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string[])
  removePrefixSuffix(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemovePrefixSuffix(string, string, string)
  removePrefixSuffix(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemovePrefixSuffix(string, string[], string[])
  removeSuffix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemoveSuffix(string, string)
  removeSuffix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemoveSuffix(string, string[])
  replaceChar(Ljava/lang/String;CC)Ljava/lang/String; = ReplaceChar(string, char, char)
  replacePrefix(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReplacePrefix(string, string, string)
  replaceString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReplaceString(string, string, string)
  replaceStrings(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = ReplaceStrings(string, string[], string[])
  replaceSuffix(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = ReplaceSuffix(string, string, string)
  split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = Split(string, string)
  startsWith(Ljava/lang/String;[Ljava/lang/String;)Z = StartsWith(string, string[])
  stringInc(Ljava/lang/String;)Ljava/lang/String; = StringInc(string)
  trim(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = Trim(string, string)
  trimLeading(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = TrimLeading(string, string)
  trimTrailing(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = TrimTrailing(string, string)
net/optifine/util/TestBuffers = Net.Optifine.Util.TestBuffers
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/TestBuffers = Net.Optifine.Util.TestBuffers
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
net/optifine/util/TextureUtils = Net.Optifine.Util.TextureUtils
  <init>()V = .ctor()
  SPRITE_PREFIX_BLOCKS = SpritePrefixBlocks
  SPRITE_PREFIX_ITEMS = SpritePrefixItems
  getGLMaximumTextureSize()I = GLMaximumTextureSize
  applyAnisotropicLevel()V = ApplyAnisotropicLevel()
  bindTexture(I)V = BindTexture(int)
  ceilPowerOfTwo(I)I = CeilPowerOfTwo(int)
  debugTextureDeleted(I)V = DebugTextureDeleted(int)
  debugTextureGenerated(I)V = DebugTextureGenerated(int)
  fixResourcePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = FixResourcePath(string, string)
  getBasePath(Ljava/lang/String;)Ljava/lang/String; = GetBasePath(string)
  getPowerOfTwo(I)I = GetPowerOfTwo(int)
  getStackTrace(Ljava/lang/Throwable;)Ljava/lang/String; = GetStackTrace(Java.Lang.Throwable)
  isPowerOfTwo(I)Z = IsPowerOfTwo(int)
  registerResourceListener()V = RegisterResourceListener()
  registerTickableTextures()V = RegisterTickableTextures()
  resetDataUnpacking()V = ResetDataUnpacking()
  saveGlTexture(Ljava/lang/String;IIII)V = SaveGlTexture(string, int, int, int, int)
  scaleToGrid(II)I = ScaleToGrid(int, int)
  scaleToMin(II)I = ScaleToMin(int, int)
  toAbgr(I)I = ToAbgr(int)
  twoToPower(I)I = TwoToPower(int)
  update()V = Update()
net/optifine/util/TextureUtils = Net.Optifine.Util.TextureUtils
  <init>()V = .ctor()
  SPRITE_PREFIX_BLOCKS = SpritePrefixBlocks
  SPRITE_PREFIX_ITEMS = SpritePrefixItems
  getGLMaximumTextureSize()I = GLMaximumTextureSize
  applyAnisotropicLevel()V = ApplyAnisotropicLevel()
  bindTexture(I)V = BindTexture(int)
  ceilPowerOfTwo(I)I = CeilPowerOfTwo(int)
  debugTextureDeleted(I)V = DebugTextureDeleted(int)
  debugTextureGenerated(I)V = DebugTextureGenerated(int)
  fixResourcePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = FixResourcePath(string, string)
  getBasePath(Ljava/lang/String;)Ljava/lang/String; = GetBasePath(string)
  getPowerOfTwo(I)I = GetPowerOfTwo(int)
  getStackTrace(Ljava/lang/Throwable;)Ljava/lang/String; = GetStackTrace(Java.Lang.Throwable)
  isPowerOfTwo(I)Z = IsPowerOfTwo(int)
  registerResourceListener()V = RegisterResourceListener()
  registerTickableTextures()V = RegisterTickableTextures()
  resetDataUnpacking()V = ResetDataUnpacking()
  saveGlTexture(Ljava/lang/String;IIII)V = SaveGlTexture(string, int, int, int, int)
  scaleToGrid(II)I = ScaleToGrid(int, int)
  scaleToMin(II)I = ScaleToMin(int, int)
  toAbgr(I)I = ToAbgr(int)
  twoToPower(I)I = TwoToPower(int)
  update()V = Update()
net/optifine/util/TileEntityUtils = Net.Optifine.Util.TileEntityUtils
  <init>()V = .ctor()
net/optifine/util/TileEntityUtils = Net.Optifine.Util.TileEntityUtils
  <init>()V = .ctor()
net/optifine/util/TimedEvent = Net.Optifine.Util.TimedEvent
  <init>()V = .ctor()
  isActive(Ljava/lang/String;J)Z = IsActive(string, long)
net/optifine/util/TimedEvent = Net.Optifine.Util.TimedEvent
  <init>()V = .ctor()
  isActive(Ljava/lang/String;J)Z = IsActive(string, long)
net/optifine/util/UnsafeUtils = Net.Optifine.Util.UnsafeUtils
  <init>()V = .ctor()
  setStaticInt(Ljava/lang/reflect/Field;I)V = SetStaticInt(Java.Lang.Reflect.Field, int)
net/optifine/util/UnsafeUtils = Net.Optifine.Util.UnsafeUtils
  <init>()V = .ctor()
  setStaticInt(Ljava/lang/reflect/Field;I)V = SetStaticInt(Java.Lang.Reflect.Field, int)
net/optifine/util/VideoModeComparator = Net.Optifine.Util.VideoModeComparator
  <init>()V = .ctor()
net/optifine/util/WorldUtils = Net.Optifine.Util.WorldUtils
  <init>()V = .ctor()
net/optifine/util/WorldUtils = Net.Optifine.Util.WorldUtils
  <init>()V = .ctor()
net/optifine/VersionCheckThread = Net.Optifine.VersionCheckThread
  <init>()V = .ctor()
  run()V = Run()
net/optifine/VersionCheckThread = Net.Optifine.VersionCheckThread
  <init>()V = .ctor()
optifine/AccessFixer = Optifine.AccessFixer
  <init>()V = .ctor()
optifine/Differ = Optifine.Differ
  <init>()V = .ctor()
  detectBaseFile(Ljava/io/File;)Ljava/io/File; = DetectBaseFile(Java.IO.File)
  main([Ljava/lang/String;)V = Main(string[])
  makeDiff(Ljava/lang/String;[B[Ljava/util/regex/Pattern;Ljava/util/Map;Ljava/util/zip/ZipFile;)[B = MakeDiff(string, byte[], Java.Util.Regex.Pattern[], System.Collections.Generic.IDictionary<string, string>, Java.Util.Zip.ZipFile)
optifine/HashUtils = Optifine.HashUtils
  <init>()V = .ctor()
  getHash([BLjava/lang/String;)[B = GetHash(byte[], string)
  getHash(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetHash(string, string)
  getHashMd5([B)[B = GetHashMd5(byte[])
  getHashMd5(Ljava/lang/String;)Ljava/lang/String; = GetHashMd5(string)
  getHashSha1([B)[B = GetHashSha1(byte[])
  getHashSha1(Ljava/lang/String;)Ljava/lang/String; = GetHashSha1(string)
  getHashSha256([B)[B = GetHashSha256(byte[])
  getHashSha256(Ljava/lang/String;)Ljava/lang/String; = GetHashSha256(string)
  toHexString([B)Ljava/lang/String; = ToHexString(byte[])
optifine/Installer = Optifine.Installer
  <init>()V = .ctor()
  isPatchFile()Z = IsPatchFile
  getOptiFineVersion()Ljava/lang/String; = OptiFineVersion
  getOptiFineZipFile()Ljava/io/File; = OptiFineZipFile
  doExtract(Ljava/io/File;)Z = DoExtract(Java.IO.File)
  doInstall(Ljava/io/File;)V = DoInstall(Java.IO.File)
  getMinecraftVersionFromOfVersion(Ljava/lang/String;)Ljava/lang/String; = GetMinecraftVersionFromOfVersion(string)
  getOptiFineEdition([Ljava/lang/String;)Ljava/lang/String; = GetOptiFineEdition(string[])
  getOptiFineVersion(Ljava/io/InputStream;)Ljava/lang/String; = GetOptiFineVersion(System.IO.Stream)
  getOptiFineVersion(Ljava/util/zip/ZipFile;)Ljava/lang/String; = GetOptiFineVersion(Java.Util.Zip.ZipFile)
  main([Ljava/lang/String;)V = Main(string[])
optifine/IOptiFineResourceLocator = Optifine.IOptiFineResourceLocator
  getOptiFineResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetOptiFineResourceStream(string)
optifine/IResourceProvider = Optifine.IResourceProvider
  getResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceStream(string)
optifine/json/ContainerFactory = Optifine.Json.IContainerFactory
  creatArrayContainer()Ljava/util/List; = CreatArrayContainer()
  createObjectContainer()Ljava/util/Map; = CreateObjectContainer()
optifine/json/ContentHandler = Optifine.Json.IContentHandler
  endArray()Z = EndArray()
  endJSON()V = EndJSON()
  endObject()Z = EndObject()
  endObjectEntry()Z = EndObjectEntry()
  primitive(Ljava/lang/Object;)Z = Primitive(Java.Lang.Object)
  startArray()Z = StartArray()
  startJSON()V = StartJSON()
  startObject()Z = StartObject()
  startObjectEntry(Ljava/lang/String;)Z = StartObjectEntry(string)
optifine/json/ItemList = Optifine.Json.ItemList
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  <init>(Ljava/lang/String;Ljava/lang/String;Z)V = .ctor(string, string, bool)
  getItems()Ljava/util/List; = Items
  add(ILjava/lang/String;)V = Add(int, string)
  add(Ljava/lang/String;)V = Add(string)
  addAll(Ljava/lang/String;)V = AddAll(string)
  addAll(Ljava/lang/String;Ljava/lang/String;)V = AddAll(string, string)
  addAll(Ljava/lang/String;Ljava/lang/String;Z)V = AddAll(string, string, bool)
  addAll(Loptifine/json/ItemList;)V = AddAll(Optifine.Json.ItemList)
  clear()V = Clear()
  get(I)Ljava/lang/String; = Get(int)
  getArray()[Ljava/lang/String; = GetArray()
  reset()V = Reset()
  setSP(Ljava/lang/String;)V = SetSP(string)
  size()I = Size()
  split(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V = Split(string, string, System.Collections.IList)
  split(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V = Split(string, string, System.Collections.IList, bool)
  toString(Ljava/lang/String;)Ljava/lang/String; = ToString(string)
optifine/json/JSONArray = Optifine.Json.JSONArray
  <init>()V = .ctor()
  toJSONString()Ljava/lang/String; = ToJSONString()
  toJSONString(Ljava/util/List;)Ljava/lang/String; = ToJSONString(System.Collections.IList)
  writeJSONString(Ljava/io/Writer;)V = WriteJSONString(Java.IO.Writer)
  writeJSONString(Ljava/util/List;Ljava/io/Writer;)V = WriteJSONString(System.Collections.IList, Java.IO.Writer)
optifine/json/JSONAware = Optifine.Json.IJSONAware
  toJSONString()Ljava/lang/String; = ToJSONString()
optifine/json/JSONObject = Optifine.Json.JSONObject
  <init>()V = .ctor()
  escape(Ljava/lang/String;)Ljava/lang/String; = Escape(string)
  toJSONString()Ljava/lang/String; = ToJSONString()
  toJSONString(Ljava/util/Map;)Ljava/lang/String; = ToJSONString(System.Collections.IDictionary)
  toString(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String; = ToString(string, Java.Lang.Object)
  writeJSONString(Ljava/io/Writer;)V = WriteJSONString(Java.IO.Writer)
  writeJSONString(Ljava/util/Map;Ljava/io/Writer;)V = WriteJSONString(System.Collections.IDictionary, Java.IO.Writer)
optifine/json/JSONParser = Optifine.Json.JSONParser
  <init>()V = .ctor()
  S_END = SEnd
  S_IN_ARRAY = SInArray
  S_IN_ERROR = SInError
  S_IN_FINISHED_VALUE = SInFinishedValue
  S_INIT = SInit
  S_IN_OBJECT = SInObject
  S_IN_PAIR_VALUE = SInPairValue
  S_PASSED_PAIR_KEY = SPassedPairKey
  getPosition()I = Position
  parse(Ljava/io/Reader;)Ljava/lang/Object; = Parse(Java.IO.Reader)
  parse(Ljava/io/Reader;Loptifine/json/ContainerFactory;)Ljava/lang/Object; = Parse(Java.IO.Reader, Optifine.Json.IContainerFactory)
  parse(Ljava/io/Reader;Loptifine/json/ContentHandler;)V = Parse(Java.IO.Reader, Optifine.Json.IContentHandler)
  parse(Ljava/io/Reader;Loptifine/json/ContentHandler;Z)V = Parse(Java.IO.Reader, Optifine.Json.IContentHandler, bool)
  parse(Ljava/lang/String;)Ljava/lang/Object; = Parse(string)
  parse(Ljava/lang/String;Loptifine/json/ContainerFactory;)Ljava/lang/Object; = Parse(string, Optifine.Json.IContainerFactory)
  parse(Ljava/lang/String;Loptifine/json/ContentHandler;)V = Parse(string, Optifine.Json.IContentHandler)
  parse(Ljava/lang/String;Loptifine/json/ContentHandler;Z)V = Parse(string, Optifine.Json.IContentHandler, bool)
  parseDate(Ljava/lang/String;)Ljava/util/Date; = ParseDate(string)
  reset()V = Reset()
  reset(Ljava/io/Reader;)V = Reset(Java.IO.Reader)
optifine/json/JSONStreamAware = Optifine.Json.IJSONStreamAware
  writeJSONString(Ljava/io/Writer;)V = WriteJSONString(Java.IO.Writer)
optifine/json/JSONValue = Optifine.Json.JSONValue
  <init>()V = .ctor()
  escape(Ljava/lang/String;)Ljava/lang/String; = Escape(string)
  parse(Ljava/io/Reader;)Ljava/lang/Object; = Parse(Java.IO.Reader)
  parse(Ljava/lang/String;)Ljava/lang/Object; = Parse(string)
  parseWithException(Ljava/io/Reader;)Ljava/lang/Object; = ParseWithException(Java.IO.Reader)
  parseWithException(Ljava/lang/String;)Ljava/lang/Object; = ParseWithException(string)
  toJSONString(Ljava/lang/Object;)Ljava/lang/String; = ToJSONString(Java.Lang.Object)
  writeJSONString(Ljava/lang/Object;Ljava/io/Writer;)V = WriteJSONString(Java.Lang.Object, Java.IO.Writer)
optifine/json/JSONWriter = Optifine.Json.JSONWriter
  <init>(Ljava/io/Writer;)V = .ctor(Java.IO.Writer)
  <init>(Ljava/io/Writer;I)V = .ctor(Java.IO.Writer, int)
  <init>(Ljava/io/Writer;II)V = .ctor(Java.IO.Writer, int, int)
  writeObject(Ljava/lang/Object;)V = WriteObject(Java.Lang.Object)
optifine/json/ParseException = Optifine.Json.ParseException
  <init>(I)V = .ctor(int)
  <init>(IILjava/lang/Object;)V = .ctor(int, int, Java.Lang.Object)
  <init>(ILjava/lang/Object;)V = .ctor(int, Java.Lang.Object)
  ERROR_UNEXPECTED_CHAR = ErrorUnexpectedChar
  ERROR_UNEXPECTED_EXCEPTION = ErrorUnexpectedException
  ERROR_UNEXPECTED_TOKEN = ErrorUnexpectedToken
  getErrorType()I = ErrorType
  setErrorType(I)V = ErrorType
  getPosition()I = Position
  setPosition(I)V = Position
  getUnexpectedObject()Ljava/lang/Object; = UnexpectedObject
  setUnexpectedObject(Ljava/lang/Object;)V = UnexpectedObject
  toString()Ljava/lang/String; = ToString()
optifine/json/Yytoken = Optifine.Json.Yytoken
  <init>(ILjava/lang/Object;)V = .ctor(int, Java.Lang.Object)
  type = Type
  TYPE_COLON = TypeColon
  TYPE_COMMA = TypeComma
  TYPE_EOF = TypeEof
  TYPE_LEFT_BRACE = TypeLeftBrace
  TYPE_LEFT_SQUARE = TypeLeftSquare
  TYPE_RIGHT_BRACE = TypeRightBrace
  TYPE_RIGHT_SQUARE = TypeRightSquare
  TYPE_VALUE = TypeValue
  value = Value
optifine/LaunchUtils = Optifine.LaunchUtils
  <init>()V = .ctor()
  isForgeServer()Z = IsForgeServer
optifine/OptiFineResourceLocator = Optifine.OptiFineResourceLocator
  <init>()V = .ctor()
  getOptiFineResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetOptiFineResourceStream(string)
  setResourceLocator(Loptifine/IOptiFineResourceLocator;)V = SetResourceLocator(Optifine.IOptiFineResourceLocator)
optifine/Patcher = Optifine.Patcher
  <init>()V = .ctor()
  CONFIG_FILE = ConfigFile
  CONFIG_FILE2 = ConfigFile2
  CONFIG_FILE3 = ConfigFile3
  PREFIX_PATCH = PrefixPatch
  SUFFIX_DELTA = SuffixDelta
  SUFFIX_MD5 = SuffixMd5
  applyPatch(Ljava/lang/String;[B[Ljava/util/regex/Pattern;Ljava/util/Map;Loptifine/IResourceProvider;)[B = ApplyPatch(string, byte[], Java.Util.Regex.Pattern[], System.Collections.Generic.IDictionary<string, string>, Optifine.IResourceProvider)
  getConfigurationMap(Ljava/util/zip/ZipFile;)Ljava/util/Map; = GetConfigurationMap(Java.Util.Zip.ZipFile)
  getConfigurationMap(Ljava/util/zip/ZipFile;Ljava/lang/String;)Ljava/util/Map; = GetConfigurationMap(Java.Util.Zip.ZipFile, string)
  getConfigurationPatterns(Ljava/util/Map;)[Ljava/util/regex/Pattern; = GetConfigurationPatterns(System.Collections.Generic.IDictionary<string, string>)
  getPatchBase(Ljava/lang/String;[Ljava/util/regex/Pattern;Ljava/util/Map;)Ljava/lang/String; = GetPatchBase(string, Java.Util.Regex.Pattern[], System.Collections.Generic.IDictionary<string, string>)
  main([Ljava/lang/String;)V = Main(string[])
  process(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V = Process(Java.IO.File, Java.IO.File, Java.IO.File)
optifine/ProfileIcon = Optifine.ProfileIcon
  <init>()V = .ctor()
  DATA = Data
optifine/Utils = Optifine.Utils
  MAC_OS_HOME_PREFIX = MacOsHomePrefix
  getPlatform()Loptifine/Utils$OS; = Platform
  getWorkingDirectory()Ljava/io/File; = WorkingDirectory
  addObjectsToArray([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectsToArray(Java.Lang.Object[], Java.Lang.Object[])
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object)
  addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;I)[Ljava/lang/Object; = AddObjectToArray(Java.Lang.Object[], Java.Lang.Object, int)
  arrayToCommaSeparatedString([Ljava/lang/Object;)Ljava/lang/String; = ArrayToCommaSeparatedString(Java.Lang.Object[])
  byteArrayToHexString([B)Ljava/lang/String; = ByteArrayToHexString(byte[])
  collectionToArray(Ljava/util/Collection;Ljava/lang/Class;)[Ljava/lang/Object; = CollectionToArray(System.Collections.ICollection, Java.Lang.Class)
  copyAll(Ljava/io/InputStream;Ljava/io/OutputStream;)V = CopyAll(System.IO.Stream, System.IO.Stream)
  copyFile(Ljava/io/File;Ljava/io/File;)V = CopyFile(Java.IO.File, Java.IO.File)
  dbg(Ljava/lang/String;)V = Dbg(string)
  ensurePrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = EnsurePrefix(string, string)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  equalsMask(Ljava/lang/String;Ljava/lang/String;C)Z = EqualsMask(string, string, char)
  find([B[B)I = Find(byte[], byte[])
  find([BI[B)I = Find(byte[], int, byte[])
  getExceptionStackTrace(Ljava/lang/Throwable;)Ljava/lang/String; = GetExceptionStackTrace(Java.Lang.Throwable)
  getWorkingDirectory(Ljava/lang/String;)Ljava/io/File; = GetWorkingDirectory(string)
  parseInt(Ljava/lang/String;I)I = ParseInt(string, int)
  readAll(Ljava/io/InputStream;)[B = ReadAll(System.IO.Stream)
  readFile(Ljava/io/File;)Ljava/lang/String; = ReadFile(Java.IO.File)
  readFile(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String; = ReadFile(Java.IO.File, string)
  readLines(Ljava/io/InputStream;Ljava/lang/String;)[Ljava/lang/String; = ReadLines(System.IO.Stream, string)
  readText(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String; = ReadText(System.IO.Stream, string)
  removeObjectFromArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object; = RemoveObjectFromArray(Java.Lang.Object[], Java.Lang.Object)
  removePrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string)
  removePrefix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string[])
  removeSuffix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemoveSuffix(string, string)
  removeSuffix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; = RemoveSuffix(string, string[])
  showErrorMessage(Ljava/lang/String;)V = ShowErrorMessage(string)
  showMessage(Ljava/lang/String;)V = ShowMessage(string)
  tokenize(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; = Tokenize(string, string)
optifine/xdelta/BitArray = Optifine.Xdelta.BitArray
  <init>(I)V = .ctor(int)
  get(I)Z = Get(int)
  set(IZ)V = Set(int, bool)
optifine/xdelta/ByteArraySeekableSource = Optifine.Xdelta.ByteArraySeekableSource
  <init>([B)V = .ctor(byte[])
  close()V = Close()
  length()J = Length()
  read([BII)I = Read(byte[], int, int)
  seek(J)V = Seek(long)
optifine/xdelta/Checksum = Optifine.Xdelta.Checksum
  <init>()V = .ctor()
  BASE = Base
  checksums = Checksums
  debug = Debug
  hashtable = Hashtable
  prime = Prime
  S = S
  single_hash = SingleHash
  findChecksumIndex(J)I = FindChecksumIndex(long)
  generateChecksums(Ljava/io/File;I)V = GenerateChecksums(Java.IO.File, int)
  generateChecksums(Ljava/io/InputStream;I)V = GenerateChecksums(System.IO.Stream, int)
  generateHash(J)I = GenerateHash(long)
  incrementChecksum(JBB)J = IncrementChecksum(long, sbyte, sbyte)
  queryChecksum([BI)J = QueryChecksum(byte[], int)
optifine/xdelta/DebugDiffWriter = Optifine.Xdelta.DebugDiffWriter
  <init>()V = .ctor()
  addCopy(II)V = AddCopy(int, int)
  addData(B)V = AddData(sbyte)
  close()V = Close()
  flush()V = Flush()
optifine/xdelta/Delta = Optifine.Xdelta.Delta
  <init>()V = .ctor()
  buff_size = BuffSize
  debug = Debug
  S = S
  computeDelta([BLjava/io/InputStream;ILoptifine/xdelta/DiffWriter;)V = ComputeDelta(byte[], System.IO.Stream, int, Optifine.Xdelta.IDiffWriter)
  computeDelta(Ljava/io/File;Ljava/io/File;Loptifine/xdelta/DiffWriter;)V = ComputeDelta(Java.IO.File, Java.IO.File, Optifine.Xdelta.IDiffWriter)
  computeDelta(Loptifine/xdelta/SeekableSource;Ljava/io/InputStream;ILoptifine/xdelta/DiffWriter;)V = ComputeDelta(Optifine.Xdelta.ISeekableSource, System.IO.Stream, int, Optifine.Xdelta.IDiffWriter)
  main([Ljava/lang/String;)V = Main(string[])
optifine/xdelta/DeltaException = Optifine.Xdelta.DeltaException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
optifine/xdelta/DiffWriter = Optifine.Xdelta.IDiffWriter
  addCopy(II)V = AddCopy(int, int)
  addData(B)V = AddData(sbyte)
  close()V = Close()
  flush()V = Flush()
optifine/xdelta/EratosthenesPrimes = Optifine.Xdelta.EratosthenesPrimes
  <init>()V = .ctor()
  below(I)I = Below(int)
  belowOrEqual(I)I = BelowOrEqual(int)
  getPrimes(I)[I = GetPrimes(int)
  init(I)V = Init(int)
  primesCount(I)I = PrimesCount(int)
  reset()V = Reset()
optifine/xdelta/GDiffPatcher = Optifine.Xdelta.GDiffPatcher
  <init>([BLjava/io/InputStream;Ljava/io/OutputStream;)V = .ctor(byte[], System.IO.Stream, System.IO.Stream)
  <init>(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V = .ctor(Java.IO.File, Java.IO.File, Java.IO.File)
  <init>(Loptifine/xdelta/SeekableSource;Ljava/io/InputStream;Ljava/io/OutputStream;)V = .ctor(Optifine.Xdelta.ISeekableSource, System.IO.Stream, System.IO.Stream)
  append(ILjava/io/InputStream;Ljava/io/OutputStream;)V = Append(int, System.IO.Stream, System.IO.Stream)
  copy(JILoptifine/xdelta/SeekableSource;Ljava/io/OutputStream;)V = Copy(long, int, Optifine.Xdelta.ISeekableSource, System.IO.Stream)
  main([Ljava/lang/String;)V = Main(string[])
optifine/xdelta/GDiffWriter = Optifine.Xdelta.GDiffWriter
  <init>(Ljava/io/DataOutputStream;)V = .ctor(Java.IO.DataOutputStream)
  debug = Debug
  addCopy(II)V = AddCopy(int, int)
  addData(B)V = AddData(sbyte)
  close()V = Close()
  flush()V = Flush()
  setDebug(Z)V = SetDebug(bool)
optifine/xdelta/PatchException = Optifine.Xdelta.PatchException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
optifine/xdelta/RandomAccessFileSeekableSource = Optifine.Xdelta.RandomAccessFileSeekableSource
  <init>(Ljava/io/RandomAccessFile;)V = .ctor(Java.IO.RandomAccessFile)
  close()V = Close()
  length()J = Length()
  read([BII)I = Read(byte[], int, int)
  seek(J)V = Seek(long)
optifine/xdelta/SeekableSource = Optifine.Xdelta.ISeekableSource
  close()V = Close()
  length()J = Length()
  read([BII)I = Read(byte[], int, int)
  seek(J)V = Seek(long)
optifine/xdelta/SeekableSourceInputStream = Optifine.Xdelta.SeekableSourceInputStream
  <init>(Loptifine/xdelta/SeekableSource;)V = .ctor(Optifine.Xdelta.ISeekableSource)
  read()I = Read()
optifine/xdelta/SimplePrime = Optifine.Xdelta.SimplePrime
  aboveOrEqual(J)J = AboveOrEqual(long)
  belowOrEqual(J)J = BelowOrEqual(long)
  testPrime(J)Z = TestPrime(long)
optifine/ZipResourceProvider = Optifine.ZipResourceProvider
  <init>(Ljava/util/zip/ZipFile;)V = .ctor(Java.Util.Zip.ZipFile)
  getResourceStream(Ljava/lang/String;)Ljava/io/InputStream; = GetResourceStream(string)

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']"
	[global::Android.Runtime.Register ("net/optifine/shaders/ShadersFramebuffer", DoNotGenerateAcw=true)]
	public partial class ShadersFramebuffer : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/ShadersFramebuffer", typeof (ShadersFramebuffer));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ShadersFramebuffer (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/constructor[@name='ShadersFramebuffer' and count(parameter)=15 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean[]'] and parameter[8][@type='boolean[]'] and parameter[9][@type='boolean[]'] and parameter[10][@type='net.optifine.util.DynamicDimension[]'] and parameter[11][@type='int[]'] and parameter[12][@type='int[]'] and parameter[13][@type='int[]'] and parameter[14][@type='int[]'] and parameter[15][@type='net.optifine.shaders.DrawBuffers']]"
		[Register (".ctor", "(Ljava/lang/String;IIIII[Z[Z[Z[Lnet/optifine/util/DynamicDimension;[I[I[I[ILnet/optifine/shaders/DrawBuffers;)V", "")]
		public unsafe ShadersFramebuffer (string? name, int width, int height, int usedColorBuffers, int usedDepthBuffers, int maxDrawBuffers, bool[]? depthFilterNearest, bool[]? depthFilterHardware, bool[]? colorFilterNearest, global::Net.Optifine.Util.DynamicDimension[]? colorBufferSizes, int[]? buffersFormat, int[]? colorTextureUnits, int[]? depthTextureUnits, int[]? colorImageUnits, global::Net.Optifine.Shaders.DrawBuffers? drawBuffers) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;IIIII[Z[Z[Z[Lnet/optifine/util/DynamicDimension;[I[I[I[ILnet/optifine/shaders/DrawBuffers;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_name = JNIEnv.NewString ((string?)name);
			IntPtr native_depthFilterNearest = JNIEnv.NewArray (depthFilterNearest);
			IntPtr native_depthFilterHardware = JNIEnv.NewArray (depthFilterHardware);
			IntPtr native_colorFilterNearest = JNIEnv.NewArray (colorFilterNearest);
			IntPtr native_colorBufferSizes = JNIEnv.NewArray (colorBufferSizes);
			IntPtr native_buffersFormat = JNIEnv.NewArray (buffersFormat);
			IntPtr native_colorTextureUnits = JNIEnv.NewArray (colorTextureUnits);
			IntPtr native_depthTextureUnits = JNIEnv.NewArray (depthTextureUnits);
			IntPtr native_colorImageUnits = JNIEnv.NewArray (colorImageUnits);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [15];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (width);
				__args [2] = new JniArgumentValue (height);
				__args [3] = new JniArgumentValue (usedColorBuffers);
				__args [4] = new JniArgumentValue (usedDepthBuffers);
				__args [5] = new JniArgumentValue (maxDrawBuffers);
				__args [6] = new JniArgumentValue (native_depthFilterNearest);
				__args [7] = new JniArgumentValue (native_depthFilterHardware);
				__args [8] = new JniArgumentValue (native_colorFilterNearest);
				__args [9] = new JniArgumentValue (native_colorBufferSizes);
				__args [10] = new JniArgumentValue (native_buffersFormat);
				__args [11] = new JniArgumentValue (native_colorTextureUnits);
				__args [12] = new JniArgumentValue (native_depthTextureUnits);
				__args [13] = new JniArgumentValue (native_colorImageUnits);
				__args [14] = new JniArgumentValue ((drawBuffers == null) ? IntPtr.Zero : ((global::Java.Lang.Object) drawBuffers).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				if (depthFilterNearest != null) {
					JNIEnv.CopyArray (native_depthFilterNearest, depthFilterNearest);
					JNIEnv.DeleteLocalRef (native_depthFilterNearest);
				}
				if (depthFilterHardware != null) {
					JNIEnv.CopyArray (native_depthFilterHardware, depthFilterHardware);
					JNIEnv.DeleteLocalRef (native_depthFilterHardware);
				}
				if (colorFilterNearest != null) {
					JNIEnv.CopyArray (native_colorFilterNearest, colorFilterNearest);
					JNIEnv.DeleteLocalRef (native_colorFilterNearest);
				}
				if (colorBufferSizes != null) {
					JNIEnv.CopyArray (native_colorBufferSizes, colorBufferSizes);
					JNIEnv.DeleteLocalRef (native_colorBufferSizes);
				}
				if (buffersFormat != null) {
					JNIEnv.CopyArray (native_buffersFormat, buffersFormat);
					JNIEnv.DeleteLocalRef (native_buffersFormat);
				}
				if (colorTextureUnits != null) {
					JNIEnv.CopyArray (native_colorTextureUnits, colorTextureUnits);
					JNIEnv.DeleteLocalRef (native_colorTextureUnits);
				}
				if (depthTextureUnits != null) {
					JNIEnv.CopyArray (native_depthTextureUnits, depthTextureUnits);
					JNIEnv.DeleteLocalRef (native_depthTextureUnits);
				}
				if (colorImageUnits != null) {
					JNIEnv.CopyArray (native_colorImageUnits, colorImageUnits);
					JNIEnv.DeleteLocalRef (native_colorImageUnits);
				}
				global::System.GC.KeepAlive (depthFilterNearest);
				global::System.GC.KeepAlive (depthFilterHardware);
				global::System.GC.KeepAlive (colorFilterNearest);
				global::System.GC.KeepAlive (colorBufferSizes);
				global::System.GC.KeepAlive (buffersFormat);
				global::System.GC.KeepAlive (colorTextureUnits);
				global::System.GC.KeepAlive (depthTextureUnits);
				global::System.GC.KeepAlive (colorImageUnits);
				global::System.GC.KeepAlive (drawBuffers);
			}
		}

		static Delegate? cb_getDrawBuffers;
#pragma warning disable 0169
		static Delegate GetGetDrawBuffersHandler ()
		{
			if (cb_getDrawBuffers == null)
				cb_getDrawBuffers = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDrawBuffers));
			return cb_getDrawBuffers;
		}

		static IntPtr n_GetDrawBuffers (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.DrawBuffers);
		}
#pragma warning restore 0169

		static Delegate? cb_setDrawBuffers_Lnet_optifine_shaders_DrawBuffers_;
#pragma warning disable 0169
		static Delegate GetSetDrawBuffers_Lnet_optifine_shaders_DrawBuffers_Handler ()
		{
			if (cb_setDrawBuffers_Lnet_optifine_shaders_DrawBuffers_ == null)
				cb_setDrawBuffers_Lnet_optifine_shaders_DrawBuffers_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDrawBuffers_Lnet_optifine_shaders_DrawBuffers_));
			return cb_setDrawBuffers_Lnet_optifine_shaders_DrawBuffers_;
		}

		static void n_SetDrawBuffers_Lnet_optifine_shaders_DrawBuffers_ (IntPtr jnienv, IntPtr native__this, IntPtr native_drawBuffersIn)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var drawBuffersIn = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (native_drawBuffersIn, JniHandleOwnership.DoNotTransfer);
			__this.DrawBuffers = drawBuffersIn;
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Shaders.DrawBuffers? DrawBuffers {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='getDrawBuffers' and count(parameter)=0]"
			[Register ("getDrawBuffers", "()Lnet/optifine/shaders/DrawBuffers;", "GetGetDrawBuffersHandler")]
			get {
				const string __id = "getDrawBuffers.()Lnet/optifine/shaders/DrawBuffers;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='setDrawBuffers' and count(parameter)=1 and parameter[1][@type='net.optifine.shaders.DrawBuffers']]"
			[Register ("setDrawBuffers", "(Lnet/optifine/shaders/DrawBuffers;)V", "GetSetDrawBuffers_Lnet_optifine_shaders_DrawBuffers_Handler")]
			set {
				const string __id = "setDrawBuffers.(Lnet/optifine/shaders/DrawBuffers;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate? cb_getGlFramebuffer;
#pragma warning disable 0169
		static Delegate GetGetGlFramebufferHandler ()
		{
			if (cb_getGlFramebuffer == null)
				cb_getGlFramebuffer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetGlFramebuffer));
			return cb_getGlFramebuffer;
		}

		static int n_GetGlFramebuffer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.GlFramebuffer;
		}
#pragma warning restore 0169

		public virtual unsafe int GlFramebuffer {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='getGlFramebuffer' and count(parameter)=0]"
			[Register ("getGlFramebuffer", "()I", "GetGetGlFramebufferHandler")]
			get {
				const string __id = "getGlFramebuffer.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getHeight;
#pragma warning disable 0169
		static Delegate GetGetHeightHandler ()
		{
			if (cb_getHeight == null)
				cb_getHeight = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetHeight));
			return cb_getHeight;
		}

		static int n_GetHeight (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Height;
		}
#pragma warning restore 0169

		public virtual unsafe int Height {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='getHeight' and count(parameter)=0]"
			[Register ("getHeight", "()I", "GetGetHeightHandler")]
			get {
				const string __id = "getHeight.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getName;
#pragma warning disable 0169
		static Delegate GetGetNameHandler ()
		{
			if (cb_getName == null)
				cb_getName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetName));
			return cb_getName;
		}

		static IntPtr n_GetName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Name);
		}
#pragma warning restore 0169

		public virtual unsafe string? Name {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='getName' and count(parameter)=0]"
			[Register ("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
			get {
				const string __id = "getName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getWidth;
#pragma warning disable 0169
		static Delegate GetGetWidthHandler ()
		{
			if (cb_getWidth == null)
				cb_getWidth = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetWidth));
			return cb_getWidth;
		}

		static int n_GetWidth (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Width;
		}
#pragma warning restore 0169

		public virtual unsafe int Width {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='getWidth' and count(parameter)=0]"
			[Register ("getWidth", "()I", "GetGetWidthHandler")]
			get {
				const string __id = "getWidth.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_bindColorImage_IZ;
#pragma warning disable 0169
		static Delegate GetBindColorImage_IZHandler ()
		{
			if (cb_bindColorImage_IZ == null)
				cb_bindColorImage_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_V (n_BindColorImage_IZ));
			return cb_bindColorImage_IZ;
		}

		static void n_BindColorImage_IZ (IntPtr jnienv, IntPtr native__this, int index, bool main)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BindColorImage (index, main);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='bindColorImage' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("bindColorImage", "(IZ)V", "GetBindColorImage_IZHandler")]
		public virtual unsafe void BindColorImage (int index, bool main)
		{
			const string __id = "bindColorImage.(IZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (index);
				__args [1] = new JniArgumentValue (main);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_bindColorImages_Z;
#pragma warning disable 0169
		static Delegate GetBindColorImages_ZHandler ()
		{
			if (cb_bindColorImages_Z == null)
				cb_bindColorImages_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_BindColorImages_Z));
			return cb_bindColorImages_Z;
		}

		static void n_BindColorImages_Z (IntPtr jnienv, IntPtr native__this, bool main)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BindColorImages (main);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='bindColorImages' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("bindColorImages", "(Z)V", "GetBindColorImages_ZHandler")]
		public virtual unsafe void BindColorImages (bool main)
		{
			const string __id = "bindColorImages.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (main);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_bindColorTextures_I;
#pragma warning disable 0169
		static Delegate GetBindColorTextures_IHandler ()
		{
			if (cb_bindColorTextures_I == null)
				cb_bindColorTextures_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_BindColorTextures_I));
			return cb_bindColorTextures_I;
		}

		static void n_BindColorTextures_I (IntPtr jnienv, IntPtr native__this, int startColorBuffer)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BindColorTextures (startColorBuffer);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='bindColorTextures' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("bindColorTextures", "(I)V", "GetBindColorTextures_IHandler")]
		public virtual unsafe void BindColorTextures (int startColorBuffer)
		{
			const string __id = "bindColorTextures.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (startColorBuffer);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_bindDepthTextures_arrayI;
#pragma warning disable 0169
		static Delegate GetBindDepthTextures_arrayIHandler ()
		{
			if (cb_bindDepthTextures_arrayI == null)
				cb_bindDepthTextures_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BindDepthTextures_arrayI));
			return cb_bindDepthTextures_arrayI;
		}

		static void n_BindDepthTextures_arrayI (IntPtr jnienv, IntPtr native__this, IntPtr native_depthTextureImageUnits)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var depthTextureImageUnits = (int[]?) JNIEnv.GetArray (native_depthTextureImageUnits, JniHandleOwnership.DoNotTransfer, typeof (int));
			__this.BindDepthTextures (depthTextureImageUnits);
			if (depthTextureImageUnits != null)
				JNIEnv.CopyArray (depthTextureImageUnits, native_depthTextureImageUnits);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='bindDepthTextures' and count(parameter)=1 and parameter[1][@type='int[]']]"
		[Register ("bindDepthTextures", "([I)V", "GetBindDepthTextures_arrayIHandler")]
		public virtual unsafe void BindDepthTextures (int[]? depthTextureImageUnits)
		{
			const string __id = "bindDepthTextures.([I)V";
			IntPtr native_depthTextureImageUnits = JNIEnv.NewArray (depthTextureImageUnits);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_depthTextureImageUnits);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (depthTextureImageUnits != null) {
					JNIEnv.CopyArray (native_depthTextureImageUnits, depthTextureImageUnits);
					JNIEnv.DeleteLocalRef (native_depthTextureImageUnits);
				}
				global::System.GC.KeepAlive (depthTextureImageUnits);
			}
		}

		static Delegate? cb_bindFramebuffer;
#pragma warning disable 0169
		static Delegate GetBindFramebufferHandler ()
		{
			if (cb_bindFramebuffer == null)
				cb_bindFramebuffer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_BindFramebuffer));
			return cb_bindFramebuffer;
		}

		static void n_BindFramebuffer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BindFramebuffer ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='bindFramebuffer' and count(parameter)=0]"
		[Register ("bindFramebuffer", "()V", "GetBindFramebufferHandler")]
		public virtual unsafe void BindFramebuffer ()
		{
			const string __id = "bindFramebuffer.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_delete;
#pragma warning disable 0169
		static Delegate GetDeleteHandler ()
		{
			if (cb_delete == null)
				cb_delete = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Delete));
			return cb_delete;
		}

		static void n_Delete (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Delete ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='delete' and count(parameter)=0]"
		[Register ("delete", "()V", "GetDeleteHandler")]
		public virtual unsafe void Delete ()
		{
			const string __id = "delete.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_exists;
#pragma warning disable 0169
		static Delegate GetExistsHandler ()
		{
			if (cb_exists == null)
				cb_exists = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_Exists));
			return cb_exists;
		}

		static bool n_Exists (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Exists ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='exists' and count(parameter)=0]"
		[Register ("exists", "()Z", "GetExistsHandler")]
		public virtual unsafe bool Exists ()
		{
			const string __id = "exists.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_flipColorTexture_I;
#pragma warning disable 0169
		static Delegate GetFlipColorTexture_IHandler ()
		{
			if (cb_flipColorTexture_I == null)
				cb_flipColorTexture_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_FlipColorTexture_I));
			return cb_flipColorTexture_I;
		}

		static void n_FlipColorTexture_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.FlipColorTexture (index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='flipColorTexture' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("flipColorTexture", "(I)V", "GetFlipColorTexture_IHandler")]
		public virtual unsafe void FlipColorTexture (int index)
		{
			const string __id = "flipColorTexture.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_flipColorTextures_arrayZ;
#pragma warning disable 0169
		static Delegate GetFlipColorTextures_arrayZHandler ()
		{
			if (cb_flipColorTextures_arrayZ == null)
				cb_flipColorTextures_arrayZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_FlipColorTextures_arrayZ));
			return cb_flipColorTextures_arrayZ;
		}

		static void n_FlipColorTextures_arrayZ (IntPtr jnienv, IntPtr native__this, IntPtr native_toggleColorTextures)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var toggleColorTextures = (bool[]?) JNIEnv.GetArray (native_toggleColorTextures, JniHandleOwnership.DoNotTransfer, typeof (bool));
			__this.FlipColorTextures (toggleColorTextures);
			if (toggleColorTextures != null)
				JNIEnv.CopyArray (toggleColorTextures, native_toggleColorTextures);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='flipColorTextures' and count(parameter)=1 and parameter[1][@type='boolean[]']]"
		[Register ("flipColorTextures", "([Z)V", "GetFlipColorTextures_arrayZHandler")]
		public virtual unsafe void FlipColorTextures (bool[]? toggleColorTextures)
		{
			const string __id = "flipColorTextures.([Z)V";
			IntPtr native_toggleColorTextures = JNIEnv.NewArray (toggleColorTextures);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_toggleColorTextures);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (toggleColorTextures != null) {
					JNIEnv.CopyArray (native_toggleColorTextures, toggleColorTextures);
					JNIEnv.DeleteLocalRef (native_toggleColorTextures);
				}
				global::System.GC.KeepAlive (toggleColorTextures);
			}
		}

		static Delegate? cb_genCompositeMipmap_I;
#pragma warning disable 0169
		static Delegate GetGenCompositeMipmap_IHandler ()
		{
			if (cb_genCompositeMipmap_I == null)
				cb_genCompositeMipmap_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_GenCompositeMipmap_I));
			return cb_genCompositeMipmap_I;
		}

		static void n_GenCompositeMipmap_I (IntPtr jnienv, IntPtr native__this, int compositeMipmapSetting)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.GenCompositeMipmap (compositeMipmapSetting);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='genCompositeMipmap' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("genCompositeMipmap", "(I)V", "GetGenCompositeMipmap_IHandler")]
		public virtual unsafe void GenCompositeMipmap (int compositeMipmapSetting)
		{
			const string __id = "genCompositeMipmap.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (compositeMipmapSetting);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_generateColorMipmaps_ZarrayZ;
#pragma warning disable 0169
		static Delegate GetGenerateColorMipmaps_ZarrayZHandler ()
		{
			if (cb_generateColorMipmaps_ZarrayZ == null)
				cb_generateColorMipmaps_ZarrayZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZL_V (n_GenerateColorMipmaps_ZarrayZ));
			return cb_generateColorMipmaps_ZarrayZ;
		}

		static void n_GenerateColorMipmaps_ZarrayZ (IntPtr jnienv, IntPtr native__this, bool main, IntPtr native_colorMipmapEnabled)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var colorMipmapEnabled = (bool[]?) JNIEnv.GetArray (native_colorMipmapEnabled, JniHandleOwnership.DoNotTransfer, typeof (bool));
			__this.GenerateColorMipmaps (main, colorMipmapEnabled);
			if (colorMipmapEnabled != null)
				JNIEnv.CopyArray (colorMipmapEnabled, native_colorMipmapEnabled);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='generateColorMipmaps' and count(parameter)=2 and parameter[1][@type='boolean'] and parameter[2][@type='boolean[]']]"
		[Register ("generateColorMipmaps", "(Z[Z)V", "GetGenerateColorMipmaps_ZarrayZHandler")]
		public virtual unsafe void GenerateColorMipmaps (bool main, bool[]? colorMipmapEnabled)
		{
			const string __id = "generateColorMipmaps.(Z[Z)V";
			IntPtr native_colorMipmapEnabled = JNIEnv.NewArray (colorMipmapEnabled);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (main);
				__args [1] = new JniArgumentValue (native_colorMipmapEnabled);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (colorMipmapEnabled != null) {
					JNIEnv.CopyArray (native_colorMipmapEnabled, colorMipmapEnabled);
					JNIEnv.DeleteLocalRef (native_colorMipmapEnabled);
				}
				global::System.GC.KeepAlive (colorMipmapEnabled);
			}
		}

		static Delegate? cb_generateDepthMipmaps_arrayZ;
#pragma warning disable 0169
		static Delegate GetGenerateDepthMipmaps_arrayZHandler ()
		{
			if (cb_generateDepthMipmaps_arrayZ == null)
				cb_generateDepthMipmaps_arrayZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_GenerateDepthMipmaps_arrayZ));
			return cb_generateDepthMipmaps_arrayZ;
		}

		static void n_GenerateDepthMipmaps_arrayZ (IntPtr jnienv, IntPtr native__this, IntPtr native_depthMipmapEnabled)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var depthMipmapEnabled = (bool[]?) JNIEnv.GetArray (native_depthMipmapEnabled, JniHandleOwnership.DoNotTransfer, typeof (bool));
			__this.GenerateDepthMipmaps (depthMipmapEnabled);
			if (depthMipmapEnabled != null)
				JNIEnv.CopyArray (depthMipmapEnabled, native_depthMipmapEnabled);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='generateDepthMipmaps' and count(parameter)=1 and parameter[1][@type='boolean[]']]"
		[Register ("generateDepthMipmaps", "([Z)V", "GetGenerateDepthMipmaps_arrayZHandler")]
		public virtual unsafe void GenerateDepthMipmaps (bool[]? depthMipmapEnabled)
		{
			const string __id = "generateDepthMipmaps.([Z)V";
			IntPtr native_depthMipmapEnabled = JNIEnv.NewArray (depthMipmapEnabled);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_depthMipmapEnabled);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (depthMipmapEnabled != null) {
					JNIEnv.CopyArray (native_depthMipmapEnabled, depthMipmapEnabled);
					JNIEnv.DeleteLocalRef (native_depthMipmapEnabled);
				}
				global::System.GC.KeepAlive (depthMipmapEnabled);
			}
		}

		static Delegate? cb_getFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_Z;
#pragma warning disable 0169
		static Delegate GetGetFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_ZHandler ()
		{
			if (cb_getFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_Z == null)
				cb_getFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIILZ_L (n_GetFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_Z));
			return cb_getFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_Z;
		}

		static IntPtr n_GetFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_Z (IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_dbs, bool main)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var dbs = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (native_dbs, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetFixedFramebuffer (width, height, dbs, main));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='getFixedFramebuffer' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='net.optifine.shaders.DrawBuffers'] and parameter[4][@type='boolean']]"
		[Register ("getFixedFramebuffer", "(IILnet/optifine/shaders/DrawBuffers;Z)Lnet/optifine/shaders/FixedFramebuffer;", "GetGetFixedFramebuffer_IILnet_optifine_shaders_DrawBuffers_ZHandler")]
		public virtual unsafe global::Net.Optifine.Shaders.FixedFramebuffer? GetFixedFramebuffer (int width, int height, global::Net.Optifine.Shaders.DrawBuffers? dbs, bool main)
		{
			const string __id = "getFixedFramebuffer.(IILnet/optifine/shaders/DrawBuffers;Z)Lnet/optifine/shaders/FixedFramebuffer;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (width);
				__args [1] = new JniArgumentValue (height);
				__args [2] = new JniArgumentValue ((dbs == null) ? IntPtr.Zero : ((global::Java.Lang.Object) dbs).Handle);
				__args [3] = new JniArgumentValue (main);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.FixedFramebuffer> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (dbs);
			}
		}

		static Delegate? cb_isColorBufferIndex_I;
#pragma warning disable 0169
		static Delegate GetIsColorBufferIndex_IHandler ()
		{
			if (cb_isColorBufferIndex_I == null)
				cb_isColorBufferIndex_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_Z (n_IsColorBufferIndex_I));
			return cb_isColorBufferIndex_I;
		}

		static bool n_IsColorBufferIndex_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsColorBufferIndex (index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='isColorBufferIndex' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("isColorBufferIndex", "(I)Z", "GetIsColorBufferIndex_IHandler")]
		public virtual unsafe bool IsColorBufferIndex (int index)
		{
			const string __id = "isColorBufferIndex.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_isColorExtendedIndex_I;
#pragma warning disable 0169
		static Delegate GetIsColorExtendedIndex_IHandler ()
		{
			if (cb_isColorExtendedIndex_I == null)
				cb_isColorExtendedIndex_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_Z (n_IsColorExtendedIndex_I));
			return cb_isColorExtendedIndex_I;
		}

		static bool n_IsColorExtendedIndex_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsColorExtendedIndex (index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='isColorExtendedIndex' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("isColorExtendedIndex", "(I)Z", "GetIsColorExtendedIndex_IHandler")]
		public virtual unsafe bool IsColorExtendedIndex (int index)
		{
			const string __id = "isColorExtendedIndex.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_isDrawBufferIndex_I;
#pragma warning disable 0169
		static Delegate GetIsDrawBufferIndex_IHandler ()
		{
			if (cb_isDrawBufferIndex_I == null)
				cb_isDrawBufferIndex_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_Z (n_IsDrawBufferIndex_I));
			return cb_isDrawBufferIndex_I;
		}

		static bool n_IsDrawBufferIndex_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsDrawBufferIndex (index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='isDrawBufferIndex' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("isDrawBufferIndex", "(I)Z", "GetIsDrawBufferIndex_IHandler")]
		public virtual unsafe bool IsDrawBufferIndex (int index)
		{
			const string __id = "isDrawBufferIndex.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_setColorBuffersFiltering_II;
#pragma warning disable 0169
		static Delegate GetSetColorBuffersFiltering_IIHandler ()
		{
			if (cb_setColorBuffersFiltering_II == null)
				cb_setColorBuffersFiltering_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_V (n_SetColorBuffersFiltering_II));
			return cb_setColorBuffersFiltering_II;
		}

		static void n_SetColorBuffersFiltering_II (IntPtr jnienv, IntPtr native__this, int minFilter, int magFilter)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetColorBuffersFiltering (minFilter, magFilter);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='setColorBuffersFiltering' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setColorBuffersFiltering", "(II)V", "GetSetColorBuffersFiltering_IIHandler")]
		public virtual unsafe void SetColorBuffersFiltering (int minFilter, int magFilter)
		{
			const string __id = "setColorBuffersFiltering.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (minFilter);
				__args [1] = new JniArgumentValue (magFilter);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setColorTextures_Z;
#pragma warning disable 0169
		static Delegate GetSetColorTextures_ZHandler ()
		{
			if (cb_setColorTextures_Z == null)
				cb_setColorTextures_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetColorTextures_Z));
			return cb_setColorTextures_Z;
		}

		static void n_SetColorTextures_Z (IntPtr jnienv, IntPtr native__this, bool main)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetColorTextures (main);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='setColorTextures' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setColorTextures", "(Z)V", "GetSetColorTextures_ZHandler")]
		public virtual unsafe void SetColorTextures (bool main)
		{
			const string __id = "setColorTextures.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (main);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setDepthTexture;
#pragma warning disable 0169
		static Delegate GetSetDepthTextureHandler ()
		{
			if (cb_setDepthTexture == null)
				cb_setDepthTexture = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_SetDepthTexture));
			return cb_setDepthTexture;
		}

		static void n_SetDepthTexture (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetDepthTexture ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='setDepthTexture' and count(parameter)=0]"
		[Register ("setDepthTexture", "()V", "GetSetDepthTextureHandler")]
		public virtual unsafe void SetDepthTexture ()
		{
			const string __id = "setDepthTexture.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_setDrawBuffers;
#pragma warning disable 0169
		static Delegate GetSetDrawBuffersHandler ()
		{
			if (cb_setDrawBuffers == null)
				cb_setDrawBuffers = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_SetDrawBuffers));
			return cb_setDrawBuffers;
		}

		static void n_SetDrawBuffers (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetDrawBuffers ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='setDrawBuffers' and count(parameter)=0]"
		[Register ("setDrawBuffers", "()V", "GetSetDrawBuffersHandler")]
		public virtual unsafe void SetDrawBuffers ()
		{
			const string __id = "setDrawBuffers.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_setFramebufferTexture2D_IIIII;
#pragma warning disable 0169
		static Delegate GetSetFramebufferTexture2D_IIIIIHandler ()
		{
			if (cb_setFramebufferTexture2D_IIIII == null)
				cb_setFramebufferTexture2D_IIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIIII_V (n_SetFramebufferTexture2D_IIIII));
			return cb_setFramebufferTexture2D_IIIII;
		}

		static void n_SetFramebufferTexture2D_IIIII (IntPtr jnienv, IntPtr native__this, int target, int attachment, int texTarget, int texture, int level)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetFramebufferTexture2D (target, attachment, texTarget, texture, level);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='setFramebufferTexture2D' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("setFramebufferTexture2D", "(IIIII)V", "GetSetFramebufferTexture2D_IIIIIHandler")]
		public virtual unsafe void SetFramebufferTexture2D (int target, int attachment, int texTarget, int texture, int level)
		{
			const string __id = "setFramebufferTexture2D.(IIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (target);
				__args [1] = new JniArgumentValue (attachment);
				__args [2] = new JniArgumentValue (texTarget);
				__args [3] = new JniArgumentValue (texture);
				__args [4] = new JniArgumentValue (level);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setup;
#pragma warning disable 0169
		static Delegate GetSetupHandler ()
		{
			if (cb_setup == null)
				cb_setup = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Setup));
			return cb_setup;
		}

		static void n_Setup (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Setup ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShadersFramebuffer']/method[@name='setup' and count(parameter)=0]"
		[Register ("setup", "()V", "GetSetupHandler")]
		public virtual unsafe void Setup ()
		{
			const string __id = "setup.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}

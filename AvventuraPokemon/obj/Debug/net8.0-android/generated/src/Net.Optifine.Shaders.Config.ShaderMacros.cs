//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']"
	[global::Android.Runtime.Register ("net/optifine/shaders/config/ShaderMacros", DoNotGenerateAcw=true)]
	public partial class ShaderMacros : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_ANISOTROPIC_FILTERING']"
		[Register ("MC_ANISOTROPIC_FILTERING")]
		public const string McAnisotropicFiltering = (string) "MC_ANISOTROPIC_FILTERING";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_FXAA_LEVEL']"
		[Register ("MC_FXAA_LEVEL")]
		public const string McFxaaLevel = (string) "MC_FXAA_LEVEL";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GLSL_VERSION']"
		[Register ("MC_GLSL_VERSION")]
		public const string McGlslVersion = (string) "MC_GLSL_VERSION";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_RENDERER_GALLIUM']"
		[Register ("MC_GL_RENDERER_GALLIUM")]
		public const string McGlRendererGallium = (string) "MC_GL_RENDERER_GALLIUM";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_RENDERER_GEFORCE']"
		[Register ("MC_GL_RENDERER_GEFORCE")]
		public const string McGlRendererGeforce = (string) "MC_GL_RENDERER_GEFORCE";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_RENDERER_INTEL']"
		[Register ("MC_GL_RENDERER_INTEL")]
		public const string McGlRendererIntel = (string) "MC_GL_RENDERER_INTEL";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_RENDERER_MESA']"
		[Register ("MC_GL_RENDERER_MESA")]
		public const string McGlRendererMesa = (string) "MC_GL_RENDERER_MESA";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_RENDERER_OTHER']"
		[Register ("MC_GL_RENDERER_OTHER")]
		public const string McGlRendererOther = (string) "MC_GL_RENDERER_OTHER";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_RENDERER_QUADRO']"
		[Register ("MC_GL_RENDERER_QUADRO")]
		public const string McGlRendererQuadro = (string) "MC_GL_RENDERER_QUADRO";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_RENDERER_RADEON']"
		[Register ("MC_GL_RENDERER_RADEON")]
		public const string McGlRendererRadeon = (string) "MC_GL_RENDERER_RADEON";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VENDOR_AMD']"
		[Register ("MC_GL_VENDOR_AMD")]
		public const string McGlVendorAmd = (string) "MC_GL_VENDOR_AMD";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VENDOR_ATI']"
		[Register ("MC_GL_VENDOR_ATI")]
		public const string McGlVendorAti = (string) "MC_GL_VENDOR_ATI";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VENDOR_INTEL']"
		[Register ("MC_GL_VENDOR_INTEL")]
		public const string McGlVendorIntel = (string) "MC_GL_VENDOR_INTEL";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VENDOR_MESA']"
		[Register ("MC_GL_VENDOR_MESA")]
		public const string McGlVendorMesa = (string) "MC_GL_VENDOR_MESA";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VENDOR_NVIDIA']"
		[Register ("MC_GL_VENDOR_NVIDIA")]
		public const string McGlVendorNvidia = (string) "MC_GL_VENDOR_NVIDIA";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VENDOR_OTHER']"
		[Register ("MC_GL_VENDOR_OTHER")]
		public const string McGlVendorOther = (string) "MC_GL_VENDOR_OTHER";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VENDOR_XORG']"
		[Register ("MC_GL_VENDOR_XORG")]
		public const string McGlVendorXorg = (string) "MC_GL_VENDOR_XORG";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_GL_VERSION']"
		[Register ("MC_GL_VERSION")]
		public const string McGlVersion = (string) "MC_GL_VERSION";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_HAND_DEPTH']"
		[Register ("MC_HAND_DEPTH")]
		public const string McHandDepth = (string) "MC_HAND_DEPTH";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_NORMAL_MAP']"
		[Register ("MC_NORMAL_MAP")]
		public const string McNormalMap = (string) "MC_NORMAL_MAP";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_OLD_HAND_LIGHT']"
		[Register ("MC_OLD_HAND_LIGHT")]
		public const string McOldHandLight = (string) "MC_OLD_HAND_LIGHT";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_OLD_LIGHTING']"
		[Register ("MC_OLD_LIGHTING")]
		public const string McOldLighting = (string) "MC_OLD_LIGHTING";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_OS_LINUX']"
		[Register ("MC_OS_LINUX")]
		public const string McOsLinux = (string) "MC_OS_LINUX";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_OS_MAC']"
		[Register ("MC_OS_MAC")]
		public const string McOsMac = (string) "MC_OS_MAC";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_OS_OTHER']"
		[Register ("MC_OS_OTHER")]
		public const string McOsOther = (string) "MC_OS_OTHER";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_OS_WINDOWS']"
		[Register ("MC_OS_WINDOWS")]
		public const string McOsWindows = (string) "MC_OS_WINDOWS";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_RENDER_QUALITY']"
		[Register ("MC_RENDER_QUALITY")]
		public const string McRenderQuality = (string) "MC_RENDER_QUALITY";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_SHADOW_QUALITY']"
		[Register ("MC_SHADOW_QUALITY")]
		public const string McShadowQuality = (string) "MC_SHADOW_QUALITY";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_SPECULAR_MAP']"
		[Register ("MC_SPECULAR_MAP")]
		public const string McSpecularMap = (string) "MC_SPECULAR_MAP";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_TEXTURE_FORMAT_']"
		[Register ("MC_TEXTURE_FORMAT_")]
		public const string McTextureFormat = (string) "MC_TEXTURE_FORMAT_";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/field[@name='MC_VERSION']"
		[Register ("MC_VERSION")]
		public const string McVersion = (string) "MC_VERSION";

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/config/ShaderMacros", typeof (ShaderMacros));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ShaderMacros (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/constructor[@name='ShaderMacros' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ShaderMacros () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string? FixedMacroLines {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getFixedMacroLines' and count(parameter)=0]"
			[Register ("getFixedMacroLines", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getFixedMacroLines.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? OptionMacroLines {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getOptionMacroLines' and count(parameter)=0]"
			[Register ("getOptionMacroLines", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getOptionMacroLines.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? Os {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getOs' and count(parameter)=0]"
			[Register ("getOs", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getOs.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? PrefixMacro {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getPrefixMacro' and count(parameter)=0]"
			[Register ("getPrefixMacro", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getPrefixMacro.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? Renderer {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getRenderer' and count(parameter)=0]"
			[Register ("getRenderer", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getRenderer.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? TextureMacroLines {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getTextureMacroLines' and count(parameter)=0]"
			[Register ("getTextureMacroLines", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getTextureMacroLines.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? Vendor {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getVendor' and count(parameter)=0]"
			[Register ("getVendor", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getVendor.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getConstantMacros' and count(parameter)=0]"
		[Register ("getConstantMacros", "()[Lnet/optifine/shaders/config/ShaderMacro;", "")]
		public static unsafe global::Net.Optifine.Shaders.Config.ShaderMacro[]? GetConstantMacros ()
		{
			const string __id = "getConstantMacros.()[Lnet/optifine/shaders/config/ShaderMacro;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (global::Net.Optifine.Shaders.Config.ShaderMacro[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Shaders.Config.ShaderMacro));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getExtensions' and count(parameter)=0]"
		[Register ("getExtensions", "()[Lnet/optifine/shaders/config/ShaderMacro;", "")]
		public static unsafe global::Net.Optifine.Shaders.Config.ShaderMacro[]? GetExtensions ()
		{
			const string __id = "getExtensions.()[Lnet/optifine/shaders/config/ShaderMacro;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (global::Net.Optifine.Shaders.Config.ShaderMacro[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Shaders.Config.ShaderMacro));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderMacros']/method[@name='getHeaderMacroLines' and count(parameter)=0]"
		[Register ("getHeaderMacroLines", "()[Ljava/lang/String;", "")]
		public static unsafe string[]? GetHeaderMacroLines ()
		{
			const string __id = "getHeaderMacroLines.()[Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (string[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
			}
		}

	}
}

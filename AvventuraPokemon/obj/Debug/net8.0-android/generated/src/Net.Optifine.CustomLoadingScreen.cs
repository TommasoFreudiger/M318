//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='CustomLoadingScreen']"
	[global::Android.Runtime.Register ("net/optifine/CustomLoadingScreen", DoNotGenerateAcw=true)]
	public partial class CustomLoadingScreen : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/CustomLoadingScreen", typeof (CustomLoadingScreen));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CustomLoadingScreen (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		static Delegate? cb_drawBackground_II;
#pragma warning disable 0169
		static Delegate GetDrawBackground_IIHandler ()
		{
			if (cb_drawBackground_II == null)
				cb_drawBackground_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_V (n_DrawBackground_II));
			return cb_drawBackground_II;
		}

		static void n_DrawBackground_II (IntPtr jnienv, IntPtr native__this, int width, int height)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomLoadingScreen> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.DrawBackground (width, height);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomLoadingScreen']/method[@name='drawBackground' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("drawBackground", "(II)V", "GetDrawBackground_IIHandler")]
		public virtual unsafe void DrawBackground (int width, int height)
		{
			const string __id = "drawBackground.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (width);
				__args [1] = new JniArgumentValue (height);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomLoadingScreen']/method[@name='parseScreen' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.util.Properties']]"
		[Register ("parseScreen", "(Ljava/lang/String;ILjava/util/Properties;)Lnet/optifine/CustomLoadingScreen;", "")]
		public static unsafe global::Net.Optifine.CustomLoadingScreen? ParseScreen (string? path, int dimId, global::Java.Util.Properties? props)
		{
			const string __id = "parseScreen.(Ljava/lang/String;ILjava/util/Properties;)Lnet/optifine/CustomLoadingScreen;";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_path);
				__args [1] = new JniArgumentValue (dimId);
				__args [2] = new JniArgumentValue ((props == null) ? IntPtr.Zero : ((global::Java.Lang.Object) props).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomLoadingScreen> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
				global::System.GC.KeepAlive (props);
			}
		}

	}
}

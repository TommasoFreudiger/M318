//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']"
	[global::Android.Runtime.Register ("net/optifine/shaders/config/ShaderLine", DoNotGenerateAcw=true)]
	public partial class ShaderLine : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']"
		[global::Android.Runtime.Register ("net/optifine/shaders/config/ShaderLine$Type", DoNotGenerateAcw=true)]
		public sealed partial class Type : global::Java.Lang.Enum {

			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='ATTRIBUTE']"
			[Register ("ATTRIBUTE")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? Attribute {
				get {
					const string __id = "ATTRIBUTE.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='CONST_BOOL']"
			[Register ("CONST_BOOL")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? ConstBool {
				get {
					const string __id = "CONST_BOOL.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='CONST_FLOAT']"
			[Register ("CONST_FLOAT")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? ConstFloat {
				get {
					const string __id = "CONST_FLOAT.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='CONST_INT']"
			[Register ("CONST_INT")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? ConstInt {
				get {
					const string __id = "CONST_INT.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='CONST_IVEC3']"
			[Register ("CONST_IVEC3")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? ConstIvec3 {
				get {
					const string __id = "CONST_IVEC3.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='CONST_VEC2']"
			[Register ("CONST_VEC2")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? ConstVec2 {
				get {
					const string __id = "CONST_VEC2.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='CONST_VEC4']"
			[Register ("CONST_VEC4")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? ConstVec4 {
				get {
					const string __id = "CONST_VEC4.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='EXTENSION']"
			[Register ("EXTENSION")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? Extension {
				get {
					const string __id = "EXTENSION.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='LAYOUT']"
			[Register ("LAYOUT")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? Layout {
				get {
					const string __id = "LAYOUT.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='PROPERTY']"
			[Register ("PROPERTY")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? Property {
				get {
					const string __id = "PROPERTY.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/field[@name='UNIFORM']"
			[Register ("UNIFORM")]
			public static global::Net.Optifine.Shaders.Config.ShaderLine.Type? Uniform {
				get {
					const string __id = "UNIFORM.Lnet/optifine/shaders/config/ShaderLine$Type;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/config/ShaderLine$Type", typeof (Type));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Type (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("valueOf", "(Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderLine$Type;", "")]
			public static unsafe global::Net.Optifine.Shaders.Config.ShaderLine.Type? ValueOf (string? name)
			{
				const string __id = "valueOf.(Ljava/lang/String;)Lnet/optifine/shaders/config/ShaderLine$Type;";
				IntPtr native_name = JNIEnv.NewString ((string?)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_name);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine.Type']/method[@name='values' and count(parameter)=0]"
			[Register ("values", "()[Lnet/optifine/shaders/config/ShaderLine$Type;", "")]
			public static unsafe global::Net.Optifine.Shaders.Config.ShaderLine.Type[]? Values ()
			{
				const string __id = "values.()[Lnet/optifine/shaders/config/ShaderLine$Type;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (global::Net.Optifine.Shaders.Config.ShaderLine.Type[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Shaders.Config.ShaderLine.Type));
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/config/ShaderLine", typeof (ShaderLine));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ShaderLine (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/constructor[@name='ShaderLine' and count(parameter)=4 and parameter[1][@type='net.optifine.shaders.config.ShaderLine.Type'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register (".ctor", "(Lnet/optifine/shaders/config/ShaderLine$Type;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public unsafe ShaderLine (global::Net.Optifine.Shaders.Config.ShaderLine.Type? type, string? name, string? value, string? line) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/shaders/config/ShaderLine$Type;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_name = JNIEnv.NewString ((string?)name);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			IntPtr native_line = JNIEnv.NewString ((string?)line);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((type == null) ? IntPtr.Zero : ((global::Java.Lang.Object) type).Handle);
				__args [1] = new JniArgumentValue (native_name);
				__args [2] = new JniArgumentValue (native_value);
				__args [3] = new JniArgumentValue (native_line);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				JNIEnv.DeleteLocalRef (native_value);
				JNIEnv.DeleteLocalRef (native_line);
				global::System.GC.KeepAlive (type);
			}
		}

		static Delegate? cb_isAttribute;
#pragma warning disable 0169
		static Delegate GetIsAttributeHandler ()
		{
			if (cb_isAttribute == null)
				cb_isAttribute = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsAttribute));
			return cb_isAttribute;
		}

		static bool n_IsAttribute (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsAttribute;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsAttribute {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isAttribute' and count(parameter)=0]"
			[Register ("isAttribute", "()Z", "GetIsAttributeHandler")]
			get {
				const string __id = "isAttribute.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isConstBool;
#pragma warning disable 0169
		static Delegate GetIsConstBoolHandler ()
		{
			if (cb_isConstBool == null)
				cb_isConstBool = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsConstBool));
			return cb_isConstBool;
		}

		static bool n_IsConstBool (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsConstBool;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsConstBool {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBool' and count(parameter)=0]"
			[Register ("isConstBool", "()Z", "GetIsConstBoolHandler")]
			get {
				const string __id = "isConstBool.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isConstFloat;
#pragma warning disable 0169
		static Delegate GetIsConstFloatHandler ()
		{
			if (cb_isConstFloat == null)
				cb_isConstFloat = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsConstFloat));
			return cb_isConstFloat;
		}

		static bool n_IsConstFloat (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsConstFloat;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsConstFloat {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstFloat' and count(parameter)=0]"
			[Register ("isConstFloat", "()Z", "GetIsConstFloatHandler")]
			get {
				const string __id = "isConstFloat.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isConstIVec3;
#pragma warning disable 0169
		static Delegate GetIsConstIVec3Handler ()
		{
			if (cb_isConstIVec3 == null)
				cb_isConstIVec3 = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsConstIVec3));
			return cb_isConstIVec3;
		}

		static bool n_IsConstIVec3 (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsConstIVec3;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsConstIVec3 {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstIVec3' and count(parameter)=0]"
			[Register ("isConstIVec3", "()Z", "GetIsConstIVec3Handler")]
			get {
				const string __id = "isConstIVec3.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isConstInt;
#pragma warning disable 0169
		static Delegate GetIsConstIntHandler ()
		{
			if (cb_isConstInt == null)
				cb_isConstInt = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsConstInt));
			return cb_isConstInt;
		}

		static bool n_IsConstInt (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsConstInt;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsConstInt {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstInt' and count(parameter)=0]"
			[Register ("isConstInt", "()Z", "GetIsConstIntHandler")]
			get {
				const string __id = "isConstInt.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isConstVec2;
#pragma warning disable 0169
		static Delegate GetIsConstVec2Handler ()
		{
			if (cb_isConstVec2 == null)
				cb_isConstVec2 = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsConstVec2));
			return cb_isConstVec2;
		}

		static bool n_IsConstVec2 (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsConstVec2;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsConstVec2 {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstVec2' and count(parameter)=0]"
			[Register ("isConstVec2", "()Z", "GetIsConstVec2Handler")]
			get {
				const string __id = "isConstVec2.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isConstVec4;
#pragma warning disable 0169
		static Delegate GetIsConstVec4Handler ()
		{
			if (cb_isConstVec4 == null)
				cb_isConstVec4 = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsConstVec4));
			return cb_isConstVec4;
		}

		static bool n_IsConstVec4 (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsConstVec4;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsConstVec4 {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstVec4' and count(parameter)=0]"
			[Register ("isConstVec4", "()Z", "GetIsConstVec4Handler")]
			get {
				const string __id = "isConstVec4.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isExtension;
#pragma warning disable 0169
		static Delegate GetIsExtensionHandler ()
		{
			if (cb_isExtension == null)
				cb_isExtension = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsExtension));
			return cb_isExtension;
		}

		static bool n_IsExtension (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsExtension;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsExtension {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isExtension' and count(parameter)=0]"
			[Register ("isExtension", "()Z", "GetIsExtensionHandler")]
			get {
				const string __id = "isExtension.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isLayout;
#pragma warning disable 0169
		static Delegate GetIsLayoutHandler ()
		{
			if (cb_isLayout == null)
				cb_isLayout = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsLayout));
			return cb_isLayout;
		}

		static bool n_IsLayout (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsLayout;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsLayout {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isLayout' and count(parameter)=0]"
			[Register ("isLayout", "()Z", "GetIsLayoutHandler")]
			get {
				const string __id = "isLayout.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isProperty;
#pragma warning disable 0169
		static Delegate GetIsPropertyHandler ()
		{
			if (cb_isProperty == null)
				cb_isProperty = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsProperty));
			return cb_isProperty;
		}

		static bool n_IsProperty (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsProperty;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsProperty {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isProperty' and count(parameter)=0]"
			[Register ("isProperty", "()Z", "GetIsPropertyHandler")]
			get {
				const string __id = "isProperty.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isUniform;
#pragma warning disable 0169
		static Delegate GetIsUniformHandler ()
		{
			if (cb_isUniform == null)
				cb_isUniform = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsUniform));
			return cb_isUniform;
		}

		static bool n_IsUniform (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsUniform;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsUniform {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isUniform' and count(parameter)=0]"
			[Register ("isUniform", "()Z", "GetIsUniformHandler")]
			get {
				const string __id = "isUniform.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getName;
#pragma warning disable 0169
		static Delegate GetGetNameHandler ()
		{
			if (cb_getName == null)
				cb_getName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetName));
			return cb_getName;
		}

		static IntPtr n_GetName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Name);
		}
#pragma warning restore 0169

		public virtual unsafe string? Name {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='getName' and count(parameter)=0]"
			[Register ("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
			get {
				const string __id = "getName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getValue;
#pragma warning disable 0169
		static Delegate GetGetValueHandler ()
		{
			if (cb_getValue == null)
				cb_getValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetValue));
			return cb_getValue;
		}

		static IntPtr n_GetValue (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Value);
		}
#pragma warning restore 0169

		public virtual unsafe string? Value {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='getValue' and count(parameter)=0]"
			[Register ("getValue", "()Ljava/lang/String;", "GetGetValueHandler")]
			get {
				const string __id = "getValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getValueBool;
#pragma warning disable 0169
		static Delegate GetGetValueBoolHandler ()
		{
			if (cb_getValueBool == null)
				cb_getValueBool = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_GetValueBool));
			return cb_getValueBool;
		}

		static bool n_GetValueBool (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ValueBool;
		}
#pragma warning restore 0169

		public virtual unsafe bool ValueBool {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='getValueBool' and count(parameter)=0]"
			[Register ("getValueBool", "()Z", "GetGetValueBoolHandler")]
			get {
				const string __id = "getValueBool.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getValueFloat;
#pragma warning disable 0169
		static Delegate GetGetValueFloatHandler ()
		{
			if (cb_getValueFloat == null)
				cb_getValueFloat = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetValueFloat));
			return cb_getValueFloat;
		}

		static float n_GetValueFloat (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ValueFloat;
		}
#pragma warning restore 0169

		public virtual unsafe float ValueFloat {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='getValueFloat' and count(parameter)=0]"
			[Register ("getValueFloat", "()F", "GetGetValueFloatHandler")]
			get {
				const string __id = "getValueFloat.()F";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getValueInt;
#pragma warning disable 0169
		static Delegate GetGetValueIntHandler ()
		{
			if (cb_getValueInt == null)
				cb_getValueInt = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetValueInt));
			return cb_getValueInt;
		}

		static int n_GetValueInt (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ValueInt;
		}
#pragma warning restore 0169

		public virtual unsafe int ValueInt {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='getValueInt' and count(parameter)=0]"
			[Register ("getValueInt", "()I", "GetGetValueIntHandler")]
			get {
				const string __id = "getValueInt.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getType;
#pragma warning disable 0169
		static Delegate GetGetTypeHandler ()
		{
			if (cb_getType == null)
				cb_getType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetType));
			return cb_getType;
		}

		static IntPtr n_GetType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.GetType ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='getType' and count(parameter)=0]"
		[Register ("getType", "()Lnet/optifine/shaders/config/ShaderLine$Type;", "GetGetTypeHandler")]
		public new virtual unsafe global::Net.Optifine.Shaders.Config.ShaderLine.Type? GetType ()
		{
			const string __id = "getType.()Lnet/optifine/shaders/config/ShaderLine$Type;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine.Type> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_isAttribute_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsAttribute_Ljava_lang_String_Handler ()
		{
			if (cb_isAttribute_Ljava_lang_String_ == null)
				cb_isAttribute_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsAttribute_Ljava_lang_String_));
			return cb_isAttribute_Ljava_lang_String_;
		}

		static bool n_InvokeIsAttribute_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsAttribute (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isAttribute' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isAttribute", "(Ljava/lang/String;)Z", "GetInvokeIsAttribute_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsAttribute (string? name)
		{
			const string __id = "isAttribute.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isConstBool_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstBool_Ljava_lang_String_Handler ()
		{
			if (cb_isConstBool_Ljava_lang_String_ == null)
				cb_isConstBool_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsConstBool_Ljava_lang_String_));
			return cb_isConstBool_Ljava_lang_String_;
		}

		static bool n_InvokeIsConstBool_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstBool (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBool' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstBool", "(Ljava/lang/String;)Z", "GetInvokeIsConstBool_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsConstBool (string? name)
		{
			const string __id = "isConstBool.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isConstBool_Ljava_lang_String_Z;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstBool_Ljava_lang_String_ZHandler ()
		{
			if (cb_isConstBool_Ljava_lang_String_Z == null)
				cb_isConstBool_Ljava_lang_String_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_Z (n_InvokeIsConstBool_Ljava_lang_String_Z));
			return cb_isConstBool_Ljava_lang_String_Z;
		}

		static bool n_InvokeIsConstBool_Ljava_lang_String_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_name, bool val)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstBool (name, val);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBool' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register ("isConstBool", "(Ljava/lang/String;Z)Z", "GetInvokeIsConstBool_Ljava_lang_String_ZHandler")]
		public virtual unsafe bool InvokeIsConstBool (string? name, bool val)
		{
			const string __id = "isConstBool.(Ljava/lang/String;Z)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (val);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isConstBool_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_isConstBool_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_isConstBool_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_));
			return cb_isConstBool_Ljava_lang_String_Ljava_lang_String_;
		}

		static bool n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name1, IntPtr native_name2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name1 = JNIEnv.GetString (native_name1, JniHandleOwnership.DoNotTransfer);
			var name2 = JNIEnv.GetString (native_name2, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstBool (name1, name2);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBool' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("isConstBool", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsConstBool (string? name1, string? name2)
		{
			const string __id = "isConstBool.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_name1 = JNIEnv.NewString ((string?)name1);
			IntPtr native_name2 = JNIEnv.NewString ((string?)name2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_name1);
				__args [1] = new JniArgumentValue (native_name2);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name1);
				JNIEnv.DeleteLocalRef (native_name2);
			}
		}

		static Delegate? cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Z;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_ZHandler ()
		{
			if (cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Z == null)
				cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLZ_Z (n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Z));
			return cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Z;
		}

		static bool n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_name1, IntPtr native_name2, bool val)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name1 = JNIEnv.GetString (native_name1, JniHandleOwnership.DoNotTransfer);
			var name2 = JNIEnv.GetString (native_name2, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstBool (name1, name2, val);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBool' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='boolean']]"
		[Register ("isConstBool", "(Ljava/lang/String;Ljava/lang/String;Z)Z", "GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_ZHandler")]
		public virtual unsafe bool InvokeIsConstBool (string? name1, string? name2, bool val)
		{
			const string __id = "isConstBool.(Ljava/lang/String;Ljava/lang/String;Z)Z";
			IntPtr native_name1 = JNIEnv.NewString ((string?)name1);
			IntPtr native_name2 = JNIEnv.NewString ((string?)name2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_name1);
				__args [1] = new JniArgumentValue (native_name2);
				__args [2] = new JniArgumentValue (val);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name1);
				JNIEnv.DeleteLocalRef (native_name2);
			}
		}

		static Delegate? cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_Z (n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_));
			return cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
		}

		static bool n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name1, IntPtr native_name2, IntPtr native_name3)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name1 = JNIEnv.GetString (native_name1, JniHandleOwnership.DoNotTransfer);
			var name2 = JNIEnv.GetString (native_name2, JniHandleOwnership.DoNotTransfer);
			var name3 = JNIEnv.GetString (native_name3, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstBool (name1, name2, name3);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBool' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("isConstBool", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z", "GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsConstBool (string? name1, string? name2, string? name3)
		{
			const string __id = "isConstBool.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_name1 = JNIEnv.NewString ((string?)name1);
			IntPtr native_name2 = JNIEnv.NewString ((string?)name2);
			IntPtr native_name3 = JNIEnv.NewString ((string?)name3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_name1);
				__args [1] = new JniArgumentValue (native_name2);
				__args [2] = new JniArgumentValue (native_name3);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name1);
				JNIEnv.DeleteLocalRef (native_name2);
				JNIEnv.DeleteLocalRef (native_name3);
			}
		}

		static Delegate? cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Z;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ZHandler ()
		{
			if (cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Z == null)
				cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLZ_Z (n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Z));
			return cb_isConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Z;
		}

		static bool n_InvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_name1, IntPtr native_name2, IntPtr native_name3, bool val)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name1 = JNIEnv.GetString (native_name1, JniHandleOwnership.DoNotTransfer);
			var name2 = JNIEnv.GetString (native_name2, JniHandleOwnership.DoNotTransfer);
			var name3 = JNIEnv.GetString (native_name3, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstBool (name1, name2, name3, val);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBool' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='boolean']]"
		[Register ("isConstBool", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z", "GetInvokeIsConstBool_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ZHandler")]
		public virtual unsafe bool InvokeIsConstBool (string? name1, string? name2, string? name3, bool val)
		{
			const string __id = "isConstBool.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z";
			IntPtr native_name1 = JNIEnv.NewString ((string?)name1);
			IntPtr native_name2 = JNIEnv.NewString ((string?)name2);
			IntPtr native_name3 = JNIEnv.NewString ((string?)name3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_name1);
				__args [1] = new JniArgumentValue (native_name2);
				__args [2] = new JniArgumentValue (native_name3);
				__args [3] = new JniArgumentValue (val);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name1);
				JNIEnv.DeleteLocalRef (native_name2);
				JNIEnv.DeleteLocalRef (native_name3);
			}
		}

		static Delegate? cb_isConstBoolSuffix_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetIsConstBoolSuffix_Ljava_lang_String_Handler ()
		{
			if (cb_isConstBoolSuffix_Ljava_lang_String_ == null)
				cb_isConstBoolSuffix_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsConstBoolSuffix_Ljava_lang_String_));
			return cb_isConstBoolSuffix_Ljava_lang_String_;
		}

		static bool n_IsConstBoolSuffix_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_suffix)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var suffix = JNIEnv.GetString (native_suffix, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsConstBoolSuffix (suffix);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBoolSuffix' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstBoolSuffix", "(Ljava/lang/String;)Z", "GetIsConstBoolSuffix_Ljava_lang_String_Handler")]
		public virtual unsafe bool IsConstBoolSuffix (string? suffix)
		{
			const string __id = "isConstBoolSuffix.(Ljava/lang/String;)Z";
			IntPtr native_suffix = JNIEnv.NewString ((string?)suffix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_suffix);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_suffix);
			}
		}

		static Delegate? cb_isConstBoolSuffix_Ljava_lang_String_Z;
#pragma warning disable 0169
		static Delegate GetIsConstBoolSuffix_Ljava_lang_String_ZHandler ()
		{
			if (cb_isConstBoolSuffix_Ljava_lang_String_Z == null)
				cb_isConstBoolSuffix_Ljava_lang_String_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_Z (n_IsConstBoolSuffix_Ljava_lang_String_Z));
			return cb_isConstBoolSuffix_Ljava_lang_String_Z;
		}

		static bool n_IsConstBoolSuffix_Ljava_lang_String_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_suffix, bool val)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var suffix = JNIEnv.GetString (native_suffix, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsConstBoolSuffix (suffix, val);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstBoolSuffix' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register ("isConstBoolSuffix", "(Ljava/lang/String;Z)Z", "GetIsConstBoolSuffix_Ljava_lang_String_ZHandler")]
		public virtual unsafe bool IsConstBoolSuffix (string? suffix, bool val)
		{
			const string __id = "isConstBoolSuffix.(Ljava/lang/String;Z)Z";
			IntPtr native_suffix = JNIEnv.NewString ((string?)suffix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_suffix);
				__args [1] = new JniArgumentValue (val);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_suffix);
			}
		}

		static Delegate? cb_isConstFloat_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstFloat_Ljava_lang_String_Handler ()
		{
			if (cb_isConstFloat_Ljava_lang_String_ == null)
				cb_isConstFloat_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsConstFloat_Ljava_lang_String_));
			return cb_isConstFloat_Ljava_lang_String_;
		}

		static bool n_InvokeIsConstFloat_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstFloat (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstFloat' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstFloat", "(Ljava/lang/String;)Z", "GetInvokeIsConstFloat_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsConstFloat (string? name)
		{
			const string __id = "isConstFloat.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isConstIVec3_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstIVec3_Ljava_lang_String_Handler ()
		{
			if (cb_isConstIVec3_Ljava_lang_String_ == null)
				cb_isConstIVec3_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsConstIVec3_Ljava_lang_String_));
			return cb_isConstIVec3_Ljava_lang_String_;
		}

		static bool n_InvokeIsConstIVec3_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstIVec3 (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstIVec3' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstIVec3", "(Ljava/lang/String;)Z", "GetInvokeIsConstIVec3_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsConstIVec3 (string? name)
		{
			const string __id = "isConstIVec3.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isConstInt_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstInt_Ljava_lang_String_Handler ()
		{
			if (cb_isConstInt_Ljava_lang_String_ == null)
				cb_isConstInt_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsConstInt_Ljava_lang_String_));
			return cb_isConstInt_Ljava_lang_String_;
		}

		static bool n_InvokeIsConstInt_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstInt (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstInt' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstInt", "(Ljava/lang/String;)Z", "GetInvokeIsConstInt_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsConstInt (string? name)
		{
			const string __id = "isConstInt.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isConstIntSuffix_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetIsConstIntSuffix_Ljava_lang_String_Handler ()
		{
			if (cb_isConstIntSuffix_Ljava_lang_String_ == null)
				cb_isConstIntSuffix_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsConstIntSuffix_Ljava_lang_String_));
			return cb_isConstIntSuffix_Ljava_lang_String_;
		}

		static bool n_IsConstIntSuffix_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_suffix)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var suffix = JNIEnv.GetString (native_suffix, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsConstIntSuffix (suffix);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstIntSuffix' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstIntSuffix", "(Ljava/lang/String;)Z", "GetIsConstIntSuffix_Ljava_lang_String_Handler")]
		public virtual unsafe bool IsConstIntSuffix (string? suffix)
		{
			const string __id = "isConstIntSuffix.(Ljava/lang/String;)Z";
			IntPtr native_suffix = JNIEnv.NewString ((string?)suffix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_suffix);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_suffix);
			}
		}

		static Delegate? cb_isConstVec2_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsConstVec2_Ljava_lang_String_Handler ()
		{
			if (cb_isConstVec2_Ljava_lang_String_ == null)
				cb_isConstVec2_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsConstVec2_Ljava_lang_String_));
			return cb_isConstVec2_Ljava_lang_String_;
		}

		static bool n_InvokeIsConstVec2_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsConstVec2 (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstVec2' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstVec2", "(Ljava/lang/String;)Z", "GetInvokeIsConstVec2_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsConstVec2 (string? name)
		{
			const string __id = "isConstVec2.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isConstVec4Suffix_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetIsConstVec4Suffix_Ljava_lang_String_Handler ()
		{
			if (cb_isConstVec4Suffix_Ljava_lang_String_ == null)
				cb_isConstVec4Suffix_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsConstVec4Suffix_Ljava_lang_String_));
			return cb_isConstVec4Suffix_Ljava_lang_String_;
		}

		static bool n_IsConstVec4Suffix_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_suffix)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var suffix = JNIEnv.GetString (native_suffix, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsConstVec4Suffix (suffix);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isConstVec4Suffix' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isConstVec4Suffix", "(Ljava/lang/String;)Z", "GetIsConstVec4Suffix_Ljava_lang_String_Handler")]
		public virtual unsafe bool IsConstVec4Suffix (string? suffix)
		{
			const string __id = "isConstVec4Suffix.(Ljava/lang/String;)Z";
			IntPtr native_suffix = JNIEnv.NewString ((string?)suffix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_suffix);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_suffix);
			}
		}

		static Delegate? cb_isExtension_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsExtension_Ljava_lang_String_Handler ()
		{
			if (cb_isExtension_Ljava_lang_String_ == null)
				cb_isExtension_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsExtension_Ljava_lang_String_));
			return cb_isExtension_Ljava_lang_String_;
		}

		static bool n_InvokeIsExtension_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsExtension (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isExtension' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isExtension", "(Ljava/lang/String;)Z", "GetInvokeIsExtension_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsExtension (string? name)
		{
			const string __id = "isExtension.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isLayout_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsLayout_Ljava_lang_String_Handler ()
		{
			if (cb_isLayout_Ljava_lang_String_ == null)
				cb_isLayout_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsLayout_Ljava_lang_String_));
			return cb_isLayout_Ljava_lang_String_;
		}

		static bool n_InvokeIsLayout_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsLayout (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isLayout' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isLayout", "(Ljava/lang/String;)Z", "GetInvokeIsLayout_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsLayout (string? name)
		{
			const string __id = "isLayout.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isProperty_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsProperty_Ljava_lang_String_Handler ()
		{
			if (cb_isProperty_Ljava_lang_String_ == null)
				cb_isProperty_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsProperty_Ljava_lang_String_));
			return cb_isProperty_Ljava_lang_String_;
		}

		static bool n_InvokeIsProperty_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsProperty (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isProperty' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isProperty", "(Ljava/lang/String;)Z", "GetInvokeIsProperty_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsProperty (string? name)
		{
			const string __id = "isProperty.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_isProperty_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsProperty_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_isProperty_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_isProperty_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_InvokeIsProperty_Ljava_lang_String_Ljava_lang_String_));
			return cb_isProperty_Ljava_lang_String_Ljava_lang_String_;
		}

		static bool n_InvokeIsProperty_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name, IntPtr native_value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			var value = JNIEnv.GetString (native_value, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsProperty (name, value);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isProperty' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("isProperty", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetInvokeIsProperty_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsProperty (string? name, string? value)
		{
			const string __id = "isProperty.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (native_value);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		static Delegate? cb_isUniform_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetInvokeIsUniform_Ljava_lang_String_Handler ()
		{
			if (cb_isUniform_Ljava_lang_String_ == null)
				cb_isUniform_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_InvokeIsUniform_Ljava_lang_String_));
			return cb_isUniform_Ljava_lang_String_;
		}

		static bool n_InvokeIsUniform_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderLine> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.InvokeIsUniform (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='ShaderLine']/method[@name='isUniform' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isUniform", "(Ljava/lang/String;)Z", "GetInvokeIsUniform_Ljava_lang_String_Handler")]
		public virtual unsafe bool InvokeIsUniform (string? name)
		{
			const string __id = "isUniform.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

	}
}

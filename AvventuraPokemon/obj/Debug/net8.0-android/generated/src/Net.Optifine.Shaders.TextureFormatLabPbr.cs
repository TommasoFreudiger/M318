//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders']/class[@name='TextureFormatLabPbr']"
	[global::Android.Runtime.Register ("net/optifine/shaders/TextureFormatLabPbr", DoNotGenerateAcw=true)]
	public partial class TextureFormatLabPbr : global::Java.Lang.Object, global::Net.Optifine.Shaders.ITextureFormat {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/TextureFormatLabPbr", typeof (TextureFormatLabPbr));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected TextureFormatLabPbr (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders']/class[@name='TextureFormatLabPbr']/constructor[@name='TextureFormatLabPbr' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/lang/String;)V", "")]
		public unsafe TextureFormatLabPbr (string? ver) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_ver = JNIEnv.NewString ((string?)ver);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ver);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ver);
			}
		}

		static Delegate? cb_getMacroName;
#pragma warning disable 0169
		static Delegate GetGetMacroNameHandler ()
		{
			if (cb_getMacroName == null)
				cb_getMacroName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMacroName));
			return cb_getMacroName;
		}

		static IntPtr n_GetMacroName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.TextureFormatLabPbr> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MacroName);
		}
#pragma warning restore 0169

		public virtual unsafe string? MacroName {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='TextureFormatLabPbr']/method[@name='getMacroName' and count(parameter)=0]"
			[Register ("getMacroName", "()Ljava/lang/String;", "GetGetMacroNameHandler")]
			get {
				const string __id = "getMacroName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getMacroVersion;
#pragma warning disable 0169
		static Delegate GetGetMacroVersionHandler ()
		{
			if (cb_getMacroVersion == null)
				cb_getMacroVersion = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMacroVersion));
			return cb_getMacroVersion;
		}

		static IntPtr n_GetMacroVersion (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.TextureFormatLabPbr> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MacroVersion);
		}
#pragma warning restore 0169

		public virtual unsafe string? MacroVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='TextureFormatLabPbr']/method[@name='getMacroVersion' and count(parameter)=0]"
			[Register ("getMacroVersion", "()Ljava/lang/String;", "GetGetMacroVersionHandler")]
			get {
				const string __id = "getMacroVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getColorBlender_Lnet_optifine_shaders_ShadersTextureType_;
#pragma warning disable 0169
		static Delegate GetGetColorBlender_Lnet_optifine_shaders_ShadersTextureType_Handler ()
		{
			if (cb_getColorBlender_Lnet_optifine_shaders_ShadersTextureType_ == null)
				cb_getColorBlender_Lnet_optifine_shaders_ShadersTextureType_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetColorBlender_Lnet_optifine_shaders_ShadersTextureType_));
			return cb_getColorBlender_Lnet_optifine_shaders_ShadersTextureType_;
		}

		static IntPtr n_GetColorBlender_Lnet_optifine_shaders_ShadersTextureType_ (IntPtr jnienv, IntPtr native__this, IntPtr native_typeIn)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.TextureFormatLabPbr> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var typeIn = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersTextureType> (native_typeIn, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetColorBlender (typeIn));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='TextureFormatLabPbr']/method[@name='getColorBlender' and count(parameter)=1 and parameter[1][@type='net.optifine.shaders.ShadersTextureType']]"
		[Register ("getColorBlender", "(Lnet/optifine/shaders/ShadersTextureType;)Lnet/optifine/texture/IColorBlender;", "GetGetColorBlender_Lnet_optifine_shaders_ShadersTextureType_Handler")]
		public virtual unsafe global::Net.Optifine.Texture.IColorBlender? GetColorBlender (global::Net.Optifine.Shaders.ShadersTextureType? typeIn)
		{
			const string __id = "getColorBlender.(Lnet/optifine/shaders/ShadersTextureType;)Lnet/optifine/texture/IColorBlender;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((typeIn == null) ? IntPtr.Zero : ((global::Java.Lang.Object) typeIn).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Texture.IColorBlender> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (typeIn);
			}
		}

		static Delegate? cb_isTextureBlend_Lnet_optifine_shaders_ShadersTextureType_;
#pragma warning disable 0169
		static Delegate GetIsTextureBlend_Lnet_optifine_shaders_ShadersTextureType_Handler ()
		{
			if (cb_isTextureBlend_Lnet_optifine_shaders_ShadersTextureType_ == null)
				cb_isTextureBlend_Lnet_optifine_shaders_ShadersTextureType_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsTextureBlend_Lnet_optifine_shaders_ShadersTextureType_));
			return cb_isTextureBlend_Lnet_optifine_shaders_ShadersTextureType_;
		}

		static bool n_IsTextureBlend_Lnet_optifine_shaders_ShadersTextureType_ (IntPtr jnienv, IntPtr native__this, IntPtr native_typeIn)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.TextureFormatLabPbr> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var typeIn = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.ShadersTextureType> (native_typeIn, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsTextureBlend (typeIn);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='TextureFormatLabPbr']/method[@name='isTextureBlend' and count(parameter)=1 and parameter[1][@type='net.optifine.shaders.ShadersTextureType']]"
		[Register ("isTextureBlend", "(Lnet/optifine/shaders/ShadersTextureType;)Z", "GetIsTextureBlend_Lnet_optifine_shaders_ShadersTextureType_Handler")]
		public virtual unsafe bool IsTextureBlend (global::Net.Optifine.Shaders.ShadersTextureType? typeIn)
		{
			const string __id = "isTextureBlend.(Lnet/optifine/shaders/ShadersTextureType;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((typeIn == null) ? IntPtr.Zero : ((global::Java.Lang.Object) typeIn).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (typeIn);
			}
		}

	}
}

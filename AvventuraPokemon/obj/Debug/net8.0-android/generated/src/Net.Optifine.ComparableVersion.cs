//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='ComparableVersion']"
	[global::Android.Runtime.Register ("net/optifine/ComparableVersion", DoNotGenerateAcw=true)]
	public partial class ComparableVersion : global::Java.Lang.Object, global::Java.Lang.IComparable {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/ComparableVersion", typeof (ComparableVersion));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ComparableVersion (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine']/class[@name='ComparableVersion']/constructor[@name='ComparableVersion' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/lang/String;)V", "")]
		public unsafe ComparableVersion (string? ver) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_ver = JNIEnv.NewString ((string?)ver);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ver);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ver);
			}
		}

		static Delegate? cb_getMajor;
#pragma warning disable 0169
		static Delegate GetGetMajorHandler ()
		{
			if (cb_getMajor == null)
				cb_getMajor = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetMajor));
			return cb_getMajor;
		}

		static int n_GetMajor (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.ComparableVersion> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Major;
		}
#pragma warning restore 0169

		public virtual unsafe int Major {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='ComparableVersion']/method[@name='getMajor' and count(parameter)=0]"
			[Register ("getMajor", "()I", "GetGetMajorHandler")]
			get {
				const string __id = "getMajor.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getMinor;
#pragma warning disable 0169
		static Delegate GetGetMinorHandler ()
		{
			if (cb_getMinor == null)
				cb_getMinor = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetMinor));
			return cb_getMinor;
		}

		static int n_GetMinor (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.ComparableVersion> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Minor;
		}
#pragma warning restore 0169

		public virtual unsafe int Minor {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='ComparableVersion']/method[@name='getMinor' and count(parameter)=0]"
			[Register ("getMinor", "()I", "GetGetMinorHandler")]
			get {
				const string __id = "getMinor.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getPatch;
#pragma warning disable 0169
		static Delegate GetGetPatchHandler ()
		{
			if (cb_getPatch == null)
				cb_getPatch = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetPatch));
			return cb_getPatch;
		}

		static int n_GetPatch (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.ComparableVersion> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Patch;
		}
#pragma warning restore 0169

		public virtual unsafe int Patch {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='ComparableVersion']/method[@name='getPatch' and count(parameter)=0]"
			[Register ("getPatch", "()I", "GetGetPatchHandler")]
			get {
				const string __id = "getPatch.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_compareTo_Lnet_optifine_ComparableVersion_;
#pragma warning disable 0169
		static Delegate GetCompareTo_Lnet_optifine_ComparableVersion_Handler ()
		{
			if (cb_compareTo_Lnet_optifine_ComparableVersion_ == null)
				cb_compareTo_Lnet_optifine_ComparableVersion_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_CompareTo_Lnet_optifine_ComparableVersion_));
			return cb_compareTo_Lnet_optifine_ComparableVersion_;
		}

		static int n_CompareTo_Lnet_optifine_ComparableVersion_ (IntPtr jnienv, IntPtr native__this, IntPtr native_cv)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.ComparableVersion> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var cv = global::Java.Lang.Object.GetObject<global::Net.Optifine.ComparableVersion> (native_cv, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.CompareTo (cv);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='ComparableVersion']/method[@name='compareTo' and count(parameter)=1 and parameter[1][@type='net.optifine.ComparableVersion']]"
		[Register ("compareTo", "(Lnet/optifine/ComparableVersion;)I", "GetCompareTo_Lnet_optifine_ComparableVersion_Handler")]
		public virtual unsafe int CompareTo (global::Net.Optifine.ComparableVersion? cv)
		{
			const string __id = "compareTo.(Lnet/optifine/ComparableVersion;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((cv == null) ? IntPtr.Zero : ((global::Java.Lang.Object) cv).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (cv);
			}
		}

	}
}

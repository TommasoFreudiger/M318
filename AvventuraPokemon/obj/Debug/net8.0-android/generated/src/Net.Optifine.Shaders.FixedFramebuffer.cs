//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders']/class[@name='FixedFramebuffer']"
	[global::Android.Runtime.Register ("net/optifine/shaders/FixedFramebuffer", DoNotGenerateAcw=true)]
	public partial class FixedFramebuffer : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/FixedFramebuffer", typeof (FixedFramebuffer));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FixedFramebuffer (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders']/class[@name='FixedFramebuffer']/constructor[@name='FixedFramebuffer' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int[]'] and parameter[5][@type='int[]'] and parameter[6][@type='boolean'] and parameter[7][@type='boolean']]"
		[Register (".ctor", "(Ljava/lang/String;II[I[IZZ)V", "")]
		public unsafe FixedFramebuffer (string? name, int width, int height, int[]? colorTextures, int[]? colorAttachments, bool depthFilterNearest, bool depthFilterHardware) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;II[I[IZZ)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_name = JNIEnv.NewString ((string?)name);
			IntPtr native_colorTextures = JNIEnv.NewArray (colorTextures);
			IntPtr native_colorAttachments = JNIEnv.NewArray (colorAttachments);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (width);
				__args [2] = new JniArgumentValue (height);
				__args [3] = new JniArgumentValue (native_colorTextures);
				__args [4] = new JniArgumentValue (native_colorAttachments);
				__args [5] = new JniArgumentValue (depthFilterNearest);
				__args [6] = new JniArgumentValue (depthFilterHardware);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				if (colorTextures != null) {
					JNIEnv.CopyArray (native_colorTextures, colorTextures);
					JNIEnv.DeleteLocalRef (native_colorTextures);
				}
				if (colorAttachments != null) {
					JNIEnv.CopyArray (native_colorAttachments, colorAttachments);
					JNIEnv.DeleteLocalRef (native_colorAttachments);
				}
				global::System.GC.KeepAlive (colorTextures);
				global::System.GC.KeepAlive (colorAttachments);
			}
		}

		static Delegate? cb_bindFramebuffer;
#pragma warning disable 0169
		static Delegate GetBindFramebufferHandler ()
		{
			if (cb_bindFramebuffer == null)
				cb_bindFramebuffer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_BindFramebuffer));
			return cb_bindFramebuffer;
		}

		static void n_BindFramebuffer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.FixedFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BindFramebuffer ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='FixedFramebuffer']/method[@name='bindFramebuffer' and count(parameter)=0]"
		[Register ("bindFramebuffer", "()V", "GetBindFramebufferHandler")]
		public virtual unsafe void BindFramebuffer ()
		{
			const string __id = "bindFramebuffer.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_delete;
#pragma warning disable 0169
		static Delegate GetDeleteHandler ()
		{
			if (cb_delete == null)
				cb_delete = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Delete));
			return cb_delete;
		}

		static void n_Delete (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.FixedFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Delete ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='FixedFramebuffer']/method[@name='delete' and count(parameter)=0]"
		[Register ("delete", "()V", "GetDeleteHandler")]
		public virtual unsafe void Delete ()
		{
			const string __id = "delete.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_exists;
#pragma warning disable 0169
		static Delegate GetExistsHandler ()
		{
			if (cb_exists == null)
				cb_exists = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_Exists));
			return cb_exists;
		}

		static bool n_Exists (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.FixedFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Exists ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='FixedFramebuffer']/method[@name='exists' and count(parameter)=0]"
		[Register ("exists", "()Z", "GetExistsHandler")]
		public virtual unsafe bool Exists ()
		{
			const string __id = "exists.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_setup;
#pragma warning disable 0169
		static Delegate GetSetupHandler ()
		{
			if (cb_setup == null)
				cb_setup = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Setup));
			return cb_setup;
		}

		static void n_Setup (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.FixedFramebuffer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Setup ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='FixedFramebuffer']/method[@name='setup' and count(parameter)=0]"
		[Register ("setup", "()V", "GetSetupHandler")]
		public virtual unsafe void Setup ()
		{
			const string __id = "setup.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}

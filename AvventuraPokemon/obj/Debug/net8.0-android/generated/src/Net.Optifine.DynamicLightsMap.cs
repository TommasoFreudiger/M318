//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']"
	[global::Android.Runtime.Register ("net/optifine/DynamicLightsMap", DoNotGenerateAcw=true)]
	public partial class DynamicLightsMap : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/DynamicLightsMap", typeof (DynamicLightsMap));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DynamicLightsMap (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']/constructor[@name='DynamicLightsMap' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe DynamicLightsMap () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_clear;
#pragma warning disable 0169
		static Delegate GetClearHandler ()
		{
			if (cb_clear == null)
				cb_clear = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Clear));
			return cb_clear;
		}

		static void n_Clear (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLightsMap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Clear ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']/method[@name='clear' and count(parameter)=0]"
		[Register ("clear", "()V", "GetClearHandler")]
		public virtual unsafe void Clear ()
		{
			const string __id = "clear.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_get_I;
#pragma warning disable 0169
		static Delegate GetGet_IHandler ()
		{
			if (cb_get_I == null)
				cb_get_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Get_I));
			return cb_get_I;
		}

		static IntPtr n_Get_I (IntPtr jnienv, IntPtr native__this, int id)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLightsMap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Get (id));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']/method[@name='get' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("get", "(I)Lnet/optifine/DynamicLight;", "GetGet_IHandler")]
		public virtual unsafe global::Net.Optifine.DynamicLight? Get (int id)
		{
			const string __id = "get.(I)Lnet/optifine/DynamicLight;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (id);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLight> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_put_ILnet_optifine_DynamicLight_;
#pragma warning disable 0169
		static Delegate GetPut_ILnet_optifine_DynamicLight_Handler ()
		{
			if (cb_put_ILnet_optifine_DynamicLight_ == null)
				cb_put_ILnet_optifine_DynamicLight_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_Put_ILnet_optifine_DynamicLight_));
			return cb_put_ILnet_optifine_DynamicLight_;
		}

		static IntPtr n_Put_ILnet_optifine_DynamicLight_ (IntPtr jnienv, IntPtr native__this, int id, IntPtr native_dynamicLight)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLightsMap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var dynamicLight = global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLight> (native_dynamicLight, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.Put (id, dynamicLight));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']/method[@name='put' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='net.optifine.DynamicLight']]"
		[Register ("put", "(ILnet/optifine/DynamicLight;)Lnet/optifine/DynamicLight;", "GetPut_ILnet_optifine_DynamicLight_Handler")]
		public virtual unsafe global::Net.Optifine.DynamicLight? Put (int id, global::Net.Optifine.DynamicLight? dynamicLight)
		{
			const string __id = "put.(ILnet/optifine/DynamicLight;)Lnet/optifine/DynamicLight;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (id);
				__args [1] = new JniArgumentValue ((dynamicLight == null) ? IntPtr.Zero : ((global::Java.Lang.Object) dynamicLight).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLight> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (dynamicLight);
			}
		}

		static Delegate? cb_remove_I;
#pragma warning disable 0169
		static Delegate GetRemove_IHandler ()
		{
			if (cb_remove_I == null)
				cb_remove_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Remove_I));
			return cb_remove_I;
		}

		static IntPtr n_Remove_I (IntPtr jnienv, IntPtr native__this, int id)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLightsMap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Remove (id));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']/method[@name='remove' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("remove", "(I)Lnet/optifine/DynamicLight;", "GetRemove_IHandler")]
		public virtual unsafe global::Net.Optifine.DynamicLight? Remove (int id)
		{
			const string __id = "remove.(I)Lnet/optifine/DynamicLight;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (id);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLight> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLightsMap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_valueList;
#pragma warning disable 0169
		static Delegate GetValueListHandler ()
		{
			if (cb_valueList == null)
				cb_valueList = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ValueList));
			return cb_valueList;
		}

		static IntPtr n_ValueList (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.DynamicLightsMap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return global::Android.Runtime.JavaList<global::Net.Optifine.DynamicLight>.ToLocalJniHandle (__this.ValueList ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='DynamicLightsMap']/method[@name='valueList' and count(parameter)=0]"
		[Register ("valueList", "()Ljava/util/List;", "GetValueListHandler")]
		public virtual unsafe global::System.Collections.Generic.IList<global::Net.Optifine.DynamicLight>? ValueList ()
		{
			const string __id = "valueList.()Ljava/util/List;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return global::Android.Runtime.JavaList<global::Net.Optifine.DynamicLight>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}

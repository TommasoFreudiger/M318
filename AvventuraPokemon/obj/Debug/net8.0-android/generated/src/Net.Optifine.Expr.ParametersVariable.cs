//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Expr {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']"
	[global::Android.Runtime.Register ("net/optifine/expr/ParametersVariable", DoNotGenerateAcw=true)]
	public partial class ParametersVariable : global::Java.Lang.Object, global::Net.Optifine.Expr.IParameters {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/expr/ParametersVariable", typeof (ParametersVariable));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ParametersVariable (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/constructor[@name='ParametersVariable' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ParametersVariable () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/constructor[@name='ParametersVariable' and count(parameter)=3 and parameter[1][@type='net.optifine.expr.ExpressionType[]'] and parameter[2][@type='net.optifine.expr.ExpressionType[]'] and parameter[3][@type='net.optifine.expr.ExpressionType[]']]"
		[Register (".ctor", "([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;)V", "")]
		public unsafe ParametersVariable (global::Net.Optifine.Expr.ExpressionType[]? first, global::Net.Optifine.Expr.ExpressionType[]? repeat, global::Net.Optifine.Expr.ExpressionType[]? last) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_first = JNIEnv.NewArray (first);
			IntPtr native_repeat = JNIEnv.NewArray (repeat);
			IntPtr native_last = JNIEnv.NewArray (last);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_first);
				__args [1] = new JniArgumentValue (native_repeat);
				__args [2] = new JniArgumentValue (native_last);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (first != null) {
					JNIEnv.CopyArray (native_first, first);
					JNIEnv.DeleteLocalRef (native_first);
				}
				if (repeat != null) {
					JNIEnv.CopyArray (native_repeat, repeat);
					JNIEnv.DeleteLocalRef (native_repeat);
				}
				if (last != null) {
					JNIEnv.CopyArray (native_last, last);
					JNIEnv.DeleteLocalRef (native_last);
				}
				global::System.GC.KeepAlive (first);
				global::System.GC.KeepAlive (repeat);
				global::System.GC.KeepAlive (last);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/constructor[@name='ParametersVariable' and count(parameter)=4 and parameter[1][@type='net.optifine.expr.ExpressionType[]'] and parameter[2][@type='net.optifine.expr.ExpressionType[]'] and parameter[3][@type='net.optifine.expr.ExpressionType[]'] and parameter[4][@type='int']]"
		[Register (".ctor", "([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;I)V", "")]
		public unsafe ParametersVariable (global::Net.Optifine.Expr.ExpressionType[]? first, global::Net.Optifine.Expr.ExpressionType[]? repeat, global::Net.Optifine.Expr.ExpressionType[]? last, int maxCount) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "([Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;[Lnet/optifine/expr/ExpressionType;I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_first = JNIEnv.NewArray (first);
			IntPtr native_repeat = JNIEnv.NewArray (repeat);
			IntPtr native_last = JNIEnv.NewArray (last);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_first);
				__args [1] = new JniArgumentValue (native_repeat);
				__args [2] = new JniArgumentValue (native_last);
				__args [3] = new JniArgumentValue (maxCount);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (first != null) {
					JNIEnv.CopyArray (native_first, first);
					JNIEnv.DeleteLocalRef (native_first);
				}
				if (repeat != null) {
					JNIEnv.CopyArray (native_repeat, repeat);
					JNIEnv.DeleteLocalRef (native_repeat);
				}
				if (last != null) {
					JNIEnv.CopyArray (native_last, last);
					JNIEnv.DeleteLocalRef (native_last);
				}
				global::System.GC.KeepAlive (first);
				global::System.GC.KeepAlive (repeat);
				global::System.GC.KeepAlive (last);
			}
		}

		static Delegate? cb_getCountRepeat;
#pragma warning disable 0169
		static Delegate GetGetCountRepeatHandler ()
		{
			if (cb_getCountRepeat == null)
				cb_getCountRepeat = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetCountRepeat));
			return cb_getCountRepeat;
		}

		static int n_GetCountRepeat (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.CountRepeat;
		}
#pragma warning restore 0169

		public virtual unsafe int CountRepeat {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='getCountRepeat' and count(parameter)=0]"
			[Register ("getCountRepeat", "()I", "GetGetCountRepeatHandler")]
			get {
				const string __id = "getCountRepeat.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_first_arrayLnet_optifine_expr_ExpressionType_;
#pragma warning disable 0169
		static Delegate GetFirst_arrayLnet_optifine_expr_ExpressionType_Handler ()
		{
			if (cb_first_arrayLnet_optifine_expr_ExpressionType_ == null)
				cb_first_arrayLnet_optifine_expr_ExpressionType_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_First_arrayLnet_optifine_expr_ExpressionType_));
			return cb_first_arrayLnet_optifine_expr_ExpressionType_;
		}

		static IntPtr n_First_arrayLnet_optifine_expr_ExpressionType_ (IntPtr jnienv, IntPtr native__this, IntPtr native_first)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var first = (global::Net.Optifine.Expr.ExpressionType[]?) JNIEnv.GetArray (native_first, JniHandleOwnership.DoNotTransfer, typeof (global::Net.Optifine.Expr.ExpressionType));
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.First (first));
			if (first != null)
				JNIEnv.CopyArray (first, native_first);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='first' and count(parameter)=1 and parameter[1][@type='net.optifine.expr.ExpressionType...']]"
		[Register ("first", "([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable;", "GetFirst_arrayLnet_optifine_expr_ExpressionType_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.ParametersVariable? First (params global::Net.Optifine.Expr.ExpressionType[]? first)
		{
			const string __id = "first.([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable;";
			IntPtr native_first = JNIEnv.NewArray (first);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_first);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (first != null) {
					JNIEnv.CopyArray (native_first, first);
					JNIEnv.DeleteLocalRef (native_first);
				}
				global::System.GC.KeepAlive (first);
			}
		}

		static Delegate? cb_getFirst;
#pragma warning disable 0169
		static Delegate GetGetFirstHandler ()
		{
			if (cb_getFirst == null)
				cb_getFirst = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetFirst));
			return cb_getFirst;
		}

		static IntPtr n_GetFirst (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetFirst ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='getFirst' and count(parameter)=0]"
		[Register ("getFirst", "()[Lnet/optifine/expr/ExpressionType;", "GetGetFirstHandler")]
		public virtual unsafe global::Net.Optifine.Expr.ExpressionType[]? GetFirst ()
		{
			const string __id = "getFirst.()[Lnet/optifine/expr/ExpressionType;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (global::Net.Optifine.Expr.ExpressionType[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Expr.ExpressionType));
			} finally {
			}
		}

		static Delegate? cb_getLast;
#pragma warning disable 0169
		static Delegate GetGetLastHandler ()
		{
			if (cb_getLast == null)
				cb_getLast = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLast));
			return cb_getLast;
		}

		static IntPtr n_GetLast (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetLast ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='getLast' and count(parameter)=0]"
		[Register ("getLast", "()[Lnet/optifine/expr/ExpressionType;", "GetGetLastHandler")]
		public virtual unsafe global::Net.Optifine.Expr.ExpressionType[]? GetLast ()
		{
			const string __id = "getLast.()[Lnet/optifine/expr/ExpressionType;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (global::Net.Optifine.Expr.ExpressionType[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Expr.ExpressionType));
			} finally {
			}
		}

		static Delegate? cb_getParameterTypes_arrayLnet_optifine_expr_IExpression_;
#pragma warning disable 0169
		static Delegate GetGetParameterTypes_arrayLnet_optifine_expr_IExpression_Handler ()
		{
			if (cb_getParameterTypes_arrayLnet_optifine_expr_IExpression_ == null)
				cb_getParameterTypes_arrayLnet_optifine_expr_IExpression_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetParameterTypes_arrayLnet_optifine_expr_IExpression_));
			return cb_getParameterTypes_arrayLnet_optifine_expr_IExpression_;
		}

		static IntPtr n_GetParameterTypes_arrayLnet_optifine_expr_IExpression_ (IntPtr jnienv, IntPtr native__this, IntPtr native_arguments)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var arguments = (global::Net.Optifine.Expr.IExpression[]?) JNIEnv.GetArray (native_arguments, JniHandleOwnership.DoNotTransfer, typeof (global::Net.Optifine.Expr.IExpression));
			IntPtr __ret = JNIEnv.NewArray (__this.GetParameterTypes (arguments));
			if (arguments != null)
				JNIEnv.CopyArray (arguments, native_arguments);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='getParameterTypes' and count(parameter)=1 and parameter[1][@type='net.optifine.expr.IExpression[]']]"
		[Register ("getParameterTypes", "([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType;", "GetGetParameterTypes_arrayLnet_optifine_expr_IExpression_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.ExpressionType[]? GetParameterTypes (global::Net.Optifine.Expr.IExpression[]? arguments)
		{
			const string __id = "getParameterTypes.([Lnet/optifine/expr/IExpression;)[Lnet/optifine/expr/ExpressionType;";
			IntPtr native_arguments = JNIEnv.NewArray (arguments);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_arguments);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Expr.ExpressionType[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Expr.ExpressionType));
			} finally {
				if (arguments != null) {
					JNIEnv.CopyArray (native_arguments, arguments);
					JNIEnv.DeleteLocalRef (native_arguments);
				}
				global::System.GC.KeepAlive (arguments);
			}
		}

		static Delegate? cb_getRepeat;
#pragma warning disable 0169
		static Delegate GetGetRepeatHandler ()
		{
			if (cb_getRepeat == null)
				cb_getRepeat = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetRepeat));
			return cb_getRepeat;
		}

		static IntPtr n_GetRepeat (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetRepeat ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='getRepeat' and count(parameter)=0]"
		[Register ("getRepeat", "()[Lnet/optifine/expr/ExpressionType;", "GetGetRepeatHandler")]
		public virtual unsafe global::Net.Optifine.Expr.ExpressionType[]? GetRepeat ()
		{
			const string __id = "getRepeat.()[Lnet/optifine/expr/ExpressionType;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (global::Net.Optifine.Expr.ExpressionType[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Expr.ExpressionType));
			} finally {
			}
		}

		static Delegate? cb_last_arrayLnet_optifine_expr_ExpressionType_;
#pragma warning disable 0169
		static Delegate GetLast_arrayLnet_optifine_expr_ExpressionType_Handler ()
		{
			if (cb_last_arrayLnet_optifine_expr_ExpressionType_ == null)
				cb_last_arrayLnet_optifine_expr_ExpressionType_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_Last_arrayLnet_optifine_expr_ExpressionType_));
			return cb_last_arrayLnet_optifine_expr_ExpressionType_;
		}

		static IntPtr n_Last_arrayLnet_optifine_expr_ExpressionType_ (IntPtr jnienv, IntPtr native__this, IntPtr native_last)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var last = (global::Net.Optifine.Expr.ExpressionType[]?) JNIEnv.GetArray (native_last, JniHandleOwnership.DoNotTransfer, typeof (global::Net.Optifine.Expr.ExpressionType));
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.Last (last));
			if (last != null)
				JNIEnv.CopyArray (last, native_last);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='last' and count(parameter)=1 and parameter[1][@type='net.optifine.expr.ExpressionType...']]"
		[Register ("last", "([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable;", "GetLast_arrayLnet_optifine_expr_ExpressionType_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.ParametersVariable? Last (params global::Net.Optifine.Expr.ExpressionType[]? last)
		{
			const string __id = "last.([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable;";
			IntPtr native_last = JNIEnv.NewArray (last);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_last);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (last != null) {
					JNIEnv.CopyArray (native_last, last);
					JNIEnv.DeleteLocalRef (native_last);
				}
				global::System.GC.KeepAlive (last);
			}
		}

		static Delegate? cb_maxCount_I;
#pragma warning disable 0169
		static Delegate GetMaxCount_IHandler ()
		{
			if (cb_maxCount_I == null)
				cb_maxCount_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_MaxCount_I));
			return cb_maxCount_I;
		}

		static IntPtr n_MaxCount_I (IntPtr jnienv, IntPtr native__this, int maxCount)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.MaxCount (maxCount));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='maxCount' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("maxCount", "(I)Lnet/optifine/expr/ParametersVariable;", "GetMaxCount_IHandler")]
		public virtual unsafe global::Net.Optifine.Expr.ParametersVariable? MaxCount (int maxCount)
		{
			const string __id = "maxCount.(I)Lnet/optifine/expr/ParametersVariable;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (maxCount);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_repeat_arrayLnet_optifine_expr_ExpressionType_;
#pragma warning disable 0169
		static Delegate GetRepeat_arrayLnet_optifine_expr_ExpressionType_Handler ()
		{
			if (cb_repeat_arrayLnet_optifine_expr_ExpressionType_ == null)
				cb_repeat_arrayLnet_optifine_expr_ExpressionType_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_Repeat_arrayLnet_optifine_expr_ExpressionType_));
			return cb_repeat_arrayLnet_optifine_expr_ExpressionType_;
		}

		static IntPtr n_Repeat_arrayLnet_optifine_expr_ExpressionType_ (IntPtr jnienv, IntPtr native__this, IntPtr native_repeat)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var repeat = (global::Net.Optifine.Expr.ExpressionType[]?) JNIEnv.GetArray (native_repeat, JniHandleOwnership.DoNotTransfer, typeof (global::Net.Optifine.Expr.ExpressionType));
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.Repeat (repeat));
			if (repeat != null)
				JNIEnv.CopyArray (repeat, native_repeat);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ParametersVariable']/method[@name='repeat' and count(parameter)=1 and parameter[1][@type='net.optifine.expr.ExpressionType...']]"
		[Register ("repeat", "([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable;", "GetRepeat_arrayLnet_optifine_expr_ExpressionType_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.ParametersVariable? Repeat (params global::Net.Optifine.Expr.ExpressionType[]? repeat)
		{
			const string __id = "repeat.([Lnet/optifine/expr/ExpressionType;)Lnet/optifine/expr/ParametersVariable;";
			IntPtr native_repeat = JNIEnv.NewArray (repeat);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_repeat);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ParametersVariable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (repeat != null) {
					JNIEnv.CopyArray (native_repeat, repeat);
					JNIEnv.DeleteLocalRef (native_repeat);
				}
				global::System.GC.KeepAlive (repeat);
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='HeaderLineFunction']"
	[global::Android.Runtime.Register ("net/optifine/shaders/config/HeaderLineFunction", DoNotGenerateAcw=true)]
	public partial class HeaderLineFunction : global::Net.Optifine.Shaders.Config.HeaderLine {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/config/HeaderLineFunction", typeof (HeaderLineFunction));

		internal static new IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected HeaderLineFunction (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='HeaderLineFunction']/constructor[@name='HeaderLineFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
		public unsafe HeaderLineFunction (string? name, string? text) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_name = JNIEnv.NewString ((string?)name);
			IntPtr native_text = JNIEnv.NewString ((string?)text);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (native_text);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				JNIEnv.DeleteLocalRef (native_text);
			}
		}

		static Delegate? cb_getText;
#pragma warning disable 0169
		static Delegate GetGetTextHandler ()
		{
			if (cb_getText == null)
				cb_getText = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetText));
			return cb_getText;
		}

		static IntPtr n_GetText (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.HeaderLineFunction> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Text);
		}
#pragma warning restore 0169

		public override unsafe string? Text {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='HeaderLineFunction']/method[@name='getText' and count(parameter)=0]"
			[Register ("getText", "()Ljava/lang/String;", "GetGetTextHandler")]
			get {
				const string __id = "getText.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_matches_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetMatches_Ljava_lang_String_Handler ()
		{
			if (cb_matches_Ljava_lang_String_ == null)
				cb_matches_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_Matches_Ljava_lang_String_));
			return cb_matches_Ljava_lang_String_;
		}

		static bool n_Matches_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_line)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.HeaderLineFunction> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var line = JNIEnv.GetString (native_line, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.Matches (line);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='HeaderLineFunction']/method[@name='matches' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("matches", "(Ljava/lang/String;)Z", "GetMatches_Ljava_lang_String_Handler")]
		public override unsafe bool Matches (string? line)
		{
			const string __id = "matches.(Ljava/lang/String;)Z";
			IntPtr native_line = JNIEnv.NewString ((string?)line);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_line);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_line);
			}
		}

		static Delegate? cb_removeFrom_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetRemoveFrom_Ljava_lang_String_Handler ()
		{
			if (cb_removeFrom_Ljava_lang_String_ == null)
				cb_removeFrom_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_RemoveFrom_Ljava_lang_String_));
			return cb_removeFrom_Ljava_lang_String_;
		}

		static IntPtr n_RemoveFrom_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_line)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.HeaderLineFunction> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var line = JNIEnv.GetString (native_line, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.RemoveFrom (line));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='HeaderLineFunction']/method[@name='removeFrom' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("removeFrom", "(Ljava/lang/String;)Ljava/lang/String;", "GetRemoveFrom_Ljava_lang_String_Handler")]
		public override unsafe string? RemoveFrom (string? line)
		{
			const string __id = "removeFrom.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_line = JNIEnv.NewString ((string?)line);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_line);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_line);
			}
		}

	}
}

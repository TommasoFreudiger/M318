//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Optifine.Json {

	// Metadata.xml XPath class reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']"
	[global::Android.Runtime.Register ("optifine/json/ParseException", DoNotGenerateAcw=true)]
	public partial class ParseException : global::Java.Lang.Exception {
		// Metadata.xml XPath field reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/field[@name='ERROR_UNEXPECTED_CHAR']"
		[Register ("ERROR_UNEXPECTED_CHAR")]
		public const int ErrorUnexpectedChar = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/field[@name='ERROR_UNEXPECTED_EXCEPTION']"
		[Register ("ERROR_UNEXPECTED_EXCEPTION")]
		public const int ErrorUnexpectedException = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/field[@name='ERROR_UNEXPECTED_TOKEN']"
		[Register ("ERROR_UNEXPECTED_TOKEN")]
		public const int ErrorUnexpectedToken = (int) 1;

		static readonly JniPeerMembers _members = new XAPeerMembers ("optifine/json/ParseException", typeof (ParseException));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ParseException (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/constructor[@name='ParseException' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register (".ctor", "(I)V", "")]
		public unsafe ParseException (int errorType) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(I)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (errorType);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/constructor[@name='ParseException' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.Object']]"
		[Register (".ctor", "(IILjava/lang/Object;)V", "")]
		public unsafe ParseException (int position, int errorType, global::Java.Lang.Object? unexpectedObject) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(IILjava/lang/Object;)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (errorType);
				__args [2] = new JniArgumentValue ((unexpectedObject == null) ? IntPtr.Zero : ((global::Java.Lang.Object) unexpectedObject).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (unexpectedObject);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/constructor[@name='ParseException' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.Object']]"
		[Register (".ctor", "(ILjava/lang/Object;)V", "")]
		public unsafe ParseException (int errorType, global::Java.Lang.Object? unexpectedObject) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(ILjava/lang/Object;)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (errorType);
				__args [1] = new JniArgumentValue ((unexpectedObject == null) ? IntPtr.Zero : ((global::Java.Lang.Object) unexpectedObject).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (unexpectedObject);
			}
		}

		static Delegate? cb_getErrorType;
#pragma warning disable 0169
		static Delegate GetGetErrorTypeHandler ()
		{
			if (cb_getErrorType == null)
				cb_getErrorType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetErrorType));
			return cb_getErrorType;
		}

		static int n_GetErrorType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.ParseException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ErrorType;
		}
#pragma warning restore 0169

		static Delegate? cb_setErrorType_I;
#pragma warning disable 0169
		static Delegate GetSetErrorType_IHandler ()
		{
			if (cb_setErrorType_I == null)
				cb_setErrorType_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetErrorType_I));
			return cb_setErrorType_I;
		}

		static void n_SetErrorType_I (IntPtr jnienv, IntPtr native__this, int errorType)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.ParseException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ErrorType = errorType;
		}
#pragma warning restore 0169

		public virtual unsafe int ErrorType {
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/method[@name='getErrorType' and count(parameter)=0]"
			[Register ("getErrorType", "()I", "GetGetErrorTypeHandler")]
			get {
				const string __id = "getErrorType.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/method[@name='setErrorType' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setErrorType", "(I)V", "GetSetErrorType_IHandler")]
			set {
				const string __id = "setErrorType.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getPosition;
#pragma warning disable 0169
		static Delegate GetGetPositionHandler ()
		{
			if (cb_getPosition == null)
				cb_getPosition = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetPosition));
			return cb_getPosition;
		}

		static int n_GetPosition (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.ParseException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Position;
		}
#pragma warning restore 0169

		static Delegate? cb_setPosition_I;
#pragma warning disable 0169
		static Delegate GetSetPosition_IHandler ()
		{
			if (cb_setPosition_I == null)
				cb_setPosition_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetPosition_I));
			return cb_setPosition_I;
		}

		static void n_SetPosition_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.ParseException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Position = position;
		}
#pragma warning restore 0169

		public virtual unsafe int Position {
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/method[@name='getPosition' and count(parameter)=0]"
			[Register ("getPosition", "()I", "GetGetPositionHandler")]
			get {
				const string __id = "getPosition.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/method[@name='setPosition' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setPosition", "(I)V", "GetSetPosition_IHandler")]
			set {
				const string __id = "setPosition.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getUnexpectedObject;
#pragma warning disable 0169
		static Delegate GetGetUnexpectedObjectHandler ()
		{
			if (cb_getUnexpectedObject == null)
				cb_getUnexpectedObject = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetUnexpectedObject));
			return cb_getUnexpectedObject;
		}

		static IntPtr n_GetUnexpectedObject (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.ParseException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.UnexpectedObject);
		}
#pragma warning restore 0169

		static Delegate? cb_setUnexpectedObject_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetUnexpectedObject_Ljava_lang_Object_Handler ()
		{
			if (cb_setUnexpectedObject_Ljava_lang_Object_ == null)
				cb_setUnexpectedObject_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetUnexpectedObject_Ljava_lang_Object_));
			return cb_setUnexpectedObject_Ljava_lang_Object_;
		}

		static void n_SetUnexpectedObject_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_unexpectedObject)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.ParseException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var unexpectedObject = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_unexpectedObject, JniHandleOwnership.DoNotTransfer);
			__this.UnexpectedObject = unexpectedObject;
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Object? UnexpectedObject {
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/method[@name='getUnexpectedObject' and count(parameter)=0]"
			[Register ("getUnexpectedObject", "()Ljava/lang/Object;", "GetGetUnexpectedObjectHandler")]
			get {
				const string __id = "getUnexpectedObject.()Ljava/lang/Object;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/method[@name='setUnexpectedObject' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
			[Register ("setUnexpectedObject", "(Ljava/lang/Object;)V", "GetSetUnexpectedObject_Ljava_lang_Object_Handler")]
			set {
				const string __id = "setUnexpectedObject.(Ljava/lang/Object;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate? cb_toString;
#pragma warning disable 0169
		static Delegate GetToStringHandler ()
		{
			if (cb_toString == null)
				cb_toString = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToString));
			return cb_toString;
		}

		static IntPtr n_ToString (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.ParseException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.ToString ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='ParseException']/method[@name='toString' and count(parameter)=0]"
		[Register ("toString", "()Ljava/lang/String;", "GetToStringHandler")]
		public override unsafe string? ToString ()
		{
			const string __id = "toString.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}

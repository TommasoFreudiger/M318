//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Http {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']"
	[global::Android.Runtime.Register ("net/optifine/http/HttpPipeline", DoNotGenerateAcw=true)]
	public partial class HttpPipeline : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_ACCEPT']"
		[Register ("HEADER_ACCEPT")]
		public const string HeaderAccept = (string) "Accept";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_CONNECTION']"
		[Register ("HEADER_CONNECTION")]
		public const string HeaderConnection = (string) "Connection";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_HOST']"
		[Register ("HEADER_HOST")]
		public const string HeaderHost = (string) "Host";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_KEEP_ALIVE']"
		[Register ("HEADER_KEEP_ALIVE")]
		public const string HeaderKeepAlive = (string) "Keep-Alive";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_LOCATION']"
		[Register ("HEADER_LOCATION")]
		public const string HeaderLocation = (string) "Location";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_TRANSFER_ENCODING']"
		[Register ("HEADER_TRANSFER_ENCODING")]
		public const string HeaderTransferEncoding = (string) "Transfer-Encoding";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_USER_AGENT']"
		[Register ("HEADER_USER_AGENT")]
		public const string HeaderUserAgent = (string) "User-Agent";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_VALUE_CHUNKED']"
		[Register ("HEADER_VALUE_CHUNKED")]
		public const string HeaderValueChunked = (string) "chunked";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/field[@name='HEADER_VALUE_KEEP_ALIVE']"
		[Register ("HEADER_VALUE_KEEP_ALIVE")]
		public const string HeaderValueKeepAlive = (string) "keep-alive";

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/http/HttpPipeline", typeof (HttpPipeline));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected HttpPipeline (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		public static unsafe bool HasActiveRequests {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='hasActiveRequests' and count(parameter)=0]"
			[Register ("hasActiveRequests", "()Z", "")]
			get {
				const string __id = "hasActiveRequests.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='addRequest' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='net.optifine.http.HttpListener']]"
		[Register ("addRequest", "(Ljava/lang/String;Lnet/optifine/http/HttpListener;)V", "")]
		public static unsafe void AddRequest (string? urlStr, global::Net.Optifine.Http.IHttpListener? listener)
		{
			const string __id = "addRequest.(Ljava/lang/String;Lnet/optifine/http/HttpListener;)V";
			IntPtr native_urlStr = JNIEnv.NewString ((string?)urlStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_urlStr);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_urlStr);
				global::System.GC.KeepAlive (listener);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='addRequest' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='net.optifine.http.HttpListener'] and parameter[3][@type='java.net.Proxy']]"
		[Register ("addRequest", "(Ljava/lang/String;Lnet/optifine/http/HttpListener;Ljava/net/Proxy;)V", "")]
		public static unsafe void AddRequest (string? urlStr, global::Net.Optifine.Http.IHttpListener? listener, global::Java.Net.Proxy? proxy)
		{
			const string __id = "addRequest.(Ljava/lang/String;Lnet/optifine/http/HttpListener;Ljava/net/Proxy;)V";
			IntPtr native_urlStr = JNIEnv.NewString ((string?)urlStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_urlStr);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				__args [2] = new JniArgumentValue ((proxy == null) ? IntPtr.Zero : ((global::Java.Lang.Object) proxy).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_urlStr);
				global::System.GC.KeepAlive (listener);
				global::System.GC.KeepAlive (proxy);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='addRequest' and count(parameter)=1 and parameter[1][@type='net.optifine.http.HttpPipelineRequest']]"
		[Register ("addRequest", "(Lnet/optifine/http/HttpPipelineRequest;)V", "")]
		public static unsafe void AddRequest (global::Net.Optifine.Http.HttpPipelineRequest? pr)
		{
			const string __id = "addRequest.(Lnet/optifine/http/HttpPipelineRequest;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((pr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) pr).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (pr);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='executeRequest' and count(parameter)=1 and parameter[1][@type='net.optifine.http.HttpRequest']]"
		[Register ("executeRequest", "(Lnet/optifine/http/HttpRequest;)Lnet/optifine/http/HttpResponse;", "")]
		public static unsafe global::Net.Optifine.Http.HttpResponse? ExecuteRequest (global::Net.Optifine.Http.HttpRequest? req)
		{
			const string __id = "executeRequest.(Lnet/optifine/http/HttpRequest;)Lnet/optifine/http/HttpResponse;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((req == null) ? IntPtr.Zero : ((global::Java.Lang.Object) req).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpResponse> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (req);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='get' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("get", "(Ljava/lang/String;)[B", "")]
		public static unsafe byte[]? Get (string? urlStr)
		{
			const string __id = "get.(Ljava/lang/String;)[B";
			IntPtr native_urlStr = JNIEnv.NewString ((string?)urlStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_urlStr);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				JNIEnv.DeleteLocalRef (native_urlStr);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='get' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.net.Proxy']]"
		[Register ("get", "(Ljava/lang/String;Ljava/net/Proxy;)[B", "")]
		public static unsafe byte[]? Get (string? urlStr, global::Java.Net.Proxy? proxy)
		{
			const string __id = "get.(Ljava/lang/String;Ljava/net/Proxy;)[B";
			IntPtr native_urlStr = JNIEnv.NewString ((string?)urlStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_urlStr);
				__args [1] = new JniArgumentValue ((proxy == null) ? IntPtr.Zero : ((global::Java.Lang.Object) proxy).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				JNIEnv.DeleteLocalRef (native_urlStr);
				global::System.GC.KeepAlive (proxy);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipeline']/method[@name='makeRequest' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.net.Proxy']]"
		[Register ("makeRequest", "(Ljava/lang/String;Ljava/net/Proxy;)Lnet/optifine/http/HttpRequest;", "")]
		public static unsafe global::Net.Optifine.Http.HttpRequest? MakeRequest (string? urlStr, global::Java.Net.Proxy? proxy)
		{
			const string __id = "makeRequest.(Ljava/lang/String;Ljava/net/Proxy;)Lnet/optifine/http/HttpRequest;";
			IntPtr native_urlStr = JNIEnv.NewString ((string?)urlStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_urlStr);
				__args [1] = new JniArgumentValue ((proxy == null) ? IntPtr.Zero : ((global::Java.Lang.Object) proxy).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpRequest> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_urlStr);
				global::System.GC.KeepAlive (proxy);
			}
		}

	}
}

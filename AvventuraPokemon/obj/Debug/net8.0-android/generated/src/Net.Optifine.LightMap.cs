//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='LightMap']"
	[global::Android.Runtime.Register ("net/optifine/LightMap", DoNotGenerateAcw=true)]
	public partial class LightMap : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/LightMap", typeof (LightMap));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected LightMap (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine']/class[@name='LightMap']/constructor[@name='LightMap' and count(parameter)=1 and parameter[1][@type='net.optifine.CustomColormap']]"
		[Register (".ctor", "(Lnet/optifine/CustomColormap;)V", "")]
		public unsafe LightMap (global::Net.Optifine.CustomColormap? lightMapRgb) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/CustomColormap;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((lightMapRgb == null) ? IntPtr.Zero : ((global::Java.Lang.Object) lightMapRgb).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (lightMapRgb);
			}
		}

		static Delegate? cb_getColormap;
#pragma warning disable 0169
		static Delegate GetGetColormapHandler ()
		{
			if (cb_getColormap == null)
				cb_getColormap = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetColormap));
			return cb_getColormap;
		}

		static IntPtr n_GetColormap (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.LightMap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Colormap);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.CustomColormap? Colormap {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='LightMap']/method[@name='getColormap' and count(parameter)=0]"
			[Register ("getColormap", "()Lnet/optifine/CustomColormap;", "GetGetColormapHandler")]
			get {
				const string __id = "getColormap.()Lnet/optifine/CustomColormap;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Reflect {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']"
	[global::Android.Runtime.Register ("net/optifine/reflect/ReflectorField", DoNotGenerateAcw=true)]
	public partial class ReflectorField : global::Java.Lang.Object, global::Net.Optifine.Reflect.IResolvable {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/reflect/ReflectorField", typeof (ReflectorField));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ReflectorField (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/constructor[@name='ReflectorField' and count(parameter)=1 and parameter[1][@type='java.lang.reflect.Field']]"
		[Register (".ctor", "(Ljava/lang/reflect/Field;)V", "")]
		public unsafe ReflectorField (global::Java.Lang.Reflect.Field? field) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/reflect/Field;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((field == null) ? IntPtr.Zero : ((global::Java.Lang.Object) field).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (field);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/constructor[@name='ReflectorField' and count(parameter)=1 and parameter[1][@type='net.optifine.reflect.IFieldLocator']]"
		[Register (".ctor", "(Lnet/optifine/reflect/IFieldLocator;)V", "")]
		public unsafe ReflectorField (global::Net.Optifine.Reflect.IFieldLocator? fieldLocator) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/reflect/IFieldLocator;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((fieldLocator == null) ? IntPtr.Zero : ((global::Java.Lang.Object) fieldLocator).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (fieldLocator);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/constructor[@name='ReflectorField' and count(parameter)=2 and parameter[1][@type='net.optifine.reflect.ReflectorClass'] and parameter[2][@type='java.lang.Class']]"
		[Register (".ctor", "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;)V", "")]
		public unsafe ReflectorField (global::Net.Optifine.Reflect.ReflectorClass? reflectorClass, global::Java.Lang.Class? targetFieldType) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((reflectorClass == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reflectorClass).Handle);
				__args [1] = new JniArgumentValue ((targetFieldType == null) ? IntPtr.Zero : ((global::Java.Lang.Object) targetFieldType).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (reflectorClass);
				global::System.GC.KeepAlive (targetFieldType);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/constructor[@name='ReflectorField' and count(parameter)=3 and parameter[1][@type='net.optifine.reflect.ReflectorClass'] and parameter[2][@type='java.lang.Class'] and parameter[3][@type='int']]"
		[Register (".ctor", "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V", "")]
		public unsafe ReflectorField (global::Net.Optifine.Reflect.ReflectorClass? reflectorClass, global::Java.Lang.Class? targetFieldType, int targetFieldIndex) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((reflectorClass == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reflectorClass).Handle);
				__args [1] = new JniArgumentValue ((targetFieldType == null) ? IntPtr.Zero : ((global::Java.Lang.Object) targetFieldType).Handle);
				__args [2] = new JniArgumentValue (targetFieldIndex);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (reflectorClass);
				global::System.GC.KeepAlive (targetFieldType);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/constructor[@name='ReflectorField' and count(parameter)=2 and parameter[1][@type='net.optifine.reflect.ReflectorClass'] and parameter[2][@type='java.lang.String']]"
		[Register (".ctor", "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V", "")]
		public unsafe ReflectorField (global::Net.Optifine.Reflect.ReflectorClass? reflectorClass, string? targetFieldName) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_targetFieldName = JNIEnv.NewString ((string?)targetFieldName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((reflectorClass == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reflectorClass).Handle);
				__args [1] = new JniArgumentValue (native_targetFieldName);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_targetFieldName);
				global::System.GC.KeepAlive (reflectorClass);
			}
		}

		static Delegate? cb_getTargetField;
#pragma warning disable 0169
		static Delegate GetGetTargetFieldHandler ()
		{
			if (cb_getTargetField == null)
				cb_getTargetField = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetTargetField));
			return cb_getTargetField;
		}

		static IntPtr n_GetTargetField (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.TargetField);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Reflect.Field? TargetField {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='getTargetField' and count(parameter)=0]"
			[Register ("getTargetField", "()Ljava/lang/reflect/Field;", "GetGetTargetFieldHandler")]
			get {
				const string __id = "getTargetField.()Ljava/lang/reflect/Field;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Reflect.Field> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getValue;
#pragma warning disable 0169
		static Delegate GetGetValueHandler ()
		{
			if (cb_getValue == null)
				cb_getValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetValue));
			return cb_getValue;
		}

		static IntPtr n_GetValue (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Value);
		}
#pragma warning restore 0169

		static Delegate? cb_setValue_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetValue_Ljava_lang_Object_Handler ()
		{
			if (cb_setValue_Ljava_lang_Object_ == null)
				cb_setValue_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetValue_Ljava_lang_Object_));
			return cb_setValue_Ljava_lang_Object_;
		}

		static void n_SetValue_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var value = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_value, JniHandleOwnership.DoNotTransfer);
			__this.Value = value;
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Object? Value {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='getValue' and count(parameter)=0]"
			[Register ("getValue", "()Ljava/lang/Object;", "GetGetValueHandler")]
			get {
				const string __id = "getValue.()Ljava/lang/Object;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='setValue' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
			[Register ("setValue", "(Ljava/lang/Object;)V", "GetSetValue_Ljava_lang_Object_Handler")]
			set {
				const string __id = "setValue.(Ljava/lang/Object;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate? cb_exists;
#pragma warning disable 0169
		static Delegate GetExistsHandler ()
		{
			if (cb_exists == null)
				cb_exists = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_Exists));
			return cb_exists;
		}

		static bool n_Exists (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Exists ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='exists' and count(parameter)=0]"
		[Register ("exists", "()Z", "GetExistsHandler")]
		public virtual unsafe bool Exists ()
		{
			const string __id = "exists.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getValue_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetGetValue_Ljava_lang_Object_Handler ()
		{
			if (cb_getValue_Ljava_lang_Object_ == null)
				cb_getValue_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetValue_Ljava_lang_Object_));
			return cb_getValue_Ljava_lang_Object_;
		}

		static IntPtr n_GetValue_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetValue (obj));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='getValue' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
		[Register ("getValue", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetGetValue_Ljava_lang_Object_Handler")]
		public virtual unsafe global::Java.Lang.Object? GetValue (global::Java.Lang.Object? obj)
		{
			const string __id = "getValue.(Ljava/lang/Object;)Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (obj);
			}
		}

		static Delegate? cb_resolve;
#pragma warning disable 0169
		static Delegate GetResolveHandler ()
		{
			if (cb_resolve == null)
				cb_resolve = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resolve));
			return cb_resolve;
		}

		static void n_Resolve (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Resolve ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='resolve' and count(parameter)=0]"
		[Register ("resolve", "()V", "GetResolveHandler")]
		public virtual unsafe void Resolve ()
		{
			const string __id = "resolve.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_setStaticIntUnsafe_I;
#pragma warning disable 0169
		static Delegate GetSetStaticIntUnsafe_IHandler ()
		{
			if (cb_setStaticIntUnsafe_I == null)
				cb_setStaticIntUnsafe_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetStaticIntUnsafe_I));
			return cb_setStaticIntUnsafe_I;
		}

		static void n_SetStaticIntUnsafe_I (IntPtr jnienv, IntPtr native__this, int value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetStaticIntUnsafe (value);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='setStaticIntUnsafe' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setStaticIntUnsafe", "(I)V", "GetSetStaticIntUnsafe_IHandler")]
		public virtual unsafe void SetStaticIntUnsafe (int value)
		{
			const string __id = "setStaticIntUnsafe.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (value);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setValue_Ljava_lang_Object_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetValue_Ljava_lang_Object_Ljava_lang_Object_Handler ()
		{
			if (cb_setValue_Ljava_lang_Object_Ljava_lang_Object_ == null)
				cb_setValue_Ljava_lang_Object_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SetValue_Ljava_lang_Object_Ljava_lang_Object_));
			return cb_setValue_Ljava_lang_Object_Ljava_lang_Object_;
		}

		static void n_SetValue_Ljava_lang_Object_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj, IntPtr native_value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
			var value = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_value, JniHandleOwnership.DoNotTransfer);
			__this.SetValue (obj, value);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorField']/method[@name='setValue' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.Object']]"
		[Register ("setValue", "(Ljava/lang/Object;Ljava/lang/Object;)V", "GetSetValue_Ljava_lang_Object_Ljava_lang_Object_Handler")]
		public virtual unsafe void SetValue (global::Java.Lang.Object? obj, global::Java.Lang.Object? value)
		{
			const string __id = "setValue.(Ljava/lang/Object;Ljava/lang/Object;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				__args [1] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (obj);
				global::System.GC.KeepAlive (value);
			}
		}

	}
}

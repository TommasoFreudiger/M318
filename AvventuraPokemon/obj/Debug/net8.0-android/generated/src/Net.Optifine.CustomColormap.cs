//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']"
	[global::Android.Runtime.Register ("net/optifine/CustomColormap", DoNotGenerateAcw=true)]
	public partial class CustomColormap : global::Java.Lang.Object, global::Net.Optifine.CustomColors.IColorizer {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='basePath']"
		[Register ("basePath")]
		public string? BasePath {
			get {
				const string __id = "basePath.Ljava/lang/String;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "basePath.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='FORMAT_FIXED_STRING']"
		[Register ("FORMAT_FIXED_STRING")]
		public const string FormatFixedString = (string) "fixed";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='FORMAT_GRID_STRING']"
		[Register ("FORMAT_GRID_STRING")]
		public const string FormatGridString = (string) "grid";


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='FORMAT_STRINGS']"
		[Register ("FORMAT_STRINGS")]
		public static IList<string>? FormatStrings {
			get {
				const string __id = "FORMAT_STRINGS.[Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Android.Runtime.JavaArray<string>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='FORMAT_VANILLA_STRING']"
		[Register ("FORMAT_VANILLA_STRING")]
		public const string FormatVanillaString = (string) "vanilla";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='KEY_BLOCKS']"
		[Register ("KEY_BLOCKS")]
		public const string KeyBlocks = (string) "blocks";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='KEY_COLOR']"
		[Register ("KEY_COLOR")]
		public const string KeyColor = (string) "color";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='KEY_FORMAT']"
		[Register ("KEY_FORMAT")]
		public const string KeyFormat = (string) "format";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='KEY_SOURCE']"
		[Register ("KEY_SOURCE")]
		public const string KeySource = (string) "source";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='KEY_Y_OFFSET']"
		[Register ("KEY_Y_OFFSET")]
		public const string KeyYOffset = (string) "yOffset";

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='KEY_Y_VARIANCE']"
		[Register ("KEY_Y_VARIANCE")]
		public const string KeyYVariance = (string) "yVariance";


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/field[@name='name']"
		[Register ("name")]
		public string? Name {
			get {
				const string __id = "name.Ljava/lang/String;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "name.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/CustomColormap", typeof (CustomColormap));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CustomColormap (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/constructor[@name='CustomColormap' and count(parameter)=5 and parameter[1][@type='java.util.Properties'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/util/Properties;Ljava/lang/String;IILjava/lang/String;)V", "")]
		public unsafe CustomColormap (global::Java.Util.Properties? props, string? path, int width, int height, string? formatDefault) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/util/Properties;Ljava/lang/String;IILjava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_path = JNIEnv.NewString ((string?)path);
			IntPtr native_formatDefault = JNIEnv.NewString ((string?)formatDefault);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue ((props == null) ? IntPtr.Zero : ((global::Java.Lang.Object) props).Handle);
				__args [1] = new JniArgumentValue (native_path);
				__args [2] = new JniArgumentValue (width);
				__args [3] = new JniArgumentValue (height);
				__args [4] = new JniArgumentValue (native_formatDefault);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
				JNIEnv.DeleteLocalRef (native_formatDefault);
				global::System.GC.KeepAlive (props);
			}
		}

		static Delegate? cb_getColorRandom;
#pragma warning disable 0169
		static Delegate GetGetColorRandomHandler ()
		{
			if (cb_getColorRandom == null)
				cb_getColorRandom = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetColorRandom));
			return cb_getColorRandom;
		}

		static int n_GetColorRandom (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ColorRandom;
		}
#pragma warning restore 0169

		public virtual unsafe int ColorRandom {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getColorRandom' and count(parameter)=0]"
			[Register ("getColorRandom", "()I", "GetGetColorRandomHandler")]
			get {
				const string __id = "getColorRandom.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getHeight;
#pragma warning disable 0169
		static Delegate GetGetHeightHandler ()
		{
			if (cb_getHeight == null)
				cb_getHeight = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetHeight));
			return cb_getHeight;
		}

		static int n_GetHeight (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Height;
		}
#pragma warning restore 0169

		public virtual unsafe int Height {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getHeight' and count(parameter)=0]"
			[Register ("getHeight", "()I", "GetGetHeightHandler")]
			get {
				const string __id = "getHeight.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isColorConstant;
#pragma warning disable 0169
		static Delegate GetIsColorConstantHandler ()
		{
			if (cb_isColorConstant == null)
				cb_isColorConstant = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsColorConstant));
			return cb_isColorConstant;
		}

		static bool n_IsColorConstant (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsColorConstant;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsColorConstant {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='isColorConstant' and count(parameter)=0]"
			[Register ("isColorConstant", "()Z", "GetIsColorConstantHandler")]
			get {
				const string __id = "isColorConstant.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getLength;
#pragma warning disable 0169
		static Delegate GetGetLengthHandler ()
		{
			if (cb_getLength == null)
				cb_getLength = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetLength));
			return cb_getLength;
		}

		static int n_GetLength (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Length;
		}
#pragma warning restore 0169

		public virtual unsafe int Length {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getLength' and count(parameter)=0]"
			[Register ("getLength", "()I", "GetGetLengthHandler")]
			get {
				const string __id = "getLength.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getWidth;
#pragma warning disable 0169
		static Delegate GetGetWidthHandler ()
		{
			if (cb_getWidth == null)
				cb_getWidth = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetWidth));
			return cb_getWidth;
		}

		static int n_GetWidth (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Width;
		}
#pragma warning restore 0169

		public virtual unsafe int Width {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getWidth' and count(parameter)=0]"
			[Register ("getWidth", "()I", "GetGetWidthHandler")]
			get {
				const string __id = "getWidth.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_addMatchBlock_II;
#pragma warning disable 0169
		static Delegate GetAddMatchBlock_IIHandler ()
		{
			if (cb_addMatchBlock_II == null)
				cb_addMatchBlock_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_V (n_AddMatchBlock_II));
			return cb_addMatchBlock_II;
		}

		static void n_AddMatchBlock_II (IntPtr jnienv, IntPtr native__this, int blockId, int metadata)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddMatchBlock (blockId, metadata);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='addMatchBlock' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("addMatchBlock", "(II)V", "GetAddMatchBlock_IIHandler")]
		public virtual unsafe void AddMatchBlock (int blockId, int metadata)
		{
			const string __id = "addMatchBlock.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (blockId);
				__args [1] = new JniArgumentValue (metadata);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addMatchBlock_Lnet_optifine_config_MatchBlock_;
#pragma warning disable 0169
		static Delegate GetAddMatchBlock_Lnet_optifine_config_MatchBlock_Handler ()
		{
			if (cb_addMatchBlock_Lnet_optifine_config_MatchBlock_ == null)
				cb_addMatchBlock_Lnet_optifine_config_MatchBlock_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddMatchBlock_Lnet_optifine_config_MatchBlock_));
			return cb_addMatchBlock_Lnet_optifine_config_MatchBlock_;
		}

		static void n_AddMatchBlock_Lnet_optifine_config_MatchBlock_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mb)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mb = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.MatchBlock> (native_mb, JniHandleOwnership.DoNotTransfer);
			__this.AddMatchBlock (mb);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='addMatchBlock' and count(parameter)=1 and parameter[1][@type='net.optifine.config.MatchBlock']]"
		[Register ("addMatchBlock", "(Lnet/optifine/config/MatchBlock;)V", "GetAddMatchBlock_Lnet_optifine_config_MatchBlock_Handler")]
		public virtual unsafe void AddMatchBlock (global::Net.Optifine.Config.MatchBlock? mb)
		{
			const string __id = "addMatchBlock.(Lnet/optifine/config/MatchBlock;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((mb == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mb).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (mb);
			}
		}

		static Delegate? cb_getColor_I;
#pragma warning disable 0169
		static Delegate GetGetColor_IHandler ()
		{
			if (cb_getColor_I == null)
				cb_getColor_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_I (n_GetColor_I));
			return cb_getColor_I;
		}

		static int n_GetColor_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.GetColor (index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getColor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getColor", "(I)I", "GetGetColor_IHandler")]
		public virtual unsafe int GetColor (int index)
		{
			const string __id = "getColor.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getColor_II;
#pragma warning disable 0169
		static Delegate GetGetColor_IIHandler ()
		{
			if (cb_getColor_II == null)
				cb_getColor_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_I (n_GetColor_II));
			return cb_getColor_II;
		}

		static int n_GetColor_II (IntPtr jnienv, IntPtr native__this, int cx, int cy)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.GetColor (cx, cy);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getColor' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("getColor", "(II)I", "GetGetColor_IIHandler")]
		public virtual unsafe int GetColor (int cx, int cy)
		{
			const string __id = "getColor.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (cx);
				__args [1] = new JniArgumentValue (cy);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getColorsRgb;
#pragma warning disable 0169
		static Delegate GetGetColorsRgbHandler ()
		{
			if (cb_getColorsRgb == null)
				cb_getColorsRgb = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetColorsRgb));
			return cb_getColorsRgb;
		}

		static IntPtr n_GetColorsRgb (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetColorsRgb ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getColorsRgb' and count(parameter)=0]"
		[Register ("getColorsRgb", "()[[F", "GetGetColorsRgbHandler")]
		public virtual unsafe float[][]? GetColorsRgb ()
		{
			const string __id = "getColorsRgb.()[[F";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (float[][]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (float[]));
			} finally {
			}
		}

		static Delegate? cb_getMatchBlockIds;
#pragma warning disable 0169
		static Delegate GetGetMatchBlockIdsHandler ()
		{
			if (cb_getMatchBlockIds == null)
				cb_getMatchBlockIds = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMatchBlockIds));
			return cb_getMatchBlockIds;
		}

		static IntPtr n_GetMatchBlockIds (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetMatchBlockIds ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='getMatchBlockIds' and count(parameter)=0]"
		[Register ("getMatchBlockIds", "()[I", "GetGetMatchBlockIdsHandler")]
		public virtual unsafe int[]? GetMatchBlockIds ()
		{
			const string __id = "getMatchBlockIds.()[I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
			}
		}

		static Delegate? cb_isValid_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetIsValid_Ljava_lang_String_Handler ()
		{
			if (cb_isValid_Ljava_lang_String_ == null)
				cb_isValid_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsValid_Ljava_lang_String_));
			return cb_isValid_Ljava_lang_String_;
		}

		static bool n_IsValid_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_path)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var path = JNIEnv.GetString (native_path, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsValid (path);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='isValid' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isValid", "(Ljava/lang/String;)Z", "GetIsValid_Ljava_lang_String_Handler")]
		public virtual unsafe bool IsValid (string? path)
		{
			const string __id = "isValid.(Ljava/lang/String;)Z";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_path);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		static Delegate? cb_isValidMatchBlocks_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetIsValidMatchBlocks_Ljava_lang_String_Handler ()
		{
			if (cb_isValidMatchBlocks_Ljava_lang_String_ == null)
				cb_isValidMatchBlocks_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsValidMatchBlocks_Ljava_lang_String_));
			return cb_isValidMatchBlocks_Ljava_lang_String_;
		}

		static bool n_IsValidMatchBlocks_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_path)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var path = JNIEnv.GetString (native_path, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsValidMatchBlocks (path);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColormap']/method[@name='isValidMatchBlocks' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isValidMatchBlocks", "(Ljava/lang/String;)Z", "GetIsValidMatchBlocks_Ljava_lang_String_Handler")]
		public virtual unsafe bool IsValidMatchBlocks (string? path)
		{
			const string __id = "isValidMatchBlocks.(Ljava/lang/String;)Z";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_path);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

	}
}

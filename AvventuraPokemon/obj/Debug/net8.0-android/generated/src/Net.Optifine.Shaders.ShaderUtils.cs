//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShaderUtils']"
	[global::Android.Runtime.Register ("net/optifine/shaders/ShaderUtils", DoNotGenerateAcw=true)]
	public partial class ShaderUtils : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/ShaderUtils", typeof (ShaderUtils));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ShaderUtils (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShaderUtils']/constructor[@name='ShaderUtils' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ShaderUtils () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShaderUtils']/method[@name='detectProfile' and count(parameter)=3 and parameter[1][@type='net.optifine.shaders.config.ShaderProfile[]'] and parameter[2][@type='net.optifine.shaders.config.ShaderOption[]'] and parameter[3][@type='boolean']]"
		[Register ("detectProfile", "([Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Lnet/optifine/shaders/config/ShaderProfile;", "")]
		public static unsafe global::Net.Optifine.Shaders.Config.ShaderProfile? DetectProfile (global::Net.Optifine.Shaders.Config.ShaderProfile[]? profs, global::Net.Optifine.Shaders.Config.ShaderOption[]? opts, bool def)
		{
			const string __id = "detectProfile.([Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Lnet/optifine/shaders/config/ShaderProfile;";
			IntPtr native_profs = JNIEnv.NewArray (profs);
			IntPtr native_opts = JNIEnv.NewArray (opts);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_profs);
				__args [1] = new JniArgumentValue (native_opts);
				__args [2] = new JniArgumentValue (def);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderProfile> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (profs != null) {
					JNIEnv.CopyArray (native_profs, profs);
					JNIEnv.DeleteLocalRef (native_profs);
				}
				if (opts != null) {
					JNIEnv.CopyArray (native_opts, opts);
					JNIEnv.DeleteLocalRef (native_opts);
				}
				global::System.GC.KeepAlive (profs);
				global::System.GC.KeepAlive (opts);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShaderUtils']/method[@name='getShaderOption' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='net.optifine.shaders.config.ShaderOption[]']]"
		[Register ("getShaderOption", "(Ljava/lang/String;[Lnet/optifine/shaders/config/ShaderOption;)Lnet/optifine/shaders/config/ShaderOption;", "")]
		public static unsafe global::Net.Optifine.Shaders.Config.ShaderOption? GetShaderOption (string? name, global::Net.Optifine.Shaders.Config.ShaderOption[]? opts)
		{
			const string __id = "getShaderOption.(Ljava/lang/String;[Lnet/optifine/shaders/config/ShaderOption;)Lnet/optifine/shaders/config/ShaderOption;";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			IntPtr native_opts = JNIEnv.NewArray (opts);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (native_opts);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.ShaderOption> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				if (opts != null) {
					JNIEnv.CopyArray (native_opts, opts);
					JNIEnv.DeleteLocalRef (native_opts);
				}
				global::System.GC.KeepAlive (opts);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='ShaderUtils']/method[@name='matchProfile' and count(parameter)=3 and parameter[1][@type='net.optifine.shaders.config.ShaderProfile'] and parameter[2][@type='net.optifine.shaders.config.ShaderOption[]'] and parameter[3][@type='boolean']]"
		[Register ("matchProfile", "(Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Z", "")]
		public static unsafe bool MatchProfile (global::Net.Optifine.Shaders.Config.ShaderProfile? prof, global::Net.Optifine.Shaders.Config.ShaderOption[]? opts, bool def)
		{
			const string __id = "matchProfile.(Lnet/optifine/shaders/config/ShaderProfile;[Lnet/optifine/shaders/config/ShaderOption;Z)Z";
			IntPtr native_opts = JNIEnv.NewArray (opts);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((prof == null) ? IntPtr.Zero : ((global::Java.Lang.Object) prof).Handle);
				__args [1] = new JniArgumentValue (native_opts);
				__args [2] = new JniArgumentValue (def);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				if (opts != null) {
					JNIEnv.CopyArray (native_opts, opts);
					JNIEnv.DeleteLocalRef (native_opts);
				}
				global::System.GC.KeepAlive (prof);
				global::System.GC.KeepAlive (opts);
			}
		}

	}
}

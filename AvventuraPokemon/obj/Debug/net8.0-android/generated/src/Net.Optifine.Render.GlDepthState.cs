//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Render {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']"
	[global::Android.Runtime.Register ("net/optifine/render/GlDepthState", DoNotGenerateAcw=true)]
	public partial class GlDepthState : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/render/GlDepthState", typeof (GlDepthState));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected GlDepthState (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/constructor[@name='GlDepthState' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe GlDepthState () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/constructor[@name='GlDepthState' and count(parameter)=3 and parameter[1][@type='boolean'] and parameter[2][@type='boolean'] and parameter[3][@type='int']]"
		[Register (".ctor", "(ZZI)V", "")]
		public unsafe GlDepthState (bool enabled, bool mask, int func) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(ZZI)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (enabled);
				__args [1] = new JniArgumentValue (mask);
				__args [2] = new JniArgumentValue (func);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_isEnabled;
#pragma warning disable 0169
		static Delegate GetIsEnabledHandler ()
		{
			if (cb_isEnabled == null)
				cb_isEnabled = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsEnabled));
			return cb_isEnabled;
		}

		static bool n_IsEnabled (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.GlDepthState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Enabled;
		}
#pragma warning restore 0169

		static Delegate? cb_setEnabled_Z;
#pragma warning disable 0169
		static Delegate GetSetEnabled_ZHandler ()
		{
			if (cb_setEnabled_Z == null)
				cb_setEnabled_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetEnabled_Z));
			return cb_setEnabled_Z;
		}

		static void n_SetEnabled_Z (IntPtr jnienv, IntPtr native__this, bool enabled)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.GlDepthState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Enabled = enabled;
		}
#pragma warning restore 0169

		public virtual unsafe bool Enabled {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/method[@name='isEnabled' and count(parameter)=0]"
			[Register ("isEnabled", "()Z", "GetIsEnabledHandler")]
			get {
				const string __id = "isEnabled.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/method[@name='setEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
			set {
				const string __id = "setEnabled.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getFunc;
#pragma warning disable 0169
		static Delegate GetGetFuncHandler ()
		{
			if (cb_getFunc == null)
				cb_getFunc = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetFunc));
			return cb_getFunc;
		}

		static int n_GetFunc (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.GlDepthState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Func;
		}
#pragma warning restore 0169

		static Delegate? cb_setFunc_I;
#pragma warning disable 0169
		static Delegate GetSetFunc_IHandler ()
		{
			if (cb_setFunc_I == null)
				cb_setFunc_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetFunc_I));
			return cb_setFunc_I;
		}

		static void n_SetFunc_I (IntPtr jnienv, IntPtr native__this, int func)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.GlDepthState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Func = func;
		}
#pragma warning restore 0169

		public virtual unsafe int Func {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/method[@name='getFunc' and count(parameter)=0]"
			[Register ("getFunc", "()I", "GetGetFuncHandler")]
			get {
				const string __id = "getFunc.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/method[@name='setFunc' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setFunc", "(I)V", "GetSetFunc_IHandler")]
			set {
				const string __id = "setFunc.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_isMask;
#pragma warning disable 0169
		static Delegate GetIsMaskHandler ()
		{
			if (cb_isMask == null)
				cb_isMask = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsMask));
			return cb_isMask;
		}

		static bool n_IsMask (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.GlDepthState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Mask;
		}
#pragma warning restore 0169

		static Delegate? cb_setMask_Z;
#pragma warning disable 0169
		static Delegate GetSetMask_ZHandler ()
		{
			if (cb_setMask_Z == null)
				cb_setMask_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetMask_Z));
			return cb_setMask_Z;
		}

		static void n_SetMask_Z (IntPtr jnienv, IntPtr native__this, bool mask)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.GlDepthState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Mask = mask;
		}
#pragma warning restore 0169

		public virtual unsafe bool Mask {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/method[@name='isMask' and count(parameter)=0]"
			[Register ("isMask", "()Z", "GetIsMaskHandler")]
			get {
				const string __id = "isMask.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/method[@name='setMask' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setMask", "(Z)V", "GetSetMask_ZHandler")]
			set {
				const string __id = "setMask.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_setState_ZZI;
#pragma warning disable 0169
		static Delegate GetSetState_ZZIHandler ()
		{
			if (cb_setState_ZZI == null)
				cb_setState_ZZI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZZI_V (n_SetState_ZZI));
			return cb_setState_ZZI;
		}

		static void n_SetState_ZZI (IntPtr jnienv, IntPtr native__this, bool enabled, bool mask, int func)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.GlDepthState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetState (enabled, mask, func);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='GlDepthState']/method[@name='setState' and count(parameter)=3 and parameter[1][@type='boolean'] and parameter[2][@type='boolean'] and parameter[3][@type='int']]"
		[Register ("setState", "(ZZI)V", "GetSetState_ZZIHandler")]
		public virtual unsafe void SetState (bool enabled, bool mask, int func)
		{
			const string __id = "setState.(ZZI)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (enabled);
				__args [1] = new JniArgumentValue (mask);
				__args [2] = new JniArgumentValue (func);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

	}
}

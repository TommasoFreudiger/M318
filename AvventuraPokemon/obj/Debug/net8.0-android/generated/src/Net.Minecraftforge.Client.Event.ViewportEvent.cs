//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Minecraftforge.Client.Event {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent']"
	[global::Android.Runtime.Register ("net/minecraftforge/client/event/ViewportEvent", DoNotGenerateAcw=true)]
	public abstract partial class ViewportEvent : global::Net.Minecraftforge.Eventbus.Api.Event {
		// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeCameraAngles']"
		[global::Android.Runtime.Register ("net/minecraftforge/client/event/ViewportEvent$ComputeCameraAngles", DoNotGenerateAcw=true)]
		public partial class ComputeCameraAngles : global::Net.Minecraftforge.Client.Event.ViewportEvent {
			static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/client/event/ViewportEvent$ComputeCameraAngles", typeof (ComputeCameraAngles));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected ComputeCameraAngles (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getPitch;
#pragma warning disable 0169
			static Delegate GetGetPitchHandler ()
			{
				if (cb_getPitch == null)
					cb_getPitch = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetPitch));
				return cb_getPitch;
			}

			static float n_GetPitch (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeCameraAngles> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.Pitch;
			}
#pragma warning restore 0169

			static Delegate? cb_setPitch_F;
#pragma warning disable 0169
			static Delegate GetSetPitch_FHandler ()
			{
				if (cb_setPitch_F == null)
					cb_setPitch_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetPitch_F));
				return cb_setPitch_F;
			}

			static void n_SetPitch_F (IntPtr jnienv, IntPtr native__this, float pitch)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeCameraAngles> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Pitch = pitch;
			}
#pragma warning restore 0169

			public virtual unsafe float Pitch {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeCameraAngles']/method[@name='getPitch' and count(parameter)=0]"
				[Register ("getPitch", "()F", "GetGetPitchHandler")]
				get {
					const string __id = "getPitch.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeCameraAngles']/method[@name='setPitch' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setPitch", "(F)V", "GetSetPitch_FHandler")]
				set {
					const string __id = "setPitch.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_getRoll;
#pragma warning disable 0169
			static Delegate GetGetRollHandler ()
			{
				if (cb_getRoll == null)
					cb_getRoll = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetRoll));
				return cb_getRoll;
			}

			static float n_GetRoll (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeCameraAngles> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.Roll;
			}
#pragma warning restore 0169

			static Delegate? cb_setRoll_F;
#pragma warning disable 0169
			static Delegate GetSetRoll_FHandler ()
			{
				if (cb_setRoll_F == null)
					cb_setRoll_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetRoll_F));
				return cb_setRoll_F;
			}

			static void n_SetRoll_F (IntPtr jnienv, IntPtr native__this, float roll)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeCameraAngles> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Roll = roll;
			}
#pragma warning restore 0169

			public virtual unsafe float Roll {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeCameraAngles']/method[@name='getRoll' and count(parameter)=0]"
				[Register ("getRoll", "()F", "GetGetRollHandler")]
				get {
					const string __id = "getRoll.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeCameraAngles']/method[@name='setRoll' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setRoll", "(F)V", "GetSetRoll_FHandler")]
				set {
					const string __id = "setRoll.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_getYaw;
#pragma warning disable 0169
			static Delegate GetGetYawHandler ()
			{
				if (cb_getYaw == null)
					cb_getYaw = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetYaw));
				return cb_getYaw;
			}

			static float n_GetYaw (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeCameraAngles> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.Yaw;
			}
#pragma warning restore 0169

			static Delegate? cb_setYaw_F;
#pragma warning disable 0169
			static Delegate GetSetYaw_FHandler ()
			{
				if (cb_setYaw_F == null)
					cb_setYaw_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetYaw_F));
				return cb_setYaw_F;
			}

			static void n_SetYaw_F (IntPtr jnienv, IntPtr native__this, float yaw)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeCameraAngles> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Yaw = yaw;
			}
#pragma warning restore 0169

			public virtual unsafe float Yaw {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeCameraAngles']/method[@name='getYaw' and count(parameter)=0]"
				[Register ("getYaw", "()F", "GetGetYawHandler")]
				get {
					const string __id = "getYaw.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeCameraAngles']/method[@name='setYaw' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setYaw", "(F)V", "GetSetYaw_FHandler")]
				set {
					const string __id = "setYaw.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFogColor']"
		[global::Android.Runtime.Register ("net/minecraftforge/client/event/ViewportEvent$ComputeFogColor", DoNotGenerateAcw=true)]
		public partial class ComputeFogColor : global::Net.Minecraftforge.Client.Event.ViewportEvent {
			static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/client/event/ViewportEvent$ComputeFogColor", typeof (ComputeFogColor));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected ComputeFogColor (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getBlue;
#pragma warning disable 0169
			static Delegate GetGetBlueHandler ()
			{
				if (cb_getBlue == null)
					cb_getBlue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetBlue));
				return cb_getBlue;
			}

			static float n_GetBlue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFogColor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.Blue;
			}
#pragma warning restore 0169

			static Delegate? cb_setBlue_F;
#pragma warning disable 0169
			static Delegate GetSetBlue_FHandler ()
			{
				if (cb_setBlue_F == null)
					cb_setBlue_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetBlue_F));
				return cb_setBlue_F;
			}

			static void n_SetBlue_F (IntPtr jnienv, IntPtr native__this, float blue)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFogColor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Blue = blue;
			}
#pragma warning restore 0169

			public virtual unsafe float Blue {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFogColor']/method[@name='getBlue' and count(parameter)=0]"
				[Register ("getBlue", "()F", "GetGetBlueHandler")]
				get {
					const string __id = "getBlue.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFogColor']/method[@name='setBlue' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setBlue", "(F)V", "GetSetBlue_FHandler")]
				set {
					const string __id = "setBlue.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_getGreen;
#pragma warning disable 0169
			static Delegate GetGetGreenHandler ()
			{
				if (cb_getGreen == null)
					cb_getGreen = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetGreen));
				return cb_getGreen;
			}

			static float n_GetGreen (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFogColor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.Green;
			}
#pragma warning restore 0169

			static Delegate? cb_setGreen_F;
#pragma warning disable 0169
			static Delegate GetSetGreen_FHandler ()
			{
				if (cb_setGreen_F == null)
					cb_setGreen_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetGreen_F));
				return cb_setGreen_F;
			}

			static void n_SetGreen_F (IntPtr jnienv, IntPtr native__this, float green)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFogColor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Green = green;
			}
#pragma warning restore 0169

			public virtual unsafe float Green {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFogColor']/method[@name='getGreen' and count(parameter)=0]"
				[Register ("getGreen", "()F", "GetGetGreenHandler")]
				get {
					const string __id = "getGreen.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFogColor']/method[@name='setGreen' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setGreen", "(F)V", "GetSetGreen_FHandler")]
				set {
					const string __id = "setGreen.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_getRed;
#pragma warning disable 0169
			static Delegate GetGetRedHandler ()
			{
				if (cb_getRed == null)
					cb_getRed = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetRed));
				return cb_getRed;
			}

			static float n_GetRed (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFogColor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.Red;
			}
#pragma warning restore 0169

			static Delegate? cb_setRed_F;
#pragma warning disable 0169
			static Delegate GetSetRed_FHandler ()
			{
				if (cb_setRed_F == null)
					cb_setRed_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetRed_F));
				return cb_setRed_F;
			}

			static void n_SetRed_F (IntPtr jnienv, IntPtr native__this, float red)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFogColor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Red = red;
			}
#pragma warning restore 0169

			public virtual unsafe float Red {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFogColor']/method[@name='getRed' and count(parameter)=0]"
				[Register ("getRed", "()F", "GetGetRedHandler")]
				get {
					const string __id = "getRed.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFogColor']/method[@name='setRed' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setRed", "(F)V", "GetSetRed_FHandler")]
				set {
					const string __id = "setRed.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFov']"
		[global::Android.Runtime.Register ("net/minecraftforge/client/event/ViewportEvent$ComputeFov", DoNotGenerateAcw=true)]
		public partial class ComputeFov : global::Net.Minecraftforge.Client.Event.ViewportEvent {
			static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/client/event/ViewportEvent$ComputeFov", typeof (ComputeFov));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected ComputeFov (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getFOV;
#pragma warning disable 0169
			static Delegate GetGetFOVHandler ()
			{
				if (cb_getFOV == null)
					cb_getFOV = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_D (n_GetFOV));
				return cb_getFOV;
			}

			static double n_GetFOV (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFov> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.FOV;
			}
#pragma warning restore 0169

			static Delegate? cb_setFOV_D;
#pragma warning disable 0169
			static Delegate GetSetFOV_DHandler ()
			{
				if (cb_setFOV_D == null)
					cb_setFOV_D = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPD_V (n_SetFOV_D));
				return cb_setFOV_D;
			}

			static void n_SetFOV_D (IntPtr jnienv, IntPtr native__this, double fov)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFov> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.FOV = fov;
			}
#pragma warning restore 0169

			public virtual unsafe double FOV {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFov']/method[@name='getFOV' and count(parameter)=0]"
				[Register ("getFOV", "()D", "GetGetFOVHandler")]
				get {
					const string __id = "getFOV.()D";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFov']/method[@name='setFOV' and count(parameter)=1 and parameter[1][@type='double']]"
				[Register ("setFOV", "(D)V", "GetSetFOV_DHandler")]
				set {
					const string __id = "setFOV.(D)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_usedConfiguredFov;
#pragma warning disable 0169
			static Delegate GetUsedConfiguredFovHandler ()
			{
				if (cb_usedConfiguredFov == null)
					cb_usedConfiguredFov = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_UsedConfiguredFov));
				return cb_usedConfiguredFov;
			}

			static bool n_UsedConfiguredFov (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.ComputeFov> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.UsedConfiguredFov ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.ComputeFov']/method[@name='usedConfiguredFov' and count(parameter)=0]"
			[Register ("usedConfiguredFov", "()Z", "GetUsedConfiguredFovHandler")]
			public virtual unsafe bool UsedConfiguredFov ()
			{
				const string __id = "usedConfiguredFov.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.RenderFog']"
		[global::Android.Runtime.Register ("net/minecraftforge/client/event/ViewportEvent$RenderFog", DoNotGenerateAcw=true)]
		public partial class RenderFog : global::Net.Minecraftforge.Client.Event.ViewportEvent {
			static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/client/event/ViewportEvent$RenderFog", typeof (RenderFog));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected RenderFog (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getFarPlaneDistance;
#pragma warning disable 0169
			static Delegate GetGetFarPlaneDistanceHandler ()
			{
				if (cb_getFarPlaneDistance == null)
					cb_getFarPlaneDistance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetFarPlaneDistance));
				return cb_getFarPlaneDistance;
			}

			static float n_GetFarPlaneDistance (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.RenderFog> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.FarPlaneDistance;
			}
#pragma warning restore 0169

			static Delegate? cb_setFarPlaneDistance_F;
#pragma warning disable 0169
			static Delegate GetSetFarPlaneDistance_FHandler ()
			{
				if (cb_setFarPlaneDistance_F == null)
					cb_setFarPlaneDistance_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetFarPlaneDistance_F));
				return cb_setFarPlaneDistance_F;
			}

			static void n_SetFarPlaneDistance_F (IntPtr jnienv, IntPtr native__this, float distance)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.RenderFog> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.FarPlaneDistance = distance;
			}
#pragma warning restore 0169

			public virtual unsafe float FarPlaneDistance {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.RenderFog']/method[@name='getFarPlaneDistance' and count(parameter)=0]"
				[Register ("getFarPlaneDistance", "()F", "GetGetFarPlaneDistanceHandler")]
				get {
					const string __id = "getFarPlaneDistance.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.RenderFog']/method[@name='setFarPlaneDistance' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setFarPlaneDistance", "(F)V", "GetSetFarPlaneDistance_FHandler")]
				set {
					const string __id = "setFarPlaneDistance.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_getNearPlaneDistance;
#pragma warning disable 0169
			static Delegate GetGetNearPlaneDistanceHandler ()
			{
				if (cb_getNearPlaneDistance == null)
					cb_getNearPlaneDistance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetNearPlaneDistance));
				return cb_getNearPlaneDistance;
			}

			static float n_GetNearPlaneDistance (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.RenderFog> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.NearPlaneDistance;
			}
#pragma warning restore 0169

			static Delegate? cb_setNearPlaneDistance_F;
#pragma warning disable 0169
			static Delegate GetSetNearPlaneDistance_FHandler ()
			{
				if (cb_setNearPlaneDistance_F == null)
					cb_setNearPlaneDistance_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetNearPlaneDistance_F));
				return cb_setNearPlaneDistance_F;
			}

			static void n_SetNearPlaneDistance_F (IntPtr jnienv, IntPtr native__this, float distance)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.RenderFog> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.NearPlaneDistance = distance;
			}
#pragma warning restore 0169

			public virtual unsafe float NearPlaneDistance {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.RenderFog']/method[@name='getNearPlaneDistance' and count(parameter)=0]"
				[Register ("getNearPlaneDistance", "()F", "GetGetNearPlaneDistanceHandler")]
				get {
					const string __id = "getNearPlaneDistance.()F";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.RenderFog']/method[@name='setNearPlaneDistance' and count(parameter)=1 and parameter[1][@type='float']]"
				[Register ("setNearPlaneDistance", "(F)V", "GetSetNearPlaneDistance_FHandler")]
				set {
					const string __id = "setNearPlaneDistance.(F)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_scaleFarPlaneDistance_F;
#pragma warning disable 0169
			static Delegate GetScaleFarPlaneDistance_FHandler ()
			{
				if (cb_scaleFarPlaneDistance_F == null)
					cb_scaleFarPlaneDistance_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_ScaleFarPlaneDistance_F));
				return cb_scaleFarPlaneDistance_F;
			}

			static void n_ScaleFarPlaneDistance_F (IntPtr jnienv, IntPtr native__this, float factor)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.RenderFog> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.ScaleFarPlaneDistance (factor);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.RenderFog']/method[@name='scaleFarPlaneDistance' and count(parameter)=1 and parameter[1][@type='float']]"
			[Register ("scaleFarPlaneDistance", "(F)V", "GetScaleFarPlaneDistance_FHandler")]
			public virtual unsafe void ScaleFarPlaneDistance (float factor)
			{
				const string __id = "scaleFarPlaneDistance.(F)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (factor);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

			static Delegate? cb_scaleNearPlaneDistance_F;
#pragma warning disable 0169
			static Delegate GetScaleNearPlaneDistance_FHandler ()
			{
				if (cb_scaleNearPlaneDistance_F == null)
					cb_scaleNearPlaneDistance_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_ScaleNearPlaneDistance_F));
				return cb_scaleNearPlaneDistance_F;
			}

			static void n_ScaleNearPlaneDistance_F (IntPtr jnienv, IntPtr native__this, float factor)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent.RenderFog> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.ScaleNearPlaneDistance (factor);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent.RenderFog']/method[@name='scaleNearPlaneDistance' and count(parameter)=1 and parameter[1][@type='float']]"
			[Register ("scaleNearPlaneDistance", "(F)V", "GetScaleNearPlaneDistance_FHandler")]
			public virtual unsafe void ScaleNearPlaneDistance (float factor)
			{
				const string __id = "scaleNearPlaneDistance.(F)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (factor);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/client/event/ViewportEvent", typeof (ViewportEvent));

		internal static new IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ViewportEvent (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		static Delegate? cb_getPartialTick;
#pragma warning disable 0169
		static Delegate GetGetPartialTickHandler ()
		{
			if (cb_getPartialTick == null)
				cb_getPartialTick = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_D (n_GetPartialTick));
			return cb_getPartialTick;
		}

		static double n_GetPartialTick (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Event.ViewportEvent> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.PartialTick;
		}
#pragma warning restore 0169

		public virtual unsafe double PartialTick {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.event']/class[@name='ViewportEvent']/method[@name='getPartialTick' and count(parameter)=0]"
			[Register ("getPartialTick", "()D", "GetGetPartialTickHandler")]
			get {
				const string __id = "getPartialTick.()D";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

	}

	[global::Android.Runtime.Register ("net/minecraftforge/client/event/ViewportEvent", DoNotGenerateAcw=true)]
	internal partial class ViewportEventInvoker : ViewportEvent {
		public ViewportEventInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/client/event/ViewportEvent", typeof (ViewportEventInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

	}
}

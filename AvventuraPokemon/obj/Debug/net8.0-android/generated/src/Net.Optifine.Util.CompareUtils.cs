//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Util {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']"
	[global::Android.Runtime.Register ("net/optifine/util/CompareUtils", DoNotGenerateAcw=true)]
	public partial class CompareUtils : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/util/CompareUtils", typeof (CompareUtils));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CompareUtils (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/constructor[@name='CompareUtils' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe CompareUtils () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("hash", "(Z)I", "")]
		public static unsafe int Hash (bool b)
		{
			const string __id = "hash.(Z)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (b);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=2 and parameter[1][@type='boolean'] and parameter[2][@type='boolean']]"
		[Register ("hash", "(ZZ)I", "")]
		public static unsafe int Hash (bool v1, bool v2)
		{
			const string __id = "hash.(ZZ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (v1);
				__args [1] = new JniArgumentValue (v2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("hash", "(F)I", "")]
		public static unsafe int Hash (float f)
		{
			const string __id = "hash.(F)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (f);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=2 and parameter[1][@type='float'] and parameter[2][@type='float']]"
		[Register ("hash", "(FF)I", "")]
		public static unsafe int Hash (float v1, float v2)
		{
			const string __id = "hash.(FF)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (v1);
				__args [1] = new JniArgumentValue (v2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("hash", "(I)I", "")]
		public static unsafe int Hash (int i)
		{
			const string __id = "hash.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (i);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='float']]"
		[Register ("hash", "(IF)I", "")]
		public static unsafe int Hash (int v1, float v2)
		{
			const string __id = "hash.(IF)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (v1);
				__args [1] = new JniArgumentValue (v2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.Object']]"
		[Register ("hash", "(ILjava/lang/Object;)I", "")]
		public static unsafe int Hash (int v1, global::Java.Lang.Object? v2)
		{
			const string __id = "hash.(ILjava/lang/Object;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (v1);
				__args [1] = new JniArgumentValue ((v2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) v2).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (v2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='java.lang.Object'] and parameter[3][@type='java.lang.Object'] and parameter[4][@type='java.lang.Object']]"
		[Register ("hash", "(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)I", "")]
		public static unsafe int Hash (int v1, global::Java.Lang.Object? v2, global::Java.Lang.Object? v3, global::Java.Lang.Object? v4)
		{
			const string __id = "hash.(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (v1);
				__args [1] = new JniArgumentValue ((v2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) v2).Handle);
				__args [2] = new JniArgumentValue ((v3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) v3).Handle);
				__args [3] = new JniArgumentValue ((v4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) v4).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (v2);
				global::System.GC.KeepAlive (v3);
				global::System.GC.KeepAlive (v4);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
		[Register ("hash", "(Ljava/lang/Object;)I", "")]
		public static unsafe int Hash (global::Java.Lang.Object? o)
		{
			const string __id = "hash.(Ljava/lang/Object;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((o == null) ? IntPtr.Zero : ((global::Java.Lang.Object) o).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (o);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='boolean']]"
		[Register ("hash", "(Ljava/lang/Object;Z)I", "")]
		public static unsafe int Hash (global::Java.Lang.Object? v1, bool v2)
		{
			const string __id = "hash.(Ljava/lang/Object;Z)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((v1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) v1).Handle);
				__args [1] = new JniArgumentValue (v2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (v1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='CompareUtils']/method[@name='hash' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.Object']]"
		[Register ("hash", "(Ljava/lang/Object;Ljava/lang/Object;)I", "")]
		public static unsafe int Hash (global::Java.Lang.Object? o1, global::Java.Lang.Object? o2)
		{
			const string __id = "hash.(Ljava/lang/Object;Ljava/lang/Object;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((o1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) o1).Handle);
				__args [1] = new JniArgumentValue ((o2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) o2).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (o1);
				global::System.GC.KeepAlive (o2);
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']"
	[global::Android.Runtime.Register ("net/optifine/Lagometer", DoNotGenerateAcw=true)]
	public partial class Lagometer : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='active']"
		[Register ("active")]
		public static bool Active {
			get {
				const string __id = "active.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "active.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='timerChunkUpdate']"
		[Register ("timerChunkUpdate")]
		public static global::Net.Optifine.Lagometer.TimerNano? TimerChunkUpdate {
			get {
				const string __id = "timerChunkUpdate.Lnet/optifine/Lagometer$TimerNano;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "timerChunkUpdate.Lnet/optifine/Lagometer$TimerNano;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='timerChunkUpload']"
		[Register ("timerChunkUpload")]
		public static global::Net.Optifine.Lagometer.TimerNano? TimerChunkUpload {
			get {
				const string __id = "timerChunkUpload.Lnet/optifine/Lagometer$TimerNano;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "timerChunkUpload.Lnet/optifine/Lagometer$TimerNano;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='timerScheduledExecutables']"
		[Register ("timerScheduledExecutables")]
		public static global::Net.Optifine.Lagometer.TimerNano? TimerScheduledExecutables {
			get {
				const string __id = "timerScheduledExecutables.Lnet/optifine/Lagometer$TimerNano;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "timerScheduledExecutables.Lnet/optifine/Lagometer$TimerNano;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='timerServer']"
		[Register ("timerServer")]
		public static global::Net.Optifine.Lagometer.TimerNano? TimerServer {
			get {
				const string __id = "timerServer.Lnet/optifine/Lagometer$TimerNano;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "timerServer.Lnet/optifine/Lagometer$TimerNano;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='timerTerrain']"
		[Register ("timerTerrain")]
		public static global::Net.Optifine.Lagometer.TimerNano? TimerTerrain {
			get {
				const string __id = "timerTerrain.Lnet/optifine/Lagometer$TimerNano;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "timerTerrain.Lnet/optifine/Lagometer$TimerNano;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='timerTick']"
		[Register ("timerTick")]
		public static global::Net.Optifine.Lagometer.TimerNano? TimerTick {
			get {
				const string __id = "timerTick.Lnet/optifine/Lagometer$TimerNano;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "timerTick.Lnet/optifine/Lagometer$TimerNano;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/field[@name='timerVisibility']"
		[Register ("timerVisibility")]
		public static global::Net.Optifine.Lagometer.TimerNano? TimerVisibility {
			get {
				const string __id = "timerVisibility.Lnet/optifine/Lagometer$TimerNano;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "timerVisibility.Lnet/optifine/Lagometer$TimerNano;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer.TimerNano']"
		[global::Android.Runtime.Register ("net/optifine/Lagometer$TimerNano", DoNotGenerateAcw=true)]
		public partial class TimerNano : global::Java.Lang.Object {

			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer.TimerNano']/field[@name='timeNano']"
			[Register ("timeNano")]
			public long TimeNano {
				get {
					const string __id = "timeNano.J";

					var __v = _members.InstanceFields.GetInt64Value (__id, this);
					return __v;
				}
				set {
					const string __id = "timeNano.J";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer.TimerNano']/field[@name='timeStartNano']"
			[Register ("timeStartNano")]
			public long TimeStartNano {
				get {
					const string __id = "timeStartNano.J";

					var __v = _members.InstanceFields.GetInt64Value (__id, this);
					return __v;
				}
				set {
					const string __id = "timeStartNano.J";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/Lagometer$TimerNano", typeof (TimerNano));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected TimerNano (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer.TimerNano']/constructor[@name='Lagometer.TimerNano' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe TimerNano () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_end;
#pragma warning disable 0169
			static Delegate GetEndHandler ()
			{
				if (cb_end == null)
					cb_end = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_End));
				return cb_end;
			}

			static void n_End (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.End ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer.TimerNano']/method[@name='end' and count(parameter)=0]"
			[Register ("end", "()V", "GetEndHandler")]
			public virtual unsafe void End ()
			{
				const string __id = "end.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_start;
#pragma warning disable 0169
			static Delegate GetStartHandler ()
			{
				if (cb_start == null)
					cb_start = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Start));
				return cb_start;
			}

			static void n_Start (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Lagometer.TimerNano> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Start ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer.TimerNano']/method[@name='start' and count(parameter)=0]"
			[Register ("start", "()V", "GetStartHandler")]
			public virtual unsafe void Start ()
			{
				const string __id = "start.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/Lagometer", typeof (Lagometer));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Lagometer (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/constructor[@name='Lagometer' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Lagometer () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe bool IsActive {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/method[@name='isActive' and count(parameter)=0]"
			[Register ("isActive", "()Z", "")]
			get {
				const string __id = "isActive.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='Lagometer']/method[@name='updateLagometer' and count(parameter)=0]"
		[Register ("updateLagometer", "()V", "")]
		public static unsafe void UpdateLagometer ()
		{
			const string __id = "updateLagometer.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Model {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.model']/class[@name='AttachmentPaths']"
	[global::Android.Runtime.Register ("net/optifine/model/AttachmentPaths", DoNotGenerateAcw=true)]
	public partial class AttachmentPaths : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/model/AttachmentPaths", typeof (AttachmentPaths));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected AttachmentPaths (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.model']/class[@name='AttachmentPaths']/constructor[@name='AttachmentPaths' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe AttachmentPaths () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_isEmpty;
#pragma warning disable 0169
		static Delegate GetIsEmptyHandler ()
		{
			if (cb_isEmpty == null)
				cb_isEmpty = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsEmpty));
			return cb_isEmpty;
		}

		static bool n_IsEmpty (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Model.AttachmentPaths> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsEmpty;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsEmpty {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.model']/class[@name='AttachmentPaths']/method[@name='isEmpty' and count(parameter)=0]"
			[Register ("isEmpty", "()Z", "GetIsEmptyHandler")]
			get {
				const string __id = "isEmpty.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_addPath_Lnet_optifine_model_AttachmentPath_;
#pragma warning disable 0169
		static Delegate GetAddPath_Lnet_optifine_model_AttachmentPath_Handler ()
		{
			if (cb_addPath_Lnet_optifine_model_AttachmentPath_ == null)
				cb_addPath_Lnet_optifine_model_AttachmentPath_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddPath_Lnet_optifine_model_AttachmentPath_));
			return cb_addPath_Lnet_optifine_model_AttachmentPath_;
		}

		static void n_AddPath_Lnet_optifine_model_AttachmentPath_ (IntPtr jnienv, IntPtr native__this, IntPtr native_ap)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Model.AttachmentPaths> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ap = global::Java.Lang.Object.GetObject<global::Net.Optifine.Model.AttachmentPath> (native_ap, JniHandleOwnership.DoNotTransfer);
			__this.AddPath (ap);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.model']/class[@name='AttachmentPaths']/method[@name='addPath' and count(parameter)=1 and parameter[1][@type='net.optifine.model.AttachmentPath']]"
		[Register ("addPath", "(Lnet/optifine/model/AttachmentPath;)V", "GetAddPath_Lnet_optifine_model_AttachmentPath_Handler")]
		public virtual unsafe void AddPath (global::Net.Optifine.Model.AttachmentPath? ap)
		{
			const string __id = "addPath.(Lnet/optifine/model/AttachmentPath;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((ap == null) ? IntPtr.Zero : ((global::Java.Lang.Object) ap).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (ap);
			}
		}

		static Delegate? cb_getVisiblePath_Lnet_optifine_model_AttachmentType_;
#pragma warning disable 0169
		static Delegate GetGetVisiblePath_Lnet_optifine_model_AttachmentType_Handler ()
		{
			if (cb_getVisiblePath_Lnet_optifine_model_AttachmentType_ == null)
				cb_getVisiblePath_Lnet_optifine_model_AttachmentType_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetVisiblePath_Lnet_optifine_model_AttachmentType_));
			return cb_getVisiblePath_Lnet_optifine_model_AttachmentType_;
		}

		static IntPtr n_GetVisiblePath_Lnet_optifine_model_AttachmentType_ (IntPtr jnienv, IntPtr native__this, IntPtr native_typeIn)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Model.AttachmentPaths> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var typeIn = global::Java.Lang.Object.GetObject<global::Net.Optifine.Model.AttachmentType> (native_typeIn, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetVisiblePath (typeIn));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.model']/class[@name='AttachmentPaths']/method[@name='getVisiblePath' and count(parameter)=1 and parameter[1][@type='net.optifine.model.AttachmentType']]"
		[Register ("getVisiblePath", "(Lnet/optifine/model/AttachmentType;)Lnet/optifine/model/AttachmentPath;", "GetGetVisiblePath_Lnet_optifine_model_AttachmentType_Handler")]
		public virtual unsafe global::Net.Optifine.Model.AttachmentPath? GetVisiblePath (global::Net.Optifine.Model.AttachmentType? typeIn)
		{
			const string __id = "getVisiblePath.(Lnet/optifine/model/AttachmentType;)Lnet/optifine/model/AttachmentPath;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((typeIn == null) ? IntPtr.Zero : ((global::Java.Lang.Object) typeIn).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Model.AttachmentPath> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (typeIn);
			}
		}

	}
}

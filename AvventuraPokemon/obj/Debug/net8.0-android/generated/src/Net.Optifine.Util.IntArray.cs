//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Util {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']"
	[global::Android.Runtime.Register ("net/optifine/util/IntArray", DoNotGenerateAcw=true)]
	public partial class IntArray : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/util/IntArray", typeof (IntArray));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected IntArray (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/constructor[@name='IntArray' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register (".ctor", "(I)V", "")]
		public unsafe IntArray (int size) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (size);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_getLimit;
#pragma warning disable 0169
		static Delegate GetGetLimitHandler ()
		{
			if (cb_getLimit == null)
				cb_getLimit = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetLimit));
			return cb_getLimit;
		}

		static int n_GetLimit (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Limit;
		}
#pragma warning restore 0169

		public virtual unsafe int Limit {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='getLimit' and count(parameter)=0]"
			[Register ("getLimit", "()I", "GetGetLimitHandler")]
			get {
				const string __id = "getLimit.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getPosition;
#pragma warning disable 0169
		static Delegate GetGetPositionHandler ()
		{
			if (cb_getPosition == null)
				cb_getPosition = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetPosition));
			return cb_getPosition;
		}

		static int n_GetPosition (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Position;
		}
#pragma warning restore 0169

		public virtual unsafe int Position {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='getPosition' and count(parameter)=0]"
			[Register ("getPosition", "()I", "GetGetPositionHandler")]
			get {
				const string __id = "getPosition.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_clear;
#pragma warning disable 0169
		static Delegate GetClearHandler ()
		{
			if (cb_clear == null)
				cb_clear = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Clear));
			return cb_clear;
		}

		static void n_Clear (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Clear ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='clear' and count(parameter)=0]"
		[Register ("clear", "()V", "GetClearHandler")]
		public virtual unsafe void Clear ()
		{
			const string __id = "clear.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_get_I;
#pragma warning disable 0169
		static Delegate GetGet_IHandler ()
		{
			if (cb_get_I == null)
				cb_get_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_I (n_Get_I));
			return cb_get_I;
		}

		static int n_Get_I (IntPtr jnienv, IntPtr native__this, int pos)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Get (pos);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='get' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("get", "(I)I", "GetGet_IHandler")]
		public virtual unsafe int Get (int pos)
		{
			const string __id = "get.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (pos);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getArray;
#pragma warning disable 0169
		static Delegate GetGetArrayHandler ()
		{
			if (cb_getArray == null)
				cb_getArray = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetArray));
			return cb_getArray;
		}

		static IntPtr n_GetArray (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetArray ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='getArray' and count(parameter)=0]"
		[Register ("getArray", "()[I", "GetGetArrayHandler")]
		public virtual unsafe int[]? GetArray ()
		{
			const string __id = "getArray.()[I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
			}
		}

		static Delegate? cb_position_I;
#pragma warning disable 0169
		static Delegate GetInvokePosition_IHandler ()
		{
			if (cb_position_I == null)
				cb_position_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_InvokePosition_I));
			return cb_position_I;
		}

		static void n_InvokePosition_I (IntPtr jnienv, IntPtr native__this, int pos)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InvokePosition (pos);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='position' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("position", "(I)V", "GetInvokePosition_IHandler")]
		public virtual unsafe void InvokePosition (int pos)
		{
			const string __id = "position.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (pos);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_put_I;
#pragma warning disable 0169
		static Delegate GetPut_IHandler ()
		{
			if (cb_put_I == null)
				cb_put_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_Put_I));
			return cb_put_I;
		}

		static void n_Put_I (IntPtr jnienv, IntPtr native__this, int x)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Put (x);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='put' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("put", "(I)V", "GetPut_IHandler")]
		public virtual unsafe void Put (int x)
		{
			const string __id = "put.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (x);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_put_II;
#pragma warning disable 0169
		static Delegate GetPut_IIHandler ()
		{
			if (cb_put_II == null)
				cb_put_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_V (n_Put_II));
			return cb_put_II;
		}

		static void n_Put_II (IntPtr jnienv, IntPtr native__this, int pos, int x)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Put (pos, x);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='put' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("put", "(II)V", "GetPut_IIHandler")]
		public virtual unsafe void Put (int pos, int x)
		{
			const string __id = "put.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (pos);
				__args [1] = new JniArgumentValue (x);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_put_arrayI;
#pragma warning disable 0169
		static Delegate GetPut_arrayIHandler ()
		{
			if (cb_put_arrayI == null)
				cb_put_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Put_arrayI));
			return cb_put_arrayI;
		}

		static void n_Put_arrayI (IntPtr jnienv, IntPtr native__this, IntPtr native_ints)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ints = (int[]?) JNIEnv.GetArray (native_ints, JniHandleOwnership.DoNotTransfer, typeof (int));
			__this.Put (ints);
			if (ints != null)
				JNIEnv.CopyArray (ints, native_ints);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='put' and count(parameter)=1 and parameter[1][@type='int[]']]"
		[Register ("put", "([I)V", "GetPut_arrayIHandler")]
		public virtual unsafe void Put (int[]? ints)
		{
			const string __id = "put.([I)V";
			IntPtr native_ints = JNIEnv.NewArray (ints);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ints);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (ints != null) {
					JNIEnv.CopyArray (native_ints, ints);
					JNIEnv.DeleteLocalRef (native_ints);
				}
				global::System.GC.KeepAlive (ints);
			}
		}

		static Delegate? cb_toIntArray;
#pragma warning disable 0169
		static Delegate GetToIntArrayHandler ()
		{
			if (cb_toIntArray == null)
				cb_toIntArray = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToIntArray));
			return cb_toIntArray;
		}

		static IntPtr n_ToIntArray (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToIntArray ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntArray']/method[@name='toIntArray' and count(parameter)=0]"
		[Register ("toIntArray", "()[I", "GetToIntArrayHandler")]
		public virtual unsafe int[]? ToIntArray ()
		{
			const string __id = "toIntArray.()[I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
			}
		}

	}
}

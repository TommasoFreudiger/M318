//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Optifine.Json {

	// Metadata.xml XPath class reference: path="/api/package[@name='optifine.json']/class[@name='JSONArray']"
	[global::Android.Runtime.Register ("optifine/json/JSONArray", DoNotGenerateAcw=true)]
	public partial class JSONArray : global::Java.Util.ArrayList, global::Java.Util.IList, global::Optifine.Json.IJSONAware, global::Optifine.Json.IJSONStreamAware {
		static readonly JniPeerMembers _members = new XAPeerMembers ("optifine/json/JSONArray", typeof (JSONArray));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected JSONArray (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='optifine.json']/class[@name='JSONArray']/constructor[@name='JSONArray' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe JSONArray () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_toJSONString;
#pragma warning disable 0169
		static Delegate GetToJSONStringHandler ()
		{
			if (cb_toJSONString == null)
				cb_toJSONString = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToJSONString));
			return cb_toJSONString;
		}

		static IntPtr n_ToJSONString (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.JSONArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.ToJSONString ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='JSONArray']/method[@name='toJSONString' and count(parameter)=0]"
		[Register ("toJSONString", "()Ljava/lang/String;", "GetToJSONStringHandler")]
		public virtual unsafe string? ToJSONString ()
		{
			const string __id = "toJSONString.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='JSONArray']/method[@name='toJSONString' and count(parameter)=1 and parameter[1][@type='java.util.List']]"
		[Register ("toJSONString", "(Ljava/util/List;)Ljava/lang/String;", "")]
		public static unsafe string? ToJSONString (global::System.Collections.IList? list)
		{
			const string __id = "toJSONString.(Ljava/util/List;)Ljava/lang/String;";
			IntPtr native_list = global::Android.Runtime.JavaList.ToLocalJniHandle (list);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_list);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_list);
				global::System.GC.KeepAlive (list);
			}
		}

		static Delegate? cb_writeJSONString_Ljava_io_Writer_;
#pragma warning disable 0169
		static Delegate GetWriteJSONString_Ljava_io_Writer_Handler ()
		{
			if (cb_writeJSONString_Ljava_io_Writer_ == null)
				cb_writeJSONString_Ljava_io_Writer_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_WriteJSONString_Ljava_io_Writer_));
			return cb_writeJSONString_Ljava_io_Writer_;
		}

		static void n_WriteJSONString_Ljava_io_Writer_ (IntPtr jnienv, IntPtr native__this, IntPtr native__out)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Json.JSONArray> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var @out = global::Java.Lang.Object.GetObject<global::Java.IO.Writer> (native__out, JniHandleOwnership.DoNotTransfer);
			__this.WriteJSONString (@out);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='JSONArray']/method[@name='writeJSONString' and count(parameter)=1 and parameter[1][@type='java.io.Writer']]"
		[Register ("writeJSONString", "(Ljava/io/Writer;)V", "GetWriteJSONString_Ljava_io_Writer_Handler")]
		public virtual unsafe void WriteJSONString (global::Java.IO.Writer? @out)
		{
			const string __id = "writeJSONString.(Ljava/io/Writer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@out == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @out).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (@out);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.json']/class[@name='JSONArray']/method[@name='writeJSONString' and count(parameter)=2 and parameter[1][@type='java.util.List'] and parameter[2][@type='java.io.Writer']]"
		[Register ("writeJSONString", "(Ljava/util/List;Ljava/io/Writer;)V", "")]
		public static unsafe void WriteJSONString (global::System.Collections.IList? list, global::Java.IO.Writer? @out)
		{
			const string __id = "writeJSONString.(Ljava/util/List;Ljava/io/Writer;)V";
			IntPtr native_list = global::Android.Runtime.JavaList.ToLocalJniHandle (list);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_list);
				__args [1] = new JniArgumentValue ((@out == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @out).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_list);
				global::System.GC.KeepAlive (list);
				global::System.GC.KeepAlive (@out);
			}
		}

	}
}

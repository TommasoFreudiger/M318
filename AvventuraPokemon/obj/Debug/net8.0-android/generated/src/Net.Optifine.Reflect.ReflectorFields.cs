//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Reflect {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']"
	[global::Android.Runtime.Register ("net/optifine/reflect/ReflectorFields", DoNotGenerateAcw=true)]
	public partial class ReflectorFields : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/reflect/ReflectorFields", typeof (ReflectorFields));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ReflectorFields (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/constructor[@name='ReflectorFields' and count(parameter)=3 and parameter[1][@type='net.optifine.reflect.ReflectorClass'] and parameter[2][@type='java.lang.Class'] and parameter[3][@type='int']]"
		[Register (".ctor", "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V", "")]
		public unsafe ReflectorFields (global::Net.Optifine.Reflect.ReflectorClass? reflectorClassIn, global::Java.Lang.Class? fieldTypeIn, int fieldCountIn) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/reflect/ReflectorClass;Ljava/lang/Class;I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((reflectorClassIn == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reflectorClassIn).Handle);
				__args [1] = new JniArgumentValue ((fieldTypeIn == null) ? IntPtr.Zero : ((global::Java.Lang.Object) fieldTypeIn).Handle);
				__args [2] = new JniArgumentValue (fieldCountIn);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (reflectorClassIn);
				global::System.GC.KeepAlive (fieldTypeIn);
			}
		}

		static Delegate? cb_getFieldCount;
#pragma warning disable 0169
		static Delegate GetGetFieldCountHandler ()
		{
			if (cb_getFieldCount == null)
				cb_getFieldCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetFieldCount));
			return cb_getFieldCount;
		}

		static int n_GetFieldCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.FieldCount;
		}
#pragma warning restore 0169

		public virtual unsafe int FieldCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='getFieldCount' and count(parameter)=0]"
			[Register ("getFieldCount", "()I", "GetGetFieldCountHandler")]
			get {
				const string __id = "getFieldCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getFieldType;
#pragma warning disable 0169
		static Delegate GetGetFieldTypeHandler ()
		{
			if (cb_getFieldType == null)
				cb_getFieldType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetFieldType));
			return cb_getFieldType;
		}

		static IntPtr n_GetFieldType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.FieldType);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Class? FieldType {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='getFieldType' and count(parameter)=0]"
			[Register ("getFieldType", "()Ljava/lang/Class;", "GetGetFieldTypeHandler")]
			get {
				const string __id = "getFieldType.()Ljava/lang/Class;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Class> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getReflectorClass;
#pragma warning disable 0169
		static Delegate GetGetReflectorClassHandler ()
		{
			if (cb_getReflectorClass == null)
				cb_getReflectorClass = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetReflectorClass));
			return cb_getReflectorClass;
		}

		static IntPtr n_GetReflectorClass (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.ReflectorClass);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Reflect.ReflectorClass? ReflectorClass {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='getReflectorClass' and count(parameter)=0]"
			[Register ("getReflectorClass", "()Lnet/optifine/reflect/ReflectorClass;", "GetGetReflectorClassHandler")]
			get {
				const string __id = "getReflectorClass.()Lnet/optifine/reflect/ReflectorClass;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorClass> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_exists;
#pragma warning disable 0169
		static Delegate GetExistsHandler ()
		{
			if (cb_exists == null)
				cb_exists = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_Exists));
			return cb_exists;
		}

		static bool n_Exists (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Exists ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='exists' and count(parameter)=0]"
		[Register ("exists", "()Z", "GetExistsHandler")]
		public virtual unsafe bool Exists ()
		{
			const string __id = "exists.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getFieldValues_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetGetFieldValues_Ljava_lang_Object_Handler ()
		{
			if (cb_getFieldValues_Ljava_lang_Object_ == null)
				cb_getFieldValues_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetFieldValues_Ljava_lang_Object_));
			return cb_getFieldValues_Ljava_lang_Object_;
		}

		static IntPtr n_GetFieldValues_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.GetFieldValues (obj));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='getFieldValues' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
		[Register ("getFieldValues", "(Ljava/lang/Object;)[Ljava/lang/Object;", "GetGetFieldValues_Ljava_lang_Object_Handler")]
		public virtual unsafe global::Java.Lang.Object[]? GetFieldValues (global::Java.Lang.Object? obj)
		{
			const string __id = "getFieldValues.(Ljava/lang/Object;)[Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Java.Lang.Object));
			} finally {
				global::System.GC.KeepAlive (obj);
			}
		}

		static Delegate? cb_getReflectorField_I;
#pragma warning disable 0169
		static Delegate GetGetReflectorField_IHandler ()
		{
			if (cb_getReflectorField_I == null)
				cb_getReflectorField_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_GetReflectorField_I));
			return cb_getReflectorField_I;
		}

		static IntPtr n_GetReflectorField_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.GetReflectorField (index));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='getReflectorField' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getReflectorField", "(I)Lnet/optifine/reflect/ReflectorField;", "GetGetReflectorField_IHandler")]
		public virtual unsafe global::Net.Optifine.Reflect.ReflectorField? GetReflectorField (int index)
		{
			const string __id = "getReflectorField.(I)Lnet/optifine/reflect/ReflectorField;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorField> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_getValue_Ljava_lang_Object_I;
#pragma warning disable 0169
		static Delegate GetGetValue_Ljava_lang_Object_IHandler ()
		{
			if (cb_getValue_Ljava_lang_Object_I == null)
				cb_getValue_Ljava_lang_Object_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_L (n_GetValue_Ljava_lang_Object_I));
			return cb_getValue_Ljava_lang_Object_I;
		}

		static IntPtr n_GetValue_Ljava_lang_Object_I (IntPtr jnienv, IntPtr native__this, IntPtr native_obj, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetValue (obj, index));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='getValue' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='int']]"
		[Register ("getValue", "(Ljava/lang/Object;I)Ljava/lang/Object;", "GetGetValue_Ljava_lang_Object_IHandler")]
		public virtual unsafe global::Java.Lang.Object? GetValue (global::Java.Lang.Object? obj, int index)
		{
			const string __id = "getValue.(Ljava/lang/Object;I)Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				__args [1] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (obj);
			}
		}

		static Delegate? cb_setValue_Ljava_lang_Object_ILjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetValue_Ljava_lang_Object_ILjava_lang_Object_Handler ()
		{
			if (cb_setValue_Ljava_lang_Object_ILjava_lang_Object_ == null)
				cb_setValue_Ljava_lang_Object_ILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIL_V (n_SetValue_Ljava_lang_Object_ILjava_lang_Object_));
			return cb_setValue_Ljava_lang_Object_ILjava_lang_Object_;
		}

		static void n_SetValue_Ljava_lang_Object_ILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj, int index, IntPtr native_val)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorFields> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
			var val = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_val, JniHandleOwnership.DoNotTransfer);
			__this.SetValue (obj, index, val);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorFields']/method[@name='setValue' and count(parameter)=3 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.Object']]"
		[Register ("setValue", "(Ljava/lang/Object;ILjava/lang/Object;)V", "GetSetValue_Ljava_lang_Object_ILjava_lang_Object_Handler")]
		public virtual unsafe void SetValue (global::Java.Lang.Object? obj, int index, global::Java.Lang.Object? val)
		{
			const string __id = "setValue.(Ljava/lang/Object;ILjava/lang/Object;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				__args [1] = new JniArgumentValue (index);
				__args [2] = new JniArgumentValue ((val == null) ? IntPtr.Zero : ((global::Java.Lang.Object) val).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (obj);
				global::System.GC.KeepAlive (val);
			}
		}

	}
}

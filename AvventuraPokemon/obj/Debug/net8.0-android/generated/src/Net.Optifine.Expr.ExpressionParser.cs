//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Expr {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.expr']/class[@name='ExpressionParser']"
	[global::Android.Runtime.Register ("net/optifine/expr/ExpressionParser", DoNotGenerateAcw=true)]
	public partial class ExpressionParser : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/expr/ExpressionParser", typeof (ExpressionParser));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ExpressionParser (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.expr']/class[@name='ExpressionParser']/constructor[@name='ExpressionParser' and count(parameter)=1 and parameter[1][@type='net.optifine.expr.IExpressionResolver']]"
		[Register (".ctor", "(Lnet/optifine/expr/IExpressionResolver;)V", "")]
		public unsafe ExpressionParser (global::Net.Optifine.Expr.IExpressionResolver? expressionResolver) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/expr/IExpressionResolver;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((expressionResolver == null) ? IntPtr.Zero : ((global::Java.Lang.Object) expressionResolver).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (expressionResolver);
			}
		}

		static Delegate? cb_parse_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParse_Ljava_lang_String_Handler ()
		{
			if (cb_parse_Ljava_lang_String_ == null)
				cb_parse_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_Parse_Ljava_lang_String_));
			return cb_parse_Ljava_lang_String_;
		}

		static IntPtr n_Parse_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ExpressionParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.Parse (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ExpressionParser']/method[@name='parse' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parse", "(Ljava/lang/String;)Lnet/optifine/expr/IExpression;", "GetParse_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.IExpression? Parse (string? str)
		{
			const string __id = "parse.(Ljava/lang/String;)Lnet/optifine/expr/IExpression;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.IExpression> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseBool_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseBool_Ljava_lang_String_Handler ()
		{
			if (cb_parseBool_Ljava_lang_String_ == null)
				cb_parseBool_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseBool_Ljava_lang_String_));
			return cb_parseBool_Ljava_lang_String_;
		}

		static IntPtr n_ParseBool_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ExpressionParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseBool (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ExpressionParser']/method[@name='parseBool' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseBool", "(Ljava/lang/String;)Lnet/optifine/expr/IExpressionBool;", "GetParseBool_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.IExpressionBool? ParseBool (string? str)
		{
			const string __id = "parseBool.(Ljava/lang/String;)Lnet/optifine/expr/IExpressionBool;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.IExpressionBool> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseFloat_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseFloat_Ljava_lang_String_Handler ()
		{
			if (cb_parseFloat_Ljava_lang_String_ == null)
				cb_parseFloat_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseFloat_Ljava_lang_String_));
			return cb_parseFloat_Ljava_lang_String_;
		}

		static IntPtr n_ParseFloat_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.ExpressionParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseFloat (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='ExpressionParser']/method[@name='parseFloat' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseFloat", "(Ljava/lang/String;)Lnet/optifine/expr/IExpressionFloat;", "GetParseFloat_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.IExpressionFloat? ParseFloat (string? str)
		{
			const string __id = "parseFloat.(Ljava/lang/String;)Lnet/optifine/expr/IExpressionFloat;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.IExpressionFloat> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']"
	[global::Android.Runtime.Register ("net/optifine/shaders/BlockAlias", DoNotGenerateAcw=true)]
	public partial class BlockAlias : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/BlockAlias", typeof (BlockAlias));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected BlockAlias (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/constructor[@name='BlockAlias' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='net.optifine.config.MatchBlock[]']]"
		[Register (".ctor", "(II[Lnet/optifine/config/MatchBlock;)V", "")]
		public unsafe BlockAlias (int aliasBlockId, int aliasMetadata, global::Net.Optifine.Config.MatchBlock[]? matchBlocks) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(II[Lnet/optifine/config/MatchBlock;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_matchBlocks = JNIEnv.NewArray (matchBlocks);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (aliasBlockId);
				__args [1] = new JniArgumentValue (aliasMetadata);
				__args [2] = new JniArgumentValue (native_matchBlocks);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (matchBlocks != null) {
					JNIEnv.CopyArray (native_matchBlocks, matchBlocks);
					JNIEnv.DeleteLocalRef (native_matchBlocks);
				}
				global::System.GC.KeepAlive (matchBlocks);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/constructor[@name='BlockAlias' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='net.optifine.config.MatchBlock[]']]"
		[Register (".ctor", "(I[Lnet/optifine/config/MatchBlock;)V", "")]
		public unsafe BlockAlias (int aliasBlockId, global::Net.Optifine.Config.MatchBlock[]? matchBlocks) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(I[Lnet/optifine/config/MatchBlock;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_matchBlocks = JNIEnv.NewArray (matchBlocks);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (aliasBlockId);
				__args [1] = new JniArgumentValue (native_matchBlocks);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (matchBlocks != null) {
					JNIEnv.CopyArray (native_matchBlocks, matchBlocks);
					JNIEnv.DeleteLocalRef (native_matchBlocks);
				}
				global::System.GC.KeepAlive (matchBlocks);
			}
		}

		static Delegate? cb_getAliasBlockId;
#pragma warning disable 0169
		static Delegate GetGetAliasBlockIdHandler ()
		{
			if (cb_getAliasBlockId == null)
				cb_getAliasBlockId = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetAliasBlockId));
			return cb_getAliasBlockId;
		}

		static int n_GetAliasBlockId (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.BlockAlias> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.AliasBlockId;
		}
#pragma warning restore 0169

		public virtual unsafe int AliasBlockId {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/method[@name='getAliasBlockId' and count(parameter)=0]"
			[Register ("getAliasBlockId", "()I", "GetGetAliasBlockIdHandler")]
			get {
				const string __id = "getAliasBlockId.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getAliasMetadata;
#pragma warning disable 0169
		static Delegate GetGetAliasMetadataHandler ()
		{
			if (cb_getAliasMetadata == null)
				cb_getAliasMetadata = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetAliasMetadata));
			return cb_getAliasMetadata;
		}

		static int n_GetAliasMetadata (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.BlockAlias> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.AliasMetadata;
		}
#pragma warning restore 0169

		public virtual unsafe int AliasMetadata {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/method[@name='getAliasMetadata' and count(parameter)=0]"
			[Register ("getAliasMetadata", "()I", "GetGetAliasMetadataHandler")]
			get {
				const string __id = "getAliasMetadata.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getMatchBlockIds;
#pragma warning disable 0169
		static Delegate GetGetMatchBlockIdsHandler ()
		{
			if (cb_getMatchBlockIds == null)
				cb_getMatchBlockIds = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMatchBlockIds));
			return cb_getMatchBlockIds;
		}

		static IntPtr n_GetMatchBlockIds (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.BlockAlias> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetMatchBlockIds ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/method[@name='getMatchBlockIds' and count(parameter)=0]"
		[Register ("getMatchBlockIds", "()[I", "GetGetMatchBlockIdsHandler")]
		public virtual unsafe int[]? GetMatchBlockIds ()
		{
			const string __id = "getMatchBlockIds.()[I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
			}
		}

		static Delegate? cb_getMatchBlocks;
#pragma warning disable 0169
		static Delegate GetGetMatchBlocksHandler ()
		{
			if (cb_getMatchBlocks == null)
				cb_getMatchBlocks = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMatchBlocks));
			return cb_getMatchBlocks;
		}

		static IntPtr n_GetMatchBlocks (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.BlockAlias> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetMatchBlocks ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/method[@name='getMatchBlocks' and count(parameter)=0]"
		[Register ("getMatchBlocks", "()[Lnet/optifine/config/MatchBlock;", "GetGetMatchBlocksHandler")]
		public virtual unsafe global::Net.Optifine.Config.MatchBlock[]? GetMatchBlocks ()
		{
			const string __id = "getMatchBlocks.()[Lnet/optifine/config/MatchBlock;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (global::Net.Optifine.Config.MatchBlock[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.MatchBlock));
			} finally {
			}
		}

		static Delegate? cb_getMatchBlocks_I;
#pragma warning disable 0169
		static Delegate GetGetMatchBlocks_IHandler ()
		{
			if (cb_getMatchBlocks_I == null)
				cb_getMatchBlocks_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_GetMatchBlocks_I));
			return cb_getMatchBlocks_I;
		}

		static IntPtr n_GetMatchBlocks_I (IntPtr jnienv, IntPtr native__this, int matchBlockId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.BlockAlias> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetMatchBlocks (matchBlockId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/method[@name='getMatchBlocks' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getMatchBlocks", "(I)[Lnet/optifine/config/MatchBlock;", "GetGetMatchBlocks_IHandler")]
		public virtual unsafe global::Net.Optifine.Config.MatchBlock[]? GetMatchBlocks (int matchBlockId)
		{
			const string __id = "getMatchBlocks.(I)[Lnet/optifine/config/MatchBlock;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (matchBlockId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Config.MatchBlock[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.MatchBlock));
			} finally {
			}
		}

		static Delegate? cb_matches_II;
#pragma warning disable 0169
		static Delegate GetMatches_IIHandler ()
		{
			if (cb_matches_II == null)
				cb_matches_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_Z (n_Matches_II));
			return cb_matches_II;
		}

		static bool n_Matches_II (IntPtr jnienv, IntPtr native__this, int id, int metadata)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.BlockAlias> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Matches (id, metadata);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='BlockAlias']/method[@name='matches' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("matches", "(II)Z", "GetMatches_IIHandler")]
		public virtual unsafe bool Matches (int id, int metadata)
		{
			const string __id = "matches.(II)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (id);
				__args [1] = new JniArgumentValue (metadata);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

	}
}

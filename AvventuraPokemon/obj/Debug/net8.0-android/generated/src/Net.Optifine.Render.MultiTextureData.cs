//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Render {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.render']/class[@name='MultiTextureData']"
	[global::Android.Runtime.Register ("net/optifine/render/MultiTextureData", DoNotGenerateAcw=true)]
	public partial class MultiTextureData : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/render/MultiTextureData", typeof (MultiTextureData));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected MultiTextureData (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.render']/class[@name='MultiTextureData']/constructor[@name='MultiTextureData' and count(parameter)=1 and parameter[1][@type='net.optifine.render.SpriteRenderData[]']]"
		[Register (".ctor", "([Lnet/optifine/render/SpriteRenderData;)V", "")]
		public unsafe MultiTextureData (global::Net.Optifine.Render.SpriteRenderData[]? spriteRenderDatas) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "([Lnet/optifine/render/SpriteRenderData;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_spriteRenderDatas = JNIEnv.NewArray (spriteRenderDatas);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_spriteRenderDatas);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (spriteRenderDatas != null) {
					JNIEnv.CopyArray (native_spriteRenderDatas, spriteRenderDatas);
					JNIEnv.DeleteLocalRef (native_spriteRenderDatas);
				}
				global::System.GC.KeepAlive (spriteRenderDatas);
			}
		}

		static Delegate? cb_applySort;
#pragma warning disable 0169
		static Delegate GetApplySortHandler ()
		{
			if (cb_applySort == null)
				cb_applySort = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ApplySort));
			return cb_applySort;
		}

		static void n_ApplySort (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.MultiTextureData> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ApplySort ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='MultiTextureData']/method[@name='applySort' and count(parameter)=0]"
		[Register ("applySort", "()V", "GetApplySortHandler")]
		public virtual unsafe void ApplySort ()
		{
			const string __id = "applySort.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getSpriteRenderDatas;
#pragma warning disable 0169
		static Delegate GetGetSpriteRenderDatasHandler ()
		{
			if (cb_getSpriteRenderDatas == null)
				cb_getSpriteRenderDatas = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetSpriteRenderDatas));
			return cb_getSpriteRenderDatas;
		}

		static IntPtr n_GetSpriteRenderDatas (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.MultiTextureData> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetSpriteRenderDatas ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='MultiTextureData']/method[@name='getSpriteRenderDatas' and count(parameter)=0]"
		[Register ("getSpriteRenderDatas", "()[Lnet/optifine/render/SpriteRenderData;", "GetGetSpriteRenderDatasHandler")]
		public virtual unsafe global::Net.Optifine.Render.SpriteRenderData[]? GetSpriteRenderDatas ()
		{
			const string __id = "getSpriteRenderDatas.()[Lnet/optifine/render/SpriteRenderData;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (global::Net.Optifine.Render.SpriteRenderData[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Render.SpriteRenderData));
			} finally {
			}
		}

		static Delegate? cb_prepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayI;
#pragma warning disable 0169
		static Delegate GetPrepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayIHandler ()
		{
			if (cb_prepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayI == null)
				cb_prepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_PrepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayI));
			return cb_prepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayI;
		}

		static void n_PrepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayI (IntPtr jnienv, IntPtr native__this, IntPtr native_multiTextureBuilder, IntPtr native_quadOrdering)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.MultiTextureData> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var multiTextureBuilder = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.MultiTextureBuilder> (native_multiTextureBuilder, JniHandleOwnership.DoNotTransfer);
			var quadOrdering = (int[]?) JNIEnv.GetArray (native_quadOrdering, JniHandleOwnership.DoNotTransfer, typeof (int));
			__this.PrepareSort (multiTextureBuilder, quadOrdering);
			if (quadOrdering != null)
				JNIEnv.CopyArray (quadOrdering, native_quadOrdering);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.render']/class[@name='MultiTextureData']/method[@name='prepareSort' and count(parameter)=2 and parameter[1][@type='net.optifine.render.MultiTextureBuilder'] and parameter[2][@type='int[]']]"
		[Register ("prepareSort", "(Lnet/optifine/render/MultiTextureBuilder;[I)V", "GetPrepareSort_Lnet_optifine_render_MultiTextureBuilder_arrayIHandler")]
		public virtual unsafe void PrepareSort (global::Net.Optifine.Render.MultiTextureBuilder? multiTextureBuilder, int[]? quadOrdering)
		{
			const string __id = "prepareSort.(Lnet/optifine/render/MultiTextureBuilder;[I)V";
			IntPtr native_quadOrdering = JNIEnv.NewArray (quadOrdering);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((multiTextureBuilder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) multiTextureBuilder).Handle);
				__args [1] = new JniArgumentValue (native_quadOrdering);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (quadOrdering != null) {
					JNIEnv.CopyArray (native_quadOrdering, quadOrdering);
					JNIEnv.DeleteLocalRef (native_quadOrdering);
				}
				global::System.GC.KeepAlive (multiTextureBuilder);
				global::System.GC.KeepAlive (quadOrdering);
			}
		}

	}
}

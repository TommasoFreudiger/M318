//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='RenderScale']"
	[global::Android.Runtime.Register ("net/optifine/shaders/config/RenderScale", DoNotGenerateAcw=true)]
	public partial class RenderScale : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/config/RenderScale", typeof (RenderScale));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected RenderScale (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='RenderScale']/constructor[@name='RenderScale' and count(parameter)=3 and parameter[1][@type='float'] and parameter[2][@type='float'] and parameter[3][@type='float']]"
		[Register (".ctor", "(FFF)V", "")]
		public unsafe RenderScale (float scale, float offsetX, float offsetY) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(FFF)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (scale);
				__args [1] = new JniArgumentValue (offsetX);
				__args [2] = new JniArgumentValue (offsetY);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_getOffsetX;
#pragma warning disable 0169
		static Delegate GetGetOffsetXHandler ()
		{
			if (cb_getOffsetX == null)
				cb_getOffsetX = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetOffsetX));
			return cb_getOffsetX;
		}

		static float n_GetOffsetX (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.RenderScale> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.OffsetX;
		}
#pragma warning restore 0169

		public virtual unsafe float OffsetX {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='RenderScale']/method[@name='getOffsetX' and count(parameter)=0]"
			[Register ("getOffsetX", "()F", "GetGetOffsetXHandler")]
			get {
				const string __id = "getOffsetX.()F";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getOffsetY;
#pragma warning disable 0169
		static Delegate GetGetOffsetYHandler ()
		{
			if (cb_getOffsetY == null)
				cb_getOffsetY = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetOffsetY));
			return cb_getOffsetY;
		}

		static float n_GetOffsetY (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.RenderScale> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.OffsetY;
		}
#pragma warning restore 0169

		public virtual unsafe float OffsetY {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='RenderScale']/method[@name='getOffsetY' and count(parameter)=0]"
			[Register ("getOffsetY", "()F", "GetGetOffsetYHandler")]
			get {
				const string __id = "getOffsetY.()F";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getScale;
#pragma warning disable 0169
		static Delegate GetGetScaleHandler ()
		{
			if (cb_getScale == null)
				cb_getScale = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetScale));
			return cb_getScale;
		}

		static float n_GetScale (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.RenderScale> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Scale;
		}
#pragma warning restore 0169

		public virtual unsafe float Scale {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='RenderScale']/method[@name='getScale' and count(parameter)=0]"
			[Register ("getScale", "()F", "GetGetScaleHandler")]
			get {
				const string __id = "getScale.()F";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

	}
}

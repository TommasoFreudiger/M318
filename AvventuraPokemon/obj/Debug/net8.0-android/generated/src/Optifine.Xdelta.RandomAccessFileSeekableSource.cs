//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Optifine.Xdelta {

	// Metadata.xml XPath class reference: path="/api/package[@name='optifine.xdelta']/class[@name='RandomAccessFileSeekableSource']"
	[global::Android.Runtime.Register ("optifine/xdelta/RandomAccessFileSeekableSource", DoNotGenerateAcw=true)]
	public partial class RandomAccessFileSeekableSource : global::Java.Lang.Object, global::Optifine.Xdelta.ISeekableSource {
		static readonly JniPeerMembers _members = new XAPeerMembers ("optifine/xdelta/RandomAccessFileSeekableSource", typeof (RandomAccessFileSeekableSource));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected RandomAccessFileSeekableSource (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='optifine.xdelta']/class[@name='RandomAccessFileSeekableSource']/constructor[@name='RandomAccessFileSeekableSource' and count(parameter)=1 and parameter[1][@type='java.io.RandomAccessFile']]"
		[Register (".ctor", "(Ljava/io/RandomAccessFile;)V", "")]
		public unsafe RandomAccessFileSeekableSource (global::Java.IO.RandomAccessFile? raf) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/io/RandomAccessFile;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((raf == null) ? IntPtr.Zero : ((global::Java.Lang.Object) raf).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (raf);
			}
		}

		static Delegate? cb_close;
#pragma warning disable 0169
		static Delegate GetCloseHandler ()
		{
			if (cb_close == null)
				cb_close = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Close));
			return cb_close;
		}

		static void n_Close (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Xdelta.RandomAccessFileSeekableSource> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Close ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.xdelta']/class[@name='RandomAccessFileSeekableSource']/method[@name='close' and count(parameter)=0]"
		[Register ("close", "()V", "GetCloseHandler")]
		public virtual unsafe void Close ()
		{
			const string __id = "close.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_length;
#pragma warning disable 0169
		static Delegate GetLengthHandler ()
		{
			if (cb_length == null)
				cb_length = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_Length));
			return cb_length;
		}

		static long n_Length (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Xdelta.RandomAccessFileSeekableSource> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Length ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.xdelta']/class[@name='RandomAccessFileSeekableSource']/method[@name='length' and count(parameter)=0]"
		[Register ("length", "()J", "GetLengthHandler")]
		public virtual unsafe long Length ()
		{
			const string __id = "length.()J";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_read_arrayBII;
#pragma warning disable 0169
		static Delegate GetRead_arrayBIIHandler ()
		{
			if (cb_read_arrayBII == null)
				cb_read_arrayBII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_I (n_Read_arrayBII));
			return cb_read_arrayBII;
		}

		static int n_Read_arrayBII (IntPtr jnienv, IntPtr native__this, IntPtr native_b, int off, int len)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Xdelta.RandomAccessFileSeekableSource> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var b = (byte[]?) JNIEnv.GetArray (native_b, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.Read (b, off, len);
			if (b != null)
				JNIEnv.CopyArray (b, native_b);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.xdelta']/class[@name='RandomAccessFileSeekableSource']/method[@name='read' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("read", "([BII)I", "GetRead_arrayBIIHandler")]
		public virtual unsafe int Read (byte[]? b, int off, int len)
		{
			const string __id = "read.([BII)I";
			IntPtr native_b = JNIEnv.NewArray (b);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_b);
				__args [1] = new JniArgumentValue (off);
				__args [2] = new JniArgumentValue (len);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (b != null) {
					JNIEnv.CopyArray (native_b, b);
					JNIEnv.DeleteLocalRef (native_b);
				}
				global::System.GC.KeepAlive (b);
			}
		}

		static Delegate? cb_seek_J;
#pragma warning disable 0169
		static Delegate GetSeek_JHandler ()
		{
			if (cb_seek_J == null)
				cb_seek_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_V (n_Seek_J));
			return cb_seek_J;
		}

		static void n_Seek_J (IntPtr jnienv, IntPtr native__this, long pos)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Optifine.Xdelta.RandomAccessFileSeekableSource> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Seek (pos);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine.xdelta']/class[@name='RandomAccessFileSeekableSource']/method[@name='seek' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("seek", "(J)V", "GetSeek_JHandler")]
		public virtual unsafe void Seek (long pos)
		{
			const string __id = "seek.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (pos);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

	}
}

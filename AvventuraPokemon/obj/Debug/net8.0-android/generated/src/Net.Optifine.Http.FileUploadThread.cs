//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Http {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.http']/class[@name='FileUploadThread']"
	[global::Android.Runtime.Register ("net/optifine/http/FileUploadThread", DoNotGenerateAcw=true)]
	public partial class FileUploadThread : global::Java.Lang.Thread {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/http/FileUploadThread", typeof (FileUploadThread));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FileUploadThread (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.http']/class[@name='FileUploadThread']/constructor[@name='FileUploadThread' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map'] and parameter[3][@type='byte[]'] and parameter[4][@type='net.optifine.http.IFileUploadListener']]"
		[Register (".ctor", "(Ljava/lang/String;Ljava/util/Map;[BLnet/optifine/http/IFileUploadListener;)V", "")]
		public unsafe FileUploadThread (string? urlString, global::System.Collections.IDictionary? headers, byte[]? content, global::Net.Optifine.Http.IFileUploadListener? listener) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;Ljava/util/Map;[BLnet/optifine/http/IFileUploadListener;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_urlString = JNIEnv.NewString ((string?)urlString);
			IntPtr native_headers = global::Android.Runtime.JavaDictionary.ToLocalJniHandle (headers);
			IntPtr native_content = JNIEnv.NewArray (content);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_urlString);
				__args [1] = new JniArgumentValue (native_headers);
				__args [2] = new JniArgumentValue (native_content);
				__args [3] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_urlString);
				JNIEnv.DeleteLocalRef (native_headers);
				if (content != null) {
					JNIEnv.CopyArray (native_content, content);
					JNIEnv.DeleteLocalRef (native_content);
				}
				global::System.GC.KeepAlive (headers);
				global::System.GC.KeepAlive (content);
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate? cb_getListener;
#pragma warning disable 0169
		static Delegate GetGetListenerHandler ()
		{
			if (cb_getListener == null)
				cb_getListener = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetListener));
			return cb_getListener;
		}

		static IntPtr n_GetListener (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.FileUploadThread> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Listener);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Http.IFileUploadListener? Listener {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='FileUploadThread']/method[@name='getListener' and count(parameter)=0]"
			[Register ("getListener", "()Lnet/optifine/http/IFileUploadListener;", "GetGetListenerHandler")]
			get {
				const string __id = "getListener.()Lnet/optifine/http/IFileUploadListener;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.IFileUploadListener> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getUrlString;
#pragma warning disable 0169
		static Delegate GetGetUrlStringHandler ()
		{
			if (cb_getUrlString == null)
				cb_getUrlString = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetUrlString));
			return cb_getUrlString;
		}

		static IntPtr n_GetUrlString (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.FileUploadThread> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.UrlString);
		}
#pragma warning restore 0169

		public virtual unsafe string? UrlString {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='FileUploadThread']/method[@name='getUrlString' and count(parameter)=0]"
			[Register ("getUrlString", "()Ljava/lang/String;", "GetGetUrlStringHandler")]
			get {
				const string __id = "getUrlString.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getContent;
#pragma warning disable 0169
		static Delegate GetGetContentHandler ()
		{
			if (cb_getContent == null)
				cb_getContent = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetContent));
			return cb_getContent;
		}

		static IntPtr n_GetContent (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.FileUploadThread> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetContent ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='FileUploadThread']/method[@name='getContent' and count(parameter)=0]"
		[Register ("getContent", "()[B", "GetGetContentHandler")]
		public virtual unsafe byte[]? GetContent ()
		{
			const string __id = "getContent.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']"
	[global::Android.Runtime.Register ("net/optifine/config/ConnectedParser", DoNotGenerateAcw=true)]
	public partial class ConnectedParser : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/field[@name='PROFESSIONS_INVALID']"
		[Register ("PROFESSIONS_INVALID")]
		public static IList<Net.Optifine.Config.MatchProfession>? ProfessionsInvalid {
			get {
				const string __id = "PROFESSIONS_INVALID.[Lnet/optifine/config/MatchProfession;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Android.Runtime.JavaArray<global::Net.Optifine.Config.MatchProfession>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/config/ConnectedParser", typeof (ConnectedParser));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ConnectedParser (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/constructor[@name='ConnectedParser' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/lang/String;)V", "")]
		public unsafe ConnectedParser (string? context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_context = JNIEnv.NewString ((string?)context);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_context);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_context);
			}
		}

		static Delegate? cb_dbg_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetDbg_Ljava_lang_String_Handler ()
		{
			if (cb_dbg_Ljava_lang_String_ == null)
				cb_dbg_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Dbg_Ljava_lang_String_));
			return cb_dbg_Ljava_lang_String_;
		}

		static void n_Dbg_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			__this.Dbg (str);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='dbg' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("dbg", "(Ljava/lang/String;)V", "GetDbg_Ljava_lang_String_Handler")]
		public virtual unsafe void Dbg (string? str)
		{
			const string __id = "dbg.(Ljava/lang/String;)V";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_getBiomeId_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetGetBiomeId_Ljava_lang_String_Handler ()
		{
			if (cb_getBiomeId_Ljava_lang_String_ == null)
				cb_getBiomeId_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetBiomeId_Ljava_lang_String_));
			return cb_getBiomeId_Ljava_lang_String_;
		}

		static IntPtr n_GetBiomeId_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_biomeName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var biomeName = JNIEnv.GetString (native_biomeName, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetBiomeId (biomeName));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='getBiomeId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getBiomeId", "(Ljava/lang/String;)Lnet/optifine/config/BiomeId;", "GetGetBiomeId_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.BiomeId? GetBiomeId (string? biomeName)
		{
			const string __id = "getBiomeId.(Ljava/lang/String;)Lnet/optifine/config/BiomeId;";
			IntPtr native_biomeName = JNIEnv.NewString ((string?)biomeName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_biomeName);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.BiomeId> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_biomeName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='getPropertyValue' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Collection']]"
		[Register ("getPropertyValue", "(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/Comparable;", "")]
		public static unsafe global::Java.Lang.IComparable? GetPropertyValue (string? value, global::System.Collections.ICollection? propertyValues)
		{
			const string __id = "getPropertyValue.(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/Comparable;";
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			IntPtr native_propertyValues = global::Android.Runtime.JavaCollection.ToLocalJniHandle (propertyValues);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_value);
				__args [1] = new JniArgumentValue (native_propertyValues);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.IComparable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_value);
				JNIEnv.DeleteLocalRef (native_propertyValues);
				global::System.GC.KeepAlive (propertyValues);
			}
		}

		static Delegate? cb_isFullBlockName_arrayLjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetIsFullBlockName_arrayLjava_lang_String_Handler ()
		{
			if (cb_isFullBlockName_arrayLjava_lang_String_ == null)
				cb_isFullBlockName_arrayLjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsFullBlockName_arrayLjava_lang_String_));
			return cb_isFullBlockName_arrayLjava_lang_String_;
		}

		static bool n_IsFullBlockName_arrayLjava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_parts)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var parts = (string[]?) JNIEnv.GetArray (native_parts, JniHandleOwnership.DoNotTransfer, typeof (string));
			bool __ret = __this.IsFullBlockName (parts);
			if (parts != null)
				JNIEnv.CopyArray (parts, native_parts);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='isFullBlockName' and count(parameter)=1 and parameter[1][@type='java.lang.String[]']]"
		[Register ("isFullBlockName", "([Ljava/lang/String;)Z", "GetIsFullBlockName_arrayLjava_lang_String_Handler")]
		public virtual unsafe bool IsFullBlockName (string[]? parts)
		{
			const string __id = "isFullBlockName.([Ljava/lang/String;)Z";
			IntPtr native_parts = JNIEnv.NewArray (parts);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_parts);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				if (parts != null) {
					JNIEnv.CopyArray (native_parts, parts);
					JNIEnv.DeleteLocalRef (native_parts);
				}
				global::System.GC.KeepAlive (parts);
			}
		}

		static Delegate? cb_parseBasePath_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseBasePath_Ljava_lang_String_Handler ()
		{
			if (cb_parseBasePath_Ljava_lang_String_ == null)
				cb_parseBasePath_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseBasePath_Ljava_lang_String_));
			return cb_parseBasePath_Ljava_lang_String_;
		}

		static IntPtr n_ParseBasePath_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_path)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var path = JNIEnv.GetString (native_path, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.ParseBasePath (path));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseBasePath' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseBasePath", "(Ljava/lang/String;)Ljava/lang/String;", "GetParseBasePath_Ljava_lang_String_Handler")]
		public virtual unsafe string? ParseBasePath (string? path)
		{
			const string __id = "parseBasePath.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_path);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		static Delegate? cb_parseBiomes_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseBiomes_Ljava_lang_String_Handler ()
		{
			if (cb_parseBiomes_Ljava_lang_String_ == null)
				cb_parseBiomes_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseBiomes_Ljava_lang_String_));
			return cb_parseBiomes_Ljava_lang_String_;
		}

		static IntPtr n_ParseBiomes_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseBiomes (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseBiomes' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseBiomes", "(Ljava/lang/String;)[Lnet/optifine/config/BiomeId;", "GetParseBiomes_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.BiomeId[]? ParseBiomes (string? str)
		{
			const string __id = "parseBiomes.(Ljava/lang/String;)[Lnet/optifine/config/BiomeId;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Config.BiomeId[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.BiomeId));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseBoolean_Ljava_lang_String_Z;
#pragma warning disable 0169
		static Delegate GetParseBoolean_Ljava_lang_String_ZHandler ()
		{
			if (cb_parseBoolean_Ljava_lang_String_Z == null)
				cb_parseBoolean_Ljava_lang_String_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_Z (n_ParseBoolean_Ljava_lang_String_Z));
			return cb_parseBoolean_Ljava_lang_String_Z;
		}

		static bool n_ParseBoolean_Ljava_lang_String_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_str, bool defVal)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.ParseBoolean (str, defVal);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseBoolean' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register ("parseBoolean", "(Ljava/lang/String;Z)Z", "GetParseBoolean_Ljava_lang_String_ZHandler")]
		public virtual unsafe bool ParseBoolean (string? str, bool defVal)
		{
			const string __id = "parseBoolean.(Ljava/lang/String;Z)Z";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (defVal);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseBooleanObject_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseBooleanObject_Ljava_lang_String_Handler ()
		{
			if (cb_parseBooleanObject_Ljava_lang_String_ == null)
				cb_parseBooleanObject_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseBooleanObject_Ljava_lang_String_));
			return cb_parseBooleanObject_Ljava_lang_String_;
		}

		static IntPtr n_ParseBooleanObject_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseBooleanObject (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseBooleanObject' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseBooleanObject", "(Ljava/lang/String;)Ljava/lang/Boolean;", "GetParseBooleanObject_Ljava_lang_String_Handler")]
		public virtual unsafe global::Java.Lang.Boolean? ParseBooleanObject (string? str)
		{
			const string __id = "parseBooleanObject.(Ljava/lang/String;)Ljava/lang/Boolean;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Boolean> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseColor' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("parseColor", "(Ljava/lang/String;I)I", "")]
		public static unsafe int ParseColor (string? str, int defVal)
		{
			const string __id = "parseColor.(Ljava/lang/String;I)I";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (defVal);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseColor4' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("parseColor4", "(Ljava/lang/String;I)I", "")]
		public static unsafe int ParseColor4 (string? str, int defVal)
		{
			const string __id = "parseColor4.(Ljava/lang/String;I)I";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (defVal);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseEntities_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseEntities_Ljava_lang_String_Handler ()
		{
			if (cb_parseEntities_Ljava_lang_String_ == null)
				cb_parseEntities_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseEntities_Ljava_lang_String_));
			return cb_parseEntities_Ljava_lang_String_;
		}

		static IntPtr n_ParseEntities_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseEntities (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseEntities' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseEntities", "(Ljava/lang/String;)[I", "GetParseEntities_Ljava_lang_String_Handler")]
		public virtual unsafe int[]? ParseEntities (string? str)
		{
			const string __id = "parseEntities.(Ljava/lang/String;)[I";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_Handler ()
		{
			if (cb_parseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_ == null)
				cb_parseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_L (n_ParseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_));
			return cb_parseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_;
		}

		static IntPtr n_ParseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str, IntPtr native_enums, IntPtr native_property)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			var enums = (global::Java.Lang.Enum[]?) JNIEnv.GetArray (native_enums, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Enum));
			var property = JNIEnv.GetString (native_property, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseEnum (str, enums, property));
			if (enums != null)
				JNIEnv.CopyArray (enums, native_enums);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseEnum' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Enum[]'] and parameter[3][@type='java.lang.String']]"
		[Register ("parseEnum", "(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum;", "GetParseEnum_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_Handler")]
		public virtual unsafe global::Java.Lang.Enum? ParseEnum (string? str, global::Java.Lang.Enum[]? enums, string? property)
		{
			const string __id = "parseEnum.(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			IntPtr native_enums = JNIEnv.NewArray (enums);
			IntPtr native_property = JNIEnv.NewString ((string?)property);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (native_enums);
				__args [2] = new JniArgumentValue (native_property);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Enum> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				if (enums != null) {
					JNIEnv.CopyArray (native_enums, enums);
					JNIEnv.DeleteLocalRef (native_enums);
				}
				JNIEnv.DeleteLocalRef (native_property);
				global::System.GC.KeepAlive (enums);
			}
		}

		static Delegate? cb_parseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_;
#pragma warning disable 0169
		static Delegate GetParseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_Handler ()
		{
			if (cb_parseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_ == null)
				cb_parseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLL_L (n_ParseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_));
			return cb_parseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_;
		}

		static IntPtr n_ParseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str, IntPtr native_enums, IntPtr native_property, IntPtr native_errValue)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			var enums = (global::Java.Lang.Enum[]?) JNIEnv.GetArray (native_enums, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Enum));
			var property = JNIEnv.GetString (native_property, JniHandleOwnership.DoNotTransfer);
			var errValue = (global::Java.Lang.Enum[]?) JNIEnv.GetArray (native_errValue, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Enum));
			IntPtr __ret = JNIEnv.NewArray (__this.ParseEnums (str, enums, property, errValue));
			if (enums != null)
				JNIEnv.CopyArray (enums, native_enums);
			if (errValue != null)
				JNIEnv.CopyArray (errValue, native_errValue);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseEnums' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Enum[]'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Enum[]']]"
		[Register ("parseEnums", "(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;[Ljava/lang/Enum;)[Ljava/lang/Enum;", "GetParseEnums_Ljava_lang_String_arrayLjava_lang_Enum_Ljava_lang_String_arrayLjava_lang_Enum_Handler")]
		public virtual unsafe global::Java.Lang.Enum[]? ParseEnums (string? str, global::Java.Lang.Enum[]? enums, string? property, global::Java.Lang.Enum[]? errValue)
		{
			const string __id = "parseEnums.(Ljava/lang/String;[Ljava/lang/Enum;Ljava/lang/String;[Ljava/lang/Enum;)[Ljava/lang/Enum;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			IntPtr native_enums = JNIEnv.NewArray (enums);
			IntPtr native_property = JNIEnv.NewString ((string?)property);
			IntPtr native_errValue = JNIEnv.NewArray (errValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (native_enums);
				__args [2] = new JniArgumentValue (native_property);
				__args [3] = new JniArgumentValue (native_errValue);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Enum[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Java.Lang.Enum));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				if (enums != null) {
					JNIEnv.CopyArray (native_enums, enums);
					JNIEnv.DeleteLocalRef (native_enums);
				}
				JNIEnv.DeleteLocalRef (native_property);
				if (errValue != null) {
					JNIEnv.CopyArray (native_errValue, errValue);
					JNIEnv.DeleteLocalRef (native_errValue);
				}
				global::System.GC.KeepAlive (enums);
				global::System.GC.KeepAlive (errValue);
			}
		}

		static Delegate? cb_parseFaces_Ljava_lang_String_arrayZ;
#pragma warning disable 0169
		static Delegate GetParseFaces_Ljava_lang_String_arrayZHandler ()
		{
			if (cb_parseFaces_Ljava_lang_String_arrayZ == null)
				cb_parseFaces_Ljava_lang_String_arrayZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_ParseFaces_Ljava_lang_String_arrayZ));
			return cb_parseFaces_Ljava_lang_String_arrayZ;
		}

		static IntPtr n_ParseFaces_Ljava_lang_String_arrayZ (IntPtr jnienv, IntPtr native__this, IntPtr native_str, IntPtr native_defVal)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			var defVal = (bool[]?) JNIEnv.GetArray (native_defVal, JniHandleOwnership.DoNotTransfer, typeof (bool));
			IntPtr __ret = JNIEnv.NewArray (__this.ParseFaces (str, defVal));
			if (defVal != null)
				JNIEnv.CopyArray (defVal, native_defVal);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseFaces' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean[]']]"
		[Register ("parseFaces", "(Ljava/lang/String;[Z)[Z", "GetParseFaces_Ljava_lang_String_arrayZHandler")]
		public virtual unsafe bool[]? ParseFaces (string? str, bool[]? defVal)
		{
			const string __id = "parseFaces.(Ljava/lang/String;[Z)[Z";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			IntPtr native_defVal = JNIEnv.NewArray (defVal);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (native_defVal);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (bool[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (bool));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				if (defVal != null) {
					JNIEnv.CopyArray (native_defVal, defVal);
					JNIEnv.DeleteLocalRef (native_defVal);
				}
				global::System.GC.KeepAlive (defVal);
			}
		}

		static Delegate? cb_parseInt_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetParseInt_Ljava_lang_String_IHandler ()
		{
			if (cb_parseInt_Ljava_lang_String_I == null)
				cb_parseInt_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_ParseInt_Ljava_lang_String_I));
			return cb_parseInt_Ljava_lang_String_I;
		}

		static int n_ParseInt_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_str, int defVal)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.ParseInt (str, defVal);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseInt' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("parseInt", "(Ljava/lang/String;I)I", "GetParseInt_Ljava_lang_String_IHandler")]
		public virtual unsafe int ParseInt (string? str, int defVal)
		{
			const string __id = "parseInt.(Ljava/lang/String;I)I";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (defVal);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseIntList_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseIntList_Ljava_lang_String_Handler ()
		{
			if (cb_parseIntList_Ljava_lang_String_ == null)
				cb_parseIntList_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseIntList_Ljava_lang_String_));
			return cb_parseIntList_Ljava_lang_String_;
		}

		static IntPtr n_ParseIntList_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseIntList (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseIntList' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseIntList", "(Ljava/lang/String;)[I", "GetParseIntList_Ljava_lang_String_Handler")]
		public virtual unsafe int[]? ParseIntList (string? str)
		{
			const string __id = "parseIntList.(Ljava/lang/String;)[I";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseIntNeg_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetParseIntNeg_Ljava_lang_String_IHandler ()
		{
			if (cb_parseIntNeg_Ljava_lang_String_I == null)
				cb_parseIntNeg_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_ParseIntNeg_Ljava_lang_String_I));
			return cb_parseIntNeg_Ljava_lang_String_I;
		}

		static int n_ParseIntNeg_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_str, int defVal)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.ParseIntNeg (str, defVal);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseIntNeg' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("parseIntNeg", "(Ljava/lang/String;I)I", "GetParseIntNeg_Ljava_lang_String_IHandler")]
		public virtual unsafe int ParseIntNeg (string? str, int defVal)
		{
			const string __id = "parseIntNeg.(Ljava/lang/String;I)I";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (defVal);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseItems_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseItems_Ljava_lang_String_Handler ()
		{
			if (cb_parseItems_Ljava_lang_String_ == null)
				cb_parseItems_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseItems_Ljava_lang_String_));
			return cb_parseItems_Ljava_lang_String_;
		}

		static IntPtr n_ParseItems_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseItems (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseItems' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseItems", "(Ljava/lang/String;)[I", "GetParseItems_Ljava_lang_String_Handler")]
		public virtual unsafe int[]? ParseItems (string? str)
		{
			const string __id = "parseItems.(Ljava/lang/String;)[I";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseMatchBlock_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseMatchBlock_Ljava_lang_String_Handler ()
		{
			if (cb_parseMatchBlock_Ljava_lang_String_ == null)
				cb_parseMatchBlock_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseMatchBlock_Ljava_lang_String_));
			return cb_parseMatchBlock_Ljava_lang_String_;
		}

		static IntPtr n_ParseMatchBlock_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_blockStr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var blockStr = JNIEnv.GetString (native_blockStr, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseMatchBlock (blockStr));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseMatchBlock' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseMatchBlock", "(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock;", "GetParseMatchBlock_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.MatchBlock[]? ParseMatchBlock (string? blockStr)
		{
			const string __id = "parseMatchBlock.(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock;";
			IntPtr native_blockStr = JNIEnv.NewString ((string?)blockStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_blockStr);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Config.MatchBlock[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.MatchBlock));
			} finally {
				JNIEnv.DeleteLocalRef (native_blockStr);
			}
		}

		static Delegate? cb_parseMatchBlocks_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseMatchBlocks_Ljava_lang_String_Handler ()
		{
			if (cb_parseMatchBlocks_Ljava_lang_String_ == null)
				cb_parseMatchBlocks_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseMatchBlocks_Ljava_lang_String_));
			return cb_parseMatchBlocks_Ljava_lang_String_;
		}

		static IntPtr n_ParseMatchBlocks_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_propMatchBlocks)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var propMatchBlocks = JNIEnv.GetString (native_propMatchBlocks, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseMatchBlocks (propMatchBlocks));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseMatchBlocks' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseMatchBlocks", "(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock;", "GetParseMatchBlocks_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.MatchBlock[]? ParseMatchBlocks (string? propMatchBlocks)
		{
			const string __id = "parseMatchBlocks.(Ljava/lang/String;)[Lnet/optifine/config/MatchBlock;";
			IntPtr native_propMatchBlocks = JNIEnv.NewString ((string?)propMatchBlocks);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_propMatchBlocks);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Config.MatchBlock[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.MatchBlock));
			} finally {
				JNIEnv.DeleteLocalRef (native_propMatchBlocks);
			}
		}

		static Delegate? cb_parseName_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseName_Ljava_lang_String_Handler ()
		{
			if (cb_parseName_Ljava_lang_String_ == null)
				cb_parseName_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseName_Ljava_lang_String_));
			return cb_parseName_Ljava_lang_String_;
		}

		static IntPtr n_ParseName_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_path)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var path = JNIEnv.GetString (native_path, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.ParseName (path));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseName", "(Ljava/lang/String;)Ljava/lang/String;", "GetParseName_Ljava_lang_String_Handler")]
		public virtual unsafe string? ParseName (string? path)
		{
			const string __id = "parseName.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_path);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		static Delegate? cb_parseNbtTagValue_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseNbtTagValue_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_parseNbtTagValue_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_parseNbtTagValue_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_ParseNbtTagValue_Ljava_lang_String_Ljava_lang_String_));
			return cb_parseNbtTagValue_Ljava_lang_String_Ljava_lang_String_;
		}

		static IntPtr n_ParseNbtTagValue_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_path, IntPtr native_value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var path = JNIEnv.GetString (native_path, JniHandleOwnership.DoNotTransfer);
			var value = JNIEnv.GetString (native_value, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseNbtTagValue (path, value));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseNbtTagValue' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("parseNbtTagValue", "(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/config/NbtTagValue;", "GetParseNbtTagValue_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.NbtTagValue? ParseNbtTagValue (string? path, string? value)
		{
			const string __id = "parseNbtTagValue.(Ljava/lang/String;Ljava/lang/String;)Lnet/optifine/config/NbtTagValue;";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_path);
				__args [1] = new JniArgumentValue (native_value);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.NbtTagValue> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		static Delegate? cb_parseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_Handler ()
		{
			if (cb_parseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_ == null)
				cb_parseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_ParseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_));
			return cb_parseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_;
		}

		static IntPtr n_ParseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_props, IntPtr native_prefix)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var props = global::Java.Lang.Object.GetObject<global::Java.Util.Properties> (native_props, JniHandleOwnership.DoNotTransfer);
			var prefix = JNIEnv.GetString (native_prefix, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseNbtTagValues (props, prefix));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseNbtTagValues' and count(parameter)=2 and parameter[1][@type='java.util.Properties'] and parameter[2][@type='java.lang.String']]"
		[Register ("parseNbtTagValues", "(Ljava/util/Properties;Ljava/lang/String;)[Lnet/optifine/config/NbtTagValue;", "GetParseNbtTagValues_Ljava_util_Properties_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.NbtTagValue[]? ParseNbtTagValues (global::Java.Util.Properties? props, string? prefix)
		{
			const string __id = "parseNbtTagValues.(Ljava/util/Properties;Ljava/lang/String;)[Lnet/optifine/config/NbtTagValue;";
			IntPtr native_prefix = JNIEnv.NewString ((string?)prefix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((props == null) ? IntPtr.Zero : ((global::Java.Lang.Object) props).Handle);
				__args [1] = new JniArgumentValue (native_prefix);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Config.NbtTagValue[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.NbtTagValue));
			} finally {
				JNIEnv.DeleteLocalRef (native_prefix);
				global::System.GC.KeepAlive (props);
			}
		}

		static Delegate? cb_parseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_Handler ()
		{
			if (cb_parseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_ == null)
				cb_parseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLL_L (n_ParseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_));
			return cb_parseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_;
		}

		static IntPtr n_ParseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str, IntPtr native_objs, IntPtr native_nameGetter, IntPtr native_property)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			var objs = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_objs, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			var nameGetter = (global::Net.Optifine.Config.INameGetter?)global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.INameGetter> (native_nameGetter, JniHandleOwnership.DoNotTransfer);
			var property = JNIEnv.GetString (native_property, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseObject (str, objs, nameGetter, property));
			if (objs != null)
				JNIEnv.CopyArray (objs, native_objs);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseObject' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='T[]'] and parameter[3][@type='net.optifine.config.INameGetter'] and parameter[4][@type='java.lang.String']]"
		[Register ("parseObject", "(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;)Ljava/lang/Object;", "GetParseObject_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_Handler")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public virtual unsafe global::Java.Lang.Object? ParseObject (string? str, global::Java.Lang.Object[]? objs, global::Net.Optifine.Config.INameGetter? nameGetter, string? property)
		{
			const string __id = "parseObject.(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;)Ljava/lang/Object;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			IntPtr native_objs = JNIEnv.NewArray (objs);
			IntPtr native_property = JNIEnv.NewString ((string?)property);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (native_objs);
				__args [2] = new JniArgumentValue ((nameGetter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) nameGetter).Handle);
				__args [3] = new JniArgumentValue (native_property);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object?) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				if (objs != null) {
					JNIEnv.CopyArray (native_objs, objs);
					JNIEnv.DeleteLocalRef (native_objs);
				}
				JNIEnv.DeleteLocalRef (native_property);
				global::System.GC.KeepAlive (objs);
				global::System.GC.KeepAlive (nameGetter);
			}
		}

		static Delegate? cb_parseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetParseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_parseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_parseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLLL_L (n_ParseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_parseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static IntPtr n_ParseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str, IntPtr native_objs, IntPtr native_nameGetter, IntPtr native_property, IntPtr native_errValue)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			var objs = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_objs, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			var nameGetter = (global::Net.Optifine.Config.INameGetter?)global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.INameGetter> (native_nameGetter, JniHandleOwnership.DoNotTransfer);
			var property = JNIEnv.GetString (native_property, JniHandleOwnership.DoNotTransfer);
			var errValue = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_errValue, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			IntPtr __ret = JNIEnv.NewArray (__this.ParseObjects (str, objs, nameGetter, property, errValue));
			if (objs != null)
				JNIEnv.CopyArray (objs, native_objs);
			if (errValue != null)
				JNIEnv.CopyArray (errValue, native_errValue);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseObjects' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='T[]'] and parameter[3][@type='net.optifine.config.INameGetter'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='T[]']]"
		[Register ("parseObjects", "(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;", "GetParseObjects_Ljava_lang_String_arrayLjava_lang_Object_Lnet_optifine_config_INameGetter_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public virtual unsafe global::Java.Lang.Object[]? ParseObjects (string? str, global::Java.Lang.Object[]? objs, global::Net.Optifine.Config.INameGetter? nameGetter, string? property, global::Java.Lang.Object[]? errValue)
		{
			const string __id = "parseObjects.(Ljava/lang/String;[Ljava/lang/Object;Lnet/optifine/config/INameGetter;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			IntPtr native_objs = JNIEnv.NewArray (objs);
			IntPtr native_property = JNIEnv.NewString ((string?)property);
			IntPtr native_errValue = JNIEnv.NewArray (errValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (native_objs);
				__args [2] = new JniArgumentValue ((nameGetter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) nameGetter).Handle);
				__args [3] = new JniArgumentValue (native_property);
				__args [4] = new JniArgumentValue (native_errValue);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Java.Lang.Object));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				if (objs != null) {
					JNIEnv.CopyArray (native_objs, objs);
					JNIEnv.DeleteLocalRef (native_objs);
				}
				JNIEnv.DeleteLocalRef (native_property);
				if (errValue != null) {
					JNIEnv.CopyArray (native_errValue, errValue);
					JNIEnv.DeleteLocalRef (native_errValue);
				}
				global::System.GC.KeepAlive (objs);
				global::System.GC.KeepAlive (nameGetter);
				global::System.GC.KeepAlive (errValue);
			}
		}

		static Delegate? cb_parseProfessions_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseProfessions_Ljava_lang_String_Handler ()
		{
			if (cb_parseProfessions_Ljava_lang_String_ == null)
				cb_parseProfessions_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseProfessions_Ljava_lang_String_));
			return cb_parseProfessions_Ljava_lang_String_;
		}

		static IntPtr n_ParseProfessions_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_profStr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var profStr = JNIEnv.GetString (native_profStr, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewArray (__this.ParseProfessions (profStr));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseProfessions' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseProfessions", "(Ljava/lang/String;)[Lnet/optifine/config/MatchProfession;", "GetParseProfessions_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.MatchProfession[]? ParseProfessions (string? profStr)
		{
			const string __id = "parseProfessions.(Ljava/lang/String;)[Lnet/optifine/config/MatchProfession;";
			IntPtr native_profStr = JNIEnv.NewString ((string?)profStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_profStr);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Config.MatchProfession[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.MatchProfession));
			} finally {
				JNIEnv.DeleteLocalRef (native_profStr);
			}
		}

		static Delegate? cb_parseRangeListInt_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseRangeListInt_Ljava_lang_String_Handler ()
		{
			if (cb_parseRangeListInt_Ljava_lang_String_ == null)
				cb_parseRangeListInt_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseRangeListInt_Ljava_lang_String_));
			return cb_parseRangeListInt_Ljava_lang_String_;
		}

		static IntPtr n_ParseRangeListInt_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseRangeListInt (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseRangeListInt' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseRangeListInt", "(Ljava/lang/String;)Lnet/optifine/config/RangeListInt;", "GetParseRangeListInt_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.RangeListInt? ParseRangeListInt (string? str)
		{
			const string __id = "parseRangeListInt.(Ljava/lang/String;)Lnet/optifine/config/RangeListInt;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.RangeListInt> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_parseRangeListIntNeg_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseRangeListIntNeg_Ljava_lang_String_Handler ()
		{
			if (cb_parseRangeListIntNeg_Ljava_lang_String_ == null)
				cb_parseRangeListIntNeg_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ParseRangeListIntNeg_Ljava_lang_String_));
			return cb_parseRangeListIntNeg_Ljava_lang_String_;
		}

		static IntPtr n_ParseRangeListIntNeg_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.ParseRangeListIntNeg (str));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseRangeListIntNeg' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseRangeListIntNeg", "(Ljava/lang/String;)Lnet/optifine/config/RangeListInt;", "GetParseRangeListIntNeg_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Config.RangeListInt? ParseRangeListIntNeg (string? str)
		{
			const string __id = "parseRangeListIntNeg.(Ljava/lang/String;)Lnet/optifine/config/RangeListInt;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.RangeListInt> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseValue' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Class']]"
		[Register ("parseValue", "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Comparable;", "")]
		public static unsafe global::Java.Lang.IComparable? ParseValue (string? str, global::Java.Lang.Class? cls)
		{
			const string __id = "parseValue.(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Comparable;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue ((cls == null) ? IntPtr.Zero : ((global::Java.Lang.Object) cls).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.IComparable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				global::System.GC.KeepAlive (cls);
			}
		}

		static Delegate? cb_parseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_;
#pragma warning disable 0169
		static Delegate GetParseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_Handler ()
		{
			if (cb_parseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_ == null)
				cb_parseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_L (n_ParseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_));
			return cb_parseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_;
		}

		static IntPtr n_ParseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str, IntPtr native_property, IntPtr native_errValue)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			var property = JNIEnv.GetString (native_property, JniHandleOwnership.DoNotTransfer);
			var errValue = (global::Net.Optifine.Config.Weather[]?) JNIEnv.GetArray (native_errValue, JniHandleOwnership.DoNotTransfer, typeof (global::Net.Optifine.Config.Weather));
			IntPtr __ret = JNIEnv.NewArray (__this.ParseWeather (str, property, errValue));
			if (errValue != null)
				JNIEnv.CopyArray (errValue, native_errValue);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='parseWeather' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='net.optifine.config.Weather[]']]"
		[Register ("parseWeather", "(Ljava/lang/String;Ljava/lang/String;[Lnet/optifine/config/Weather;)[Lnet/optifine/config/Weather;", "GetParseWeather_Ljava_lang_String_Ljava_lang_String_arrayLnet_optifine_config_Weather_Handler")]
		public virtual unsafe global::Net.Optifine.Config.Weather[]? ParseWeather (string? str, string? property, global::Net.Optifine.Config.Weather[]? errValue)
		{
			const string __id = "parseWeather.(Ljava/lang/String;Ljava/lang/String;[Lnet/optifine/config/Weather;)[Lnet/optifine/config/Weather;";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			IntPtr native_property = JNIEnv.NewString ((string?)property);
			IntPtr native_errValue = JNIEnv.NewArray (errValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (native_property);
				__args [2] = new JniArgumentValue (native_errValue);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Net.Optifine.Config.Weather[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Config.Weather));
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				JNIEnv.DeleteLocalRef (native_property);
				if (errValue != null) {
					JNIEnv.CopyArray (native_errValue, errValue);
					JNIEnv.DeleteLocalRef (native_errValue);
				}
				global::System.GC.KeepAlive (errValue);
			}
		}

		static Delegate? cb_startsWithDigit_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetStartsWithDigit_Ljava_lang_String_Handler ()
		{
			if (cb_startsWithDigit_Ljava_lang_String_ == null)
				cb_startsWithDigit_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_StartsWithDigit_Ljava_lang_String_));
			return cb_startsWithDigit_Ljava_lang_String_;
		}

		static bool n_StartsWithDigit_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.StartsWithDigit (str);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='startsWithDigit' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("startsWithDigit", "(Ljava/lang/String;)Z", "GetStartsWithDigit_Ljava_lang_String_Handler")]
		public virtual unsafe bool StartsWithDigit (string? str)
		{
			const string __id = "startsWithDigit.(Ljava/lang/String;)Z";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		static Delegate? cb_warn_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetWarn_Ljava_lang_String_Handler ()
		{
			if (cb_warn_Ljava_lang_String_ == null)
				cb_warn_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Warn_Ljava_lang_String_));
			return cb_warn_Ljava_lang_String_;
		}

		static void n_Warn_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Config.ConnectedParser> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = JNIEnv.GetString (native_str, JniHandleOwnership.DoNotTransfer);
			__this.Warn (str);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='ConnectedParser']/method[@name='warn' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("warn", "(Ljava/lang/String;)V", "GetWarn_Ljava_lang_String_Handler")]
		public virtual unsafe void Warn (string? str)
		{
			const string __id = "warn.(Ljava/lang/String;)V";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']"
	[global::Android.Runtime.Register ("net/optifine/CustomColors", DoNotGenerateAcw=true)]
	public partial class CustomColors : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/field[@name='random']"
		[Register ("random")]
		public static global::Java.Util.Random? Random {
			get {
				const string __id = "random.Ljava/util/Random;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Util.Random> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "random.Ljava/util/Random;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='net.optifine']/interface[@name='CustomColors.IColorizer']"
		[Register ("net/optifine/CustomColors$IColorizer", "", "Net.Optifine.CustomColors/IColorizerInvoker")]
		public partial interface IColorizer : IJavaObject, IJavaPeerable {
			bool IsColorConstant {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/interface[@name='CustomColors.IColorizer']/method[@name='isColorConstant' and count(parameter)=0]"
				[Register ("isColorConstant", "()Z", "GetIsColorConstantHandler:Net.Optifine.CustomColors/IColorizerInvoker, AvventuraPokemon")]
				get; 
			}

		}

		[global::Android.Runtime.Register ("net/optifine/CustomColors$IColorizer", DoNotGenerateAcw=true)]
		internal partial class IColorizerInvoker : global::Java.Lang.Object, IColorizer {
			static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/CustomColors$IColorizer", typeof (IColorizerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IColorizer? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IColorizer> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'net.optifine.CustomColors.IColorizer'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IColorizerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_isColorConstant;
#pragma warning disable 0169
			static Delegate GetIsColorConstantHandler ()
			{
				if (cb_isColorConstant == null)
					cb_isColorConstant = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsColorConstant));
				return cb_isColorConstant;
			}

			static bool n_IsColorConstant (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColors.IColorizer> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.IsColorConstant;
			}
#pragma warning restore 0169

			IntPtr id_isColorConstant;
			public unsafe bool IsColorConstant {
				get {
					if (id_isColorConstant == IntPtr.Zero)
						id_isColorConstant = JNIEnv.GetMethodID (class_ref, "isColorConstant", "()Z");
					return JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_isColorConstant);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/CustomColors", typeof (CustomColors));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CustomColors (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/constructor[@name='CustomColors' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe CustomColors () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getBossTextColor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getBossTextColor", "(I)I", "")]
		public static unsafe int GetBossTextColor (int color)
		{
			const string __id = "getBossTextColor.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (color);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getCustomColors' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("getCustomColors", "(Ljava/lang/String;II)Lnet/optifine/CustomColormap;", "")]
		public static unsafe global::Net.Optifine.CustomColormap? GetCustomColors (string? pathImage, int width, int height)
		{
			const string __id = "getCustomColors.(Ljava/lang/String;II)Lnet/optifine/CustomColormap;";
			IntPtr native_pathImage = JNIEnv.NewString ((string?)pathImage);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_pathImage);
				__args [1] = new JniArgumentValue (width);
				__args [2] = new JniArgumentValue (height);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.CustomColormap> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_pathImage);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getDurabilityColor' and count(parameter)=2 and parameter[1][@type='float'] and parameter[2][@type='int']]"
		[Register ("getDurabilityColor", "(FI)I", "")]
		public static unsafe int GetDurabilityColor (float dur, int color)
		{
			const string __id = "getDurabilityColor.(FI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (dur);
				__args [1] = new JniArgumentValue (color);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getExpBarTextColor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getExpBarTextColor", "(I)I", "")]
		public static unsafe int GetExpBarTextColor (int color)
		{
			const string __id = "getExpBarTextColor.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (color);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getPotionColor' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("getPotionColor", "(II)I", "")]
		public static unsafe int GetPotionColor (int potionId, int color)
		{
			const string __id = "getPotionColor.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (potionId);
				__args [1] = new JniArgumentValue (color);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getSignTextColor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getSignTextColor", "(I)I", "")]
		public static unsafe int GetSignTextColor (int color)
		{
			const string __id = "getSignTextColor.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (color);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getTextColor' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("getTextColor", "(II)I", "")]
		public static unsafe int GetTextColor (int index, int color)
		{
			const string __id = "getTextColor.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (index);
				__args [1] = new JniArgumentValue (color);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getXpOrbColor' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("getXpOrbColor", "(F)I", "")]
		public static unsafe int GetXpOrbColor (float timer)
		{
			const string __id = "getXpOrbColor.(F)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (timer);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='getXpOrbTimer' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("getXpOrbTimer", "(F)F", "")]
		public static unsafe float GetXpOrbTimer (float timer)
		{
			const string __id = "getXpOrbTimer.(F)F";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (timer);
				var __rm = _members.StaticMethods.InvokeSingleMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='update' and count(parameter)=0]"
		[Register ("update", "()V", "")]
		public static unsafe void Update ()
		{
			const string __id = "update.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='CustomColors']/method[@name='updateUseDefaultGrassFoliageColors' and count(parameter)=0]"
		[Register ("updateUseDefaultGrassFoliageColors", "()V", "")]
		public static unsafe void UpdateUseDefaultGrassFoliageColors ()
		{
			const string __id = "updateUseDefaultGrassFoliageColors.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

	}
}

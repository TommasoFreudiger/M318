//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Reflect {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorConstructor']"
	[global::Android.Runtime.Register ("net/optifine/reflect/ReflectorConstructor", DoNotGenerateAcw=true)]
	public partial class ReflectorConstructor : global::Java.Lang.Object, global::Net.Optifine.Reflect.IResolvable {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/reflect/ReflectorConstructor", typeof (ReflectorConstructor));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ReflectorConstructor (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorConstructor']/constructor[@name='ReflectorConstructor' and count(parameter)=2 and parameter[1][@type='net.optifine.reflect.ReflectorClass'] and parameter[2][@type='java.lang.Class[]']]"
		[Register (".ctor", "(Lnet/optifine/reflect/ReflectorClass;[Ljava/lang/Class;)V", "")]
		public unsafe ReflectorConstructor (global::Net.Optifine.Reflect.ReflectorClass? reflectorClass, global::Java.Lang.Class[]? parameterTypes) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/reflect/ReflectorClass;[Ljava/lang/Class;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_parameterTypes = JNIEnv.NewArray (parameterTypes);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((reflectorClass == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reflectorClass).Handle);
				__args [1] = new JniArgumentValue (native_parameterTypes);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (parameterTypes != null) {
					JNIEnv.CopyArray (native_parameterTypes, parameterTypes);
					JNIEnv.DeleteLocalRef (native_parameterTypes);
				}
				global::System.GC.KeepAlive (reflectorClass);
				global::System.GC.KeepAlive (parameterTypes);
			}
		}

		static Delegate? cb_getTargetConstructor;
#pragma warning disable 0169
		static Delegate GetGetTargetConstructorHandler ()
		{
			if (cb_getTargetConstructor == null)
				cb_getTargetConstructor = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetTargetConstructor));
			return cb_getTargetConstructor;
		}

		static IntPtr n_GetTargetConstructor (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorConstructor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.TargetConstructor);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Reflect.Constructor? TargetConstructor {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorConstructor']/method[@name='getTargetConstructor' and count(parameter)=0]"
			[Register ("getTargetConstructor", "()Ljava/lang/reflect/Constructor;", "GetGetTargetConstructorHandler")]
			get {
				const string __id = "getTargetConstructor.()Ljava/lang/reflect/Constructor;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Reflect.Constructor> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_deactivate;
#pragma warning disable 0169
		static Delegate GetDeactivateHandler ()
		{
			if (cb_deactivate == null)
				cb_deactivate = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Deactivate));
			return cb_deactivate;
		}

		static void n_Deactivate (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorConstructor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Deactivate ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorConstructor']/method[@name='deactivate' and count(parameter)=0]"
		[Register ("deactivate", "()V", "GetDeactivateHandler")]
		public virtual unsafe void Deactivate ()
		{
			const string __id = "deactivate.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_exists;
#pragma warning disable 0169
		static Delegate GetExistsHandler ()
		{
			if (cb_exists == null)
				cb_exists = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_Exists));
			return cb_exists;
		}

		static bool n_Exists (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorConstructor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Exists ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorConstructor']/method[@name='exists' and count(parameter)=0]"
		[Register ("exists", "()Z", "GetExistsHandler")]
		public virtual unsafe bool Exists ()
		{
			const string __id = "exists.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_newInstance_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetNewInstance_arrayLjava_lang_Object_Handler ()
		{
			if (cb_newInstance_arrayLjava_lang_Object_ == null)
				cb_newInstance_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_NewInstance_arrayLjava_lang_Object_));
			return cb_newInstance_arrayLjava_lang_Object_;
		}

		static IntPtr n_NewInstance_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native__params)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorConstructor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var @params = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native__params, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.NewInstance (@params));
			if (@params != null)
				JNIEnv.CopyArray (@params, native__params);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorConstructor']/method[@name='newInstance' and count(parameter)=1 and parameter[1][@type='java.lang.Object...']]"
		[Register ("newInstance", "([Ljava/lang/Object;)Ljava/lang/Object;", "GetNewInstance_arrayLjava_lang_Object_Handler")]
		public virtual unsafe global::Java.Lang.Object? NewInstance (params global::Java.Lang.Object[]? @params)
		{
			const string __id = "newInstance.([Ljava/lang/Object;)Ljava/lang/Object;";
			IntPtr native__params = JNIEnv.NewArray (@params);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native__params);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (@params != null) {
					JNIEnv.CopyArray (native__params, @params);
					JNIEnv.DeleteLocalRef (native__params);
				}
				global::System.GC.KeepAlive (@params);
			}
		}

		static Delegate? cb_resolve;
#pragma warning disable 0169
		static Delegate GetResolveHandler ()
		{
			if (cb_resolve == null)
				cb_resolve = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resolve));
			return cb_resolve;
		}

		static void n_Resolve (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorConstructor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Resolve ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorConstructor']/method[@name='resolve' and count(parameter)=0]"
		[Register ("resolve", "()V", "GetResolveHandler")]
		public virtual unsafe void Resolve ()
		{
			const string __id = "resolve.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}

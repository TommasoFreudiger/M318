//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Override {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.override']/class[@name='ChunkCacheOF']"
	[global::Android.Runtime.Register ("net/optifine/override/ChunkCacheOF", DoNotGenerateAcw=true)]
	public partial class ChunkCacheOF : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/override/ChunkCacheOF", typeof (ChunkCacheOF));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ChunkCacheOF (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		static Delegate? cb_getHeight;
#pragma warning disable 0169
		static Delegate GetGetHeightHandler ()
		{
			if (cb_getHeight == null)
				cb_getHeight = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetHeight));
			return cb_getHeight;
		}

		static int n_GetHeight (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Override.ChunkCacheOF> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Height;
		}
#pragma warning restore 0169

		public virtual unsafe int Height {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.override']/class[@name='ChunkCacheOF']/method[@name='getHeight' and count(parameter)=0]"
			[Register ("getHeight", "()I", "GetGetHeightHandler")]
			get {
				const string __id = "getHeight.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getMinBuildHeight;
#pragma warning disable 0169
		static Delegate GetGetMinBuildHeightHandler ()
		{
			if (cb_getMinBuildHeight == null)
				cb_getMinBuildHeight = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetMinBuildHeight));
			return cb_getMinBuildHeight;
		}

		static int n_GetMinBuildHeight (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Override.ChunkCacheOF> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.MinBuildHeight;
		}
#pragma warning restore 0169

		public virtual unsafe int MinBuildHeight {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.override']/class[@name='ChunkCacheOF']/method[@name='getMinBuildHeight' and count(parameter)=0]"
			[Register ("getMinBuildHeight", "()I", "GetGetMinBuildHeightHandler")]
			get {
				const string __id = "getMinBuildHeight.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getRenderEnv;
#pragma warning disable 0169
		static Delegate GetGetRenderEnvHandler ()
		{
			if (cb_getRenderEnv == null)
				cb_getRenderEnv = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetRenderEnv));
			return cb_getRenderEnv;
		}

		static IntPtr n_GetRenderEnv (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Override.ChunkCacheOF> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.RenderEnv);
		}
#pragma warning restore 0169

		static Delegate? cb_setRenderEnv_Lnet_optifine_render_RenderEnv_;
#pragma warning disable 0169
		static Delegate GetSetRenderEnv_Lnet_optifine_render_RenderEnv_Handler ()
		{
			if (cb_setRenderEnv_Lnet_optifine_render_RenderEnv_ == null)
				cb_setRenderEnv_Lnet_optifine_render_RenderEnv_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetRenderEnv_Lnet_optifine_render_RenderEnv_));
			return cb_setRenderEnv_Lnet_optifine_render_RenderEnv_;
		}

		static void n_SetRenderEnv_Lnet_optifine_render_RenderEnv_ (IntPtr jnienv, IntPtr native__this, IntPtr native_renderEnv)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Override.ChunkCacheOF> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var renderEnv = global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.RenderEnv> (native_renderEnv, JniHandleOwnership.DoNotTransfer);
			__this.RenderEnv = renderEnv;
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Render.RenderEnv? RenderEnv {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.override']/class[@name='ChunkCacheOF']/method[@name='getRenderEnv' and count(parameter)=0]"
			[Register ("getRenderEnv", "()Lnet/optifine/render/RenderEnv;", "GetGetRenderEnvHandler")]
			get {
				const string __id = "getRenderEnv.()Lnet/optifine/render/RenderEnv;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Render.RenderEnv> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.override']/class[@name='ChunkCacheOF']/method[@name='setRenderEnv' and count(parameter)=1 and parameter[1][@type='net.optifine.render.RenderEnv']]"
			[Register ("setRenderEnv", "(Lnet/optifine/render/RenderEnv;)V", "GetSetRenderEnv_Lnet_optifine_render_RenderEnv_Handler")]
			set {
				const string __id = "setRenderEnv.(Lnet/optifine/render/RenderEnv;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate? cb_renderFinish;
#pragma warning disable 0169
		static Delegate GetRenderFinishHandler ()
		{
			if (cb_renderFinish == null)
				cb_renderFinish = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_RenderFinish));
			return cb_renderFinish;
		}

		static void n_RenderFinish (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Override.ChunkCacheOF> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.RenderFinish ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.override']/class[@name='ChunkCacheOF']/method[@name='renderFinish' and count(parameter)=0]"
		[Register ("renderFinish", "()V", "GetRenderFinishHandler")]
		public virtual unsafe void RenderFinish ()
		{
			const string __id = "renderFinish.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_renderStart;
#pragma warning disable 0169
		static Delegate GetRenderStartHandler ()
		{
			if (cb_renderStart == null)
				cb_renderStart = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_RenderStart));
			return cb_renderStart;
		}

		static void n_RenderStart (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Override.ChunkCacheOF> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.RenderStart ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.override']/class[@name='ChunkCacheOF']/method[@name='renderStart' and count(parameter)=0]"
		[Register ("renderStart", "()V", "GetRenderStartHandler")]
		public virtual unsafe void RenderStart ()
		{
			const string __id = "renderStart.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}

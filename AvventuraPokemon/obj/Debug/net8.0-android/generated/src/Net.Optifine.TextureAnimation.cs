//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']"
	[global::Android.Runtime.Register ("net/optifine/TextureAnimation", DoNotGenerateAcw=true)]
	public partial class TextureAnimation : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/TextureAnimation", typeof (TextureAnimation));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected TextureAnimation (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		static Delegate? cb_getCurrentFrame;
#pragma warning disable 0169
		static Delegate GetGetCurrentFrameHandler ()
		{
			if (cb_getCurrentFrame == null)
				cb_getCurrentFrame = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetCurrentFrame));
			return cb_getCurrentFrame;
		}

		static IntPtr n_GetCurrentFrame (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.CurrentFrame);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.TextureAnimationFrame? CurrentFrame {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='getCurrentFrame' and count(parameter)=0]"
			[Register ("getCurrentFrame", "()Lnet/optifine/TextureAnimationFrame;", "GetGetCurrentFrameHandler")]
			get {
				const string __id = "getCurrentFrame.()Lnet/optifine/TextureAnimationFrame;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimationFrame> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getDstTex;
#pragma warning disable 0169
		static Delegate GetGetDstTexHandler ()
		{
			if (cb_getDstTex == null)
				cb_getDstTex = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDstTex));
			return cb_getDstTex;
		}

		static IntPtr n_GetDstTex (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.DstTex);
		}
#pragma warning restore 0169

		public virtual unsafe string? DstTex {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='getDstTex' and count(parameter)=0]"
			[Register ("getDstTex", "()Ljava/lang/String;", "GetGetDstTexHandler")]
			get {
				const string __id = "getDstTex.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getFrameCount;
#pragma warning disable 0169
		static Delegate GetGetFrameCountHandler ()
		{
			if (cb_getFrameCount == null)
				cb_getFrameCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetFrameCount));
			return cb_getFrameCount;
		}

		static int n_GetFrameCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.FrameCount;
		}
#pragma warning restore 0169

		public virtual unsafe int FrameCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='getFrameCount' and count(parameter)=0]"
			[Register ("getFrameCount", "()I", "GetGetFrameCountHandler")]
			get {
				const string __id = "getFrameCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isActive;
#pragma warning disable 0169
		static Delegate GetIsActiveHandler ()
		{
			if (cb_isActive == null)
				cb_isActive = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsActive));
			return cb_isActive;
		}

		static bool n_IsActive (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsActive;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsActive {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='isActive' and count(parameter)=0]"
			[Register ("isActive", "()Z", "GetIsActiveHandler")]
			get {
				const string __id = "isActive.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getSrcTex;
#pragma warning disable 0169
		static Delegate GetGetSrcTexHandler ()
		{
			if (cb_getSrcTex == null)
				cb_getSrcTex = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetSrcTex));
			return cb_getSrcTex;
		}

		static IntPtr n_GetSrcTex (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.SrcTex);
		}
#pragma warning restore 0169

		public virtual unsafe string? SrcTex {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='getSrcTex' and count(parameter)=0]"
			[Register ("getSrcTex", "()Ljava/lang/String;", "GetGetSrcTexHandler")]
			get {
				const string __id = "getSrcTex.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getFrame_I;
#pragma warning disable 0169
		static Delegate GetGetFrame_IHandler ()
		{
			if (cb_getFrame_I == null)
				cb_getFrame_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_GetFrame_I));
			return cb_getFrame_I;
		}

		static IntPtr n_GetFrame_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.GetFrame (index));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='getFrame' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getFrame", "(I)Lnet/optifine/TextureAnimationFrame;", "GetGetFrame_IHandler")]
		public virtual unsafe global::Net.Optifine.TextureAnimationFrame? GetFrame (int index)
		{
			const string __id = "getFrame.(I)Lnet/optifine/TextureAnimationFrame;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimationFrame> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nextFrame;
#pragma warning disable 0169
		static Delegate GetNextFrameHandler ()
		{
			if (cb_nextFrame == null)
				cb_nextFrame = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_NextFrame));
			return cb_nextFrame;
		}

		static bool n_NextFrame (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NextFrame ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='nextFrame' and count(parameter)=0]"
		[Register ("nextFrame", "()Z", "GetNextFrameHandler")]
		public virtual unsafe bool NextFrame ()
		{
			const string __id = "nextFrame.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_updateTexture;
#pragma warning disable 0169
		static Delegate GetUpdateTextureHandler ()
		{
			if (cb_updateTexture == null)
				cb_updateTexture = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_UpdateTexture));
			return cb_updateTexture;
		}

		static void n_UpdateTexture (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.TextureAnimation> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.UpdateTexture ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine']/class[@name='TextureAnimation']/method[@name='updateTexture' and count(parameter)=0]"
		[Register ("updateTexture", "()V", "GetUpdateTextureHandler")]
		public virtual unsafe void UpdateTexture ()
		{
			const string __id = "updateTexture.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Minecraftforge.Client.Model {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']"
	[global::Android.Runtime.Register ("net/minecraftforge/client/model/ForgeFaceData", DoNotGenerateAcw=true)]
	public sealed partial class ForgeFaceData : global::Java.Lang.Record {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/field[@name='DEFAULT']"
		[Register ("DEFAULT")]
		public static global::Net.Minecraftforge.Client.Model.ForgeFaceData? Default {
			get {
				const string __id = "DEFAULT.Lnet/minecraftforge/client/model/ForgeFaceData;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Client.Model.ForgeFaceData> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/client/model/ForgeFaceData", typeof (ForgeFaceData));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal ForgeFaceData (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/constructor[@name='ForgeFaceData' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='boolean']]"
		[Register (".ctor", "(IIIZ)V", "")]
		public unsafe ForgeFaceData (int color, int blockLight, int skyLight, bool ambientOcclusion) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(IIIZ)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (color);
				__args [1] = new JniArgumentValue (blockLight);
				__args [2] = new JniArgumentValue (skyLight);
				__args [3] = new JniArgumentValue (ambientOcclusion);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/method[@name='ambientOcclusion' and count(parameter)=0]"
		[Register ("ambientOcclusion", "()Z", "")]
		public unsafe bool AmbientOcclusion ()
		{
			const string __id = "ambientOcclusion.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeAbstractBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/method[@name='blockLight' and count(parameter)=0]"
		[Register ("blockLight", "()I", "")]
		public unsafe int BlockLight ()
		{
			const string __id = "blockLight.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeAbstractInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/method[@name='color' and count(parameter)=0]"
		[Register ("color", "()I", "")]
		public unsafe int Color ()
		{
			const string __id = "color.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeAbstractInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/method[@name='equals' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
		[Register ("equals", "(Ljava/lang/Object;)Z", "")]
		public override sealed unsafe bool Equals (global::Java.Lang.Object? o)
		{
			const string __id = "equals.(Ljava/lang/Object;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((o == null) ? IntPtr.Zero : ((global::Java.Lang.Object) o).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (o);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/method[@name='hashCode' and count(parameter)=0]"
		[Register ("hashCode", "()I", "")]
		public override sealed unsafe int GetHashCode ()
		{
			const string __id = "hashCode.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/method[@name='skyLight' and count(parameter)=0]"
		[Register ("skyLight", "()I", "")]
		public unsafe int SkyLight ()
		{
			const string __id = "skyLight.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeAbstractInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.client.model']/class[@name='ForgeFaceData']/method[@name='toString' and count(parameter)=0]"
		[Register ("toString", "()Ljava/lang/String;", "")]
		public override sealed unsafe string? ToString ()
		{
			const string __id = "toString.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}

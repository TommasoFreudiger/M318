//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Expr {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']"
	[global::Android.Runtime.Register ("net/optifine/expr/TokenType", DoNotGenerateAcw=true)]
	public sealed partial class TokenType : global::Java.Lang.Enum {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/field[@name='BRACKET_CLOSE']"
		[Register ("BRACKET_CLOSE")]
		public static global::Net.Optifine.Expr.TokenType? BracketClose {
			get {
				const string __id = "BRACKET_CLOSE.Lnet/optifine/expr/TokenType;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/field[@name='BRACKET_OPEN']"
		[Register ("BRACKET_OPEN")]
		public static global::Net.Optifine.Expr.TokenType? BracketOpen {
			get {
				const string __id = "BRACKET_OPEN.Lnet/optifine/expr/TokenType;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/field[@name='COMMA']"
		[Register ("COMMA")]
		public static global::Net.Optifine.Expr.TokenType? Comma {
			get {
				const string __id = "COMMA.Lnet/optifine/expr/TokenType;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/field[@name='IDENTIFIER']"
		[Register ("IDENTIFIER")]
		public static global::Net.Optifine.Expr.TokenType? Identifier {
			get {
				const string __id = "IDENTIFIER.Lnet/optifine/expr/TokenType;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/field[@name='NUMBER']"
		[Register ("NUMBER")]
		public static global::Net.Optifine.Expr.TokenType? Number {
			get {
				const string __id = "NUMBER.Lnet/optifine/expr/TokenType;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/field[@name='OPERATOR']"
		[Register ("OPERATOR")]
		public static global::Net.Optifine.Expr.TokenType? Operator {
			get {
				const string __id = "OPERATOR.Lnet/optifine/expr/TokenType;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/expr/TokenType", typeof (TokenType));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal TokenType (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		public unsafe string? CharsFirst {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/method[@name='getCharsFirst' and count(parameter)=0]"
			[Register ("getCharsFirst", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getCharsFirst.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe string? CharsNext {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/method[@name='getCharsNext' and count(parameter)=0]"
			[Register ("getCharsNext", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getCharsNext.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/method[@name='getTypeByFirstChar' and count(parameter)=1 and parameter[1][@type='char']]"
		[Register ("getTypeByFirstChar", "(C)Lnet/optifine/expr/TokenType;", "")]
		public static unsafe global::Net.Optifine.Expr.TokenType? GetTypeByFirstChar (char ch)
		{
			const string __id = "getTypeByFirstChar.(C)Lnet/optifine/expr/TokenType;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (ch);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/method[@name='hasCharNext' and count(parameter)=1 and parameter[1][@type='char']]"
		[Register ("hasCharNext", "(C)Z", "")]
		public unsafe bool HasCharNext (char ch)
		{
			const string __id = "hasCharNext.(C)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (ch);
				var __rm = _members.InstanceMethods.InvokeAbstractBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("valueOf", "(Ljava/lang/String;)Lnet/optifine/expr/TokenType;", "")]
		public static unsafe global::Net.Optifine.Expr.TokenType? ValueOf (string? name)
		{
			const string __id = "valueOf.(Ljava/lang/String;)Lnet/optifine/expr/TokenType;";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.TokenType> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.expr']/class[@name='TokenType']/method[@name='values' and count(parameter)=0]"
		[Register ("values", "()[Lnet/optifine/expr/TokenType;", "")]
		public static unsafe global::Net.Optifine.Expr.TokenType[]? Values ()
		{
			const string __id = "values.()[Lnet/optifine/expr/TokenType;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (global::Net.Optifine.Expr.TokenType[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Optifine.Expr.TokenType));
			} finally {
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.config']/class[@name='Matches']"
	[global::Android.Runtime.Register ("net/optifine/config/Matches", DoNotGenerateAcw=true)]
	public partial class Matches : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/config/Matches", typeof (Matches));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Matches (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.config']/class[@name='Matches']/constructor[@name='Matches' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Matches () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='Matches']/method[@name='block' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='net.optifine.config.MatchBlock[]']]"
		[Register ("block", "(II[Lnet/optifine/config/MatchBlock;)Z", "")]
		public static unsafe bool Block (int blockId, int metadata, global::Net.Optifine.Config.MatchBlock[]? matchBlocks)
		{
			const string __id = "block.(II[Lnet/optifine/config/MatchBlock;)Z";
			IntPtr native_matchBlocks = JNIEnv.NewArray (matchBlocks);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (blockId);
				__args [1] = new JniArgumentValue (metadata);
				__args [2] = new JniArgumentValue (native_matchBlocks);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				if (matchBlocks != null) {
					JNIEnv.CopyArray (native_matchBlocks, matchBlocks);
					JNIEnv.DeleteLocalRef (native_matchBlocks);
				}
				global::System.GC.KeepAlive (matchBlocks);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='Matches']/method[@name='blockId' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='net.optifine.config.MatchBlock[]']]"
		[Register ("blockId", "(I[Lnet/optifine/config/MatchBlock;)Z", "")]
		public static unsafe bool BlockId (int blockId, global::Net.Optifine.Config.MatchBlock[]? matchBlocks)
		{
			const string __id = "blockId.(I[Lnet/optifine/config/MatchBlock;)Z";
			IntPtr native_matchBlocks = JNIEnv.NewArray (matchBlocks);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (blockId);
				__args [1] = new JniArgumentValue (native_matchBlocks);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				if (matchBlocks != null) {
					JNIEnv.CopyArray (native_matchBlocks, matchBlocks);
					JNIEnv.DeleteLocalRef (native_matchBlocks);
				}
				global::System.GC.KeepAlive (matchBlocks);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.config']/class[@name='Matches']/method[@name='metadata' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int[]']]"
		[Register ("metadata", "(I[I)Z", "")]
		public static unsafe bool Metadata (int metadata, int[]? metadatas)
		{
			const string __id = "metadata.(I[I)Z";
			IntPtr native_metadatas = JNIEnv.NewArray (metadatas);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (metadata);
				__args [1] = new JniArgumentValue (native_metadatas);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				if (metadatas != null) {
					JNIEnv.CopyArray (native_metadatas, metadatas);
					JNIEnv.DeleteLocalRef (native_metadatas);
				}
				global::System.GC.KeepAlive (metadatas);
			}
		}

	}
}

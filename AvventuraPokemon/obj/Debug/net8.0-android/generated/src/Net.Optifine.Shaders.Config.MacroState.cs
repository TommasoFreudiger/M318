//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='MacroState']"
	[global::Android.Runtime.Register ("net/optifine/shaders/config/MacroState", DoNotGenerateAcw=true)]
	public partial class MacroState : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='MacroState']/field[@name='PATTERN_DIRECTIVE']"
		[Register ("PATTERN_DIRECTIVE")]
		public static global::Java.Util.Regex.Pattern? PatternDirective {
			get {
				const string __id = "PATTERN_DIRECTIVE.Ljava/util/regex/Pattern;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Util.Regex.Pattern> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/config/MacroState", typeof (MacroState));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected MacroState (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='MacroState']/constructor[@name='MacroState' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe MacroState () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='MacroState']/method[@name='isMacroLine' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isMacroLine", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool IsMacroLine (string? line)
		{
			const string __id = "isMacroLine.(Ljava/lang/String;)Z";
			IntPtr native_line = JNIEnv.NewString ((string?)line);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_line);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_line);
			}
		}

		static Delegate? cb_processLine_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetProcessLine_Ljava_lang_String_Handler ()
		{
			if (cb_processLine_Ljava_lang_String_ == null)
				cb_processLine_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_ProcessLine_Ljava_lang_String_));
			return cb_processLine_Ljava_lang_String_;
		}

		static bool n_ProcessLine_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_line)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Config.MacroState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var line = JNIEnv.GetString (native_line, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.ProcessLine (line);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.config']/class[@name='MacroState']/method[@name='processLine' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("processLine", "(Ljava/lang/String;)Z", "GetProcessLine_Ljava_lang_String_Handler")]
		public virtual unsafe bool ProcessLine (string? line)
		{
			const string __id = "processLine.(Ljava/lang/String;)Z";
			IntPtr native_line = JNIEnv.NewString ((string?)line);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_line);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_line);
			}
		}

	}
}

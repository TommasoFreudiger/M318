//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Minecraftforge.Event.Entity.Living {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.event.entity.living']/class[@name='LivingChangeTargetEvent']"
	[global::Android.Runtime.Register ("net/minecraftforge/event/entity/living/LivingChangeTargetEvent", DoNotGenerateAcw=true)]
	public partial class LivingChangeTargetEvent : global::Net.Minecraftforge.Event.Entity.Living.LivingEvent {
		// Metadata.xml XPath class reference: path="/api/package[@name='net.minecraftforge.event.entity.living']/class[@name='LivingChangeTargetEvent.LivingTargetType']"
		[global::Android.Runtime.Register ("net/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType", DoNotGenerateAcw=true)]
		public sealed partial class LivingTargetType : global::Java.Lang.Enum, global::Net.Minecraftforge.Event.Entity.Living.ILivingTargetType {

			// Metadata.xml XPath field reference: path="/api/package[@name='net.minecraftforge.event.entity.living']/class[@name='LivingChangeTargetEvent.LivingTargetType']/field[@name='BEHAVIOR_TARGET']"
			[Register ("BEHAVIOR_TARGET")]
			public static global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType? BehaviorTarget {
				get {
					const string __id = "BEHAVIOR_TARGET.Lnet/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='net.minecraftforge.event.entity.living']/class[@name='LivingChangeTargetEvent.LivingTargetType']/field[@name='MOB_TARGET']"
			[Register ("MOB_TARGET")]
			public static global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType? MobTarget {
				get {
					const string __id = "MOB_TARGET.Lnet/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType", typeof (LivingTargetType));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal LivingTargetType (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.event.entity.living']/class[@name='LivingChangeTargetEvent.LivingTargetType']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("valueOf", "(Ljava/lang/String;)Lnet/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType;", "")]
			public static unsafe global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType? ValueOf (string? name)
			{
				const string __id = "valueOf.(Ljava/lang/String;)Lnet/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType;";
				IntPtr native_name = JNIEnv.NewString ((string?)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_name);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Lang.Object.GetObject<global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='net.minecraftforge.event.entity.living']/class[@name='LivingChangeTargetEvent.LivingTargetType']/method[@name='values' and count(parameter)=0]"
			[Register ("values", "()[Lnet/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType;", "")]
			public static unsafe global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType[]? Values ()
			{
				const string __id = "values.()[Lnet/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Net.Minecraftforge.Event.Entity.Living.LivingChangeTargetEvent.LivingTargetType));
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/minecraftforge/event/entity/living/LivingChangeTargetEvent", typeof (LivingChangeTargetEvent));

		internal static new IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected LivingChangeTargetEvent (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.minecraftforge.event.entity.living']/class[@name='LivingChangeTargetEvent']/constructor[@name='LivingChangeTargetEvent' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe LivingChangeTargetEvent () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Http {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineRequest']"
	[global::Android.Runtime.Register ("net/optifine/http/HttpPipelineRequest", DoNotGenerateAcw=true)]
	public partial class HttpPipelineRequest : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/http/HttpPipelineRequest", typeof (HttpPipelineRequest));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected HttpPipelineRequest (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineRequest']/constructor[@name='HttpPipelineRequest' and count(parameter)=2 and parameter[1][@type='net.optifine.http.HttpRequest'] and parameter[2][@type='net.optifine.http.HttpListener']]"
		[Register (".ctor", "(Lnet/optifine/http/HttpRequest;Lnet/optifine/http/HttpListener;)V", "")]
		public unsafe HttpPipelineRequest (global::Net.Optifine.Http.HttpRequest? httpRequest, global::Net.Optifine.Http.IHttpListener? httpListener) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lnet/optifine/http/HttpRequest;Lnet/optifine/http/HttpListener;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((httpRequest == null) ? IntPtr.Zero : ((global::Java.Lang.Object) httpRequest).Handle);
				__args [1] = new JniArgumentValue ((httpListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) httpListener).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (httpRequest);
				global::System.GC.KeepAlive (httpListener);
			}
		}

		static Delegate? cb_isClosed;
#pragma warning disable 0169
		static Delegate GetIsClosedHandler ()
		{
			if (cb_isClosed == null)
				cb_isClosed = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsClosed));
			return cb_isClosed;
		}

		static bool n_IsClosed (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Closed;
		}
#pragma warning restore 0169

		static Delegate? cb_setClosed_Z;
#pragma warning disable 0169
		static Delegate GetSetClosed_ZHandler ()
		{
			if (cb_setClosed_Z == null)
				cb_setClosed_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetClosed_Z));
			return cb_setClosed_Z;
		}

		static void n_SetClosed_Z (IntPtr jnienv, IntPtr native__this, bool closed)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Closed = closed;
		}
#pragma warning restore 0169

		public virtual unsafe bool Closed {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineRequest']/method[@name='isClosed' and count(parameter)=0]"
			[Register ("isClosed", "()Z", "GetIsClosedHandler")]
			get {
				const string __id = "isClosed.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineRequest']/method[@name='setClosed' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setClosed", "(Z)V", "GetSetClosed_ZHandler")]
			set {
				const string __id = "setClosed.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getHttpListener;
#pragma warning disable 0169
		static Delegate GetGetHttpListenerHandler ()
		{
			if (cb_getHttpListener == null)
				cb_getHttpListener = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHttpListener));
			return cb_getHttpListener;
		}

		static IntPtr n_GetHttpListener (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.HttpListener);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Http.IHttpListener? HttpListener {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineRequest']/method[@name='getHttpListener' and count(parameter)=0]"
			[Register ("getHttpListener", "()Lnet/optifine/http/HttpListener;", "GetGetHttpListenerHandler")]
			get {
				const string __id = "getHttpListener.()Lnet/optifine/http/HttpListener;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.IHttpListener> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getHttpRequest;
#pragma warning disable 0169
		static Delegate GetGetHttpRequestHandler ()
		{
			if (cb_getHttpRequest == null)
				cb_getHttpRequest = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHttpRequest));
			return cb_getHttpRequest;
		}

		static IntPtr n_GetHttpRequest (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.HttpRequest);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Http.HttpRequest? HttpRequest {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineRequest']/method[@name='getHttpRequest' and count(parameter)=0]"
			[Register ("getHttpRequest", "()Lnet/optifine/http/HttpRequest;", "GetGetHttpRequestHandler")]
			get {
				const string __id = "getHttpRequest.()Lnet/optifine/http/HttpRequest;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpRequest> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

	}
}

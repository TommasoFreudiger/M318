//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Optifine {

	// Metadata.xml XPath class reference: path="/api/package[@name='optifine']/class[@name='Installer']"
	[global::Android.Runtime.Register ("optifine/Installer", DoNotGenerateAcw=true)]
	public partial class Installer : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("optifine/Installer", typeof (Installer));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Installer (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='optifine']/class[@name='Installer']/constructor[@name='Installer' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Installer () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe bool IsPatchFile {
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='isPatchFile' and count(parameter)=0]"
			[Register ("isPatchFile", "()Z", "")]
			get {
				const string __id = "isPatchFile.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe string? OptiFineVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='getOptiFineVersion' and count(parameter)=0]"
			[Register ("getOptiFineVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getOptiFineVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::Java.IO.File? OptiFineZipFile {
			// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='getOptiFineZipFile' and count(parameter)=0]"
			[Register ("getOptiFineZipFile", "()Ljava/io/File;", "")]
			get {
				const string __id = "getOptiFineZipFile.()Ljava/io/File;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Java.IO.File> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='doExtract' and count(parameter)=1 and parameter[1][@type='java.io.File']]"
		[Register ("doExtract", "(Ljava/io/File;)Z", "")]
		public static unsafe bool DoExtract (global::Java.IO.File? dirMc)
		{
			const string __id = "doExtract.(Ljava/io/File;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((dirMc == null) ? IntPtr.Zero : ((global::Java.Lang.Object) dirMc).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (dirMc);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='doInstall' and count(parameter)=1 and parameter[1][@type='java.io.File']]"
		[Register ("doInstall", "(Ljava/io/File;)V", "")]
		public static unsafe void DoInstall (global::Java.IO.File? dirMc)
		{
			const string __id = "doInstall.(Ljava/io/File;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((dirMc == null) ? IntPtr.Zero : ((global::Java.Lang.Object) dirMc).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (dirMc);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='getMinecraftVersionFromOfVersion' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getMinecraftVersionFromOfVersion", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? GetMinecraftVersionFromOfVersion (string? ofVer)
		{
			const string __id = "getMinecraftVersionFromOfVersion.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_ofVer = JNIEnv.NewString ((string?)ofVer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ofVer);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_ofVer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='getOptiFineEdition' and count(parameter)=1 and parameter[1][@type='java.lang.String[]']]"
		[Register ("getOptiFineEdition", "([Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? GetOptiFineEdition (string[]? ofVers)
		{
			const string __id = "getOptiFineEdition.([Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_ofVers = JNIEnv.NewArray (ofVers);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ofVers);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (ofVers != null) {
					JNIEnv.CopyArray (native_ofVers, ofVers);
					JNIEnv.DeleteLocalRef (native_ofVers);
				}
				global::System.GC.KeepAlive (ofVers);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='getOptiFineVersion' and count(parameter)=1 and parameter[1][@type='java.io.InputStream']]"
		[Register ("getOptiFineVersion", "(Ljava/io/InputStream;)Ljava/lang/String;", "")]
		public static unsafe string? GetOptiFineVersion (global::System.IO.Stream? @in)
		{
			const string __id = "getOptiFineVersion.(Ljava/io/InputStream;)Ljava/lang/String;";
			IntPtr native__in = global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (@in);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native__in);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native__in);
				global::System.GC.KeepAlive (@in);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='getOptiFineVersion' and count(parameter)=1 and parameter[1][@type='java.util.zip.ZipFile']]"
		[Register ("getOptiFineVersion", "(Ljava/util/zip/ZipFile;)Ljava/lang/String;", "")]
		public static unsafe string? GetOptiFineVersion (global::Java.Util.Zip.ZipFile? zipFile)
		{
			const string __id = "getOptiFineVersion.(Ljava/util/zip/ZipFile;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((zipFile == null) ? IntPtr.Zero : ((global::Java.Lang.Object) zipFile).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (zipFile);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='optifine']/class[@name='Installer']/method[@name='main' and count(parameter)=1 and parameter[1][@type='java.lang.String[]']]"
		[Register ("main", "([Ljava/lang/String;)V", "")]
		public static unsafe void Main (string[]? args)
		{
			const string __id = "main.([Ljava/lang/String;)V";
			IntPtr native_args = JNIEnv.NewArray (args);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_args);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (args != null) {
					JNIEnv.CopyArray (native_args, args);
					JNIEnv.DeleteLocalRef (native_args);
				}
				global::System.GC.KeepAlive (args);
			}
		}

	}
}

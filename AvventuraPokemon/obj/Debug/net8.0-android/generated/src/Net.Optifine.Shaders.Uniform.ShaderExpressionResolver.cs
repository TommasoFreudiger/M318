//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders.Uniform {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders.uniform']/class[@name='ShaderExpressionResolver']"
	[global::Android.Runtime.Register ("net/optifine/shaders/uniform/ShaderExpressionResolver", DoNotGenerateAcw=true)]
	public partial class ShaderExpressionResolver : global::Java.Lang.Object, global::Net.Optifine.Expr.IExpressionResolver {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/uniform/ShaderExpressionResolver", typeof (ShaderExpressionResolver));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ShaderExpressionResolver (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders.uniform']/class[@name='ShaderExpressionResolver']/constructor[@name='ShaderExpressionResolver' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, net.optifine.expr.IExpression&gt;']]"
		[Register (".ctor", "(Ljava/util/Map;)V", "")]
		public unsafe ShaderExpressionResolver (global::System.Collections.Generic.IDictionary<string, global::Net.Optifine.Expr.IExpression>? map) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/util/Map;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_map = global::Android.Runtime.JavaDictionary<string, global::Net.Optifine.Expr.IExpression>.ToLocalJniHandle (map);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_map);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_map);
				global::System.GC.KeepAlive (map);
			}
		}

		static Delegate? cb_getExpression_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetGetExpression_Ljava_lang_String_Handler ()
		{
			if (cb_getExpression_Ljava_lang_String_ == null)
				cb_getExpression_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetExpression_Ljava_lang_String_));
			return cb_getExpression_Ljava_lang_String_;
		}

		static IntPtr n_GetExpression_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Uniform.ShaderExpressionResolver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetExpression (name));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.uniform']/class[@name='ShaderExpressionResolver']/method[@name='getExpression' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getExpression", "(Ljava/lang/String;)Lnet/optifine/expr/IExpression;", "GetGetExpression_Ljava_lang_String_Handler")]
		public virtual unsafe global::Net.Optifine.Expr.IExpression? GetExpression (string? name)
		{
			const string __id = "getExpression.(Ljava/lang/String;)Lnet/optifine/expr/IExpression;";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.IExpression> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_hasExpression_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetHasExpression_Ljava_lang_String_Handler ()
		{
			if (cb_hasExpression_Ljava_lang_String_ == null)
				cb_hasExpression_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_HasExpression_Ljava_lang_String_));
			return cb_hasExpression_Ljava_lang_String_;
		}

		static bool n_HasExpression_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Uniform.ShaderExpressionResolver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.HasExpression (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.uniform']/class[@name='ShaderExpressionResolver']/method[@name='hasExpression' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("hasExpression", "(Ljava/lang/String;)Z", "GetHasExpression_Ljava_lang_String_Handler")]
		public virtual unsafe bool HasExpression (string? name)
		{
			const string __id = "hasExpression.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_registerExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_;
#pragma warning disable 0169
		static Delegate GetRegisterExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_Handler ()
		{
			if (cb_registerExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_ == null)
				cb_registerExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_RegisterExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_));
			return cb_registerExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_;
		}

		static bool n_RegisterExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name, IntPtr native_expr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.Uniform.ShaderExpressionResolver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			var expr = (global::Net.Optifine.Expr.IExpression?)global::Java.Lang.Object.GetObject<global::Net.Optifine.Expr.IExpression> (native_expr, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.RegisterExpression (name, expr);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders.uniform']/class[@name='ShaderExpressionResolver']/method[@name='registerExpression' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='net.optifine.expr.IExpression']]"
		[Register ("registerExpression", "(Ljava/lang/String;Lnet/optifine/expr/IExpression;)Z", "GetRegisterExpression_Ljava_lang_String_Lnet_optifine_expr_IExpression_Handler")]
		public virtual unsafe bool RegisterExpression (string? name, global::Net.Optifine.Expr.IExpression? expr)
		{
			const string __id = "registerExpression.(Ljava/lang/String;Lnet/optifine/expr/IExpression;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue ((expr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) expr).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				global::System.GC.KeepAlive (expr);
			}
		}

	}
}

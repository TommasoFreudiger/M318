//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Util {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache']"
	[global::Android.Runtime.Register ("net/optifine/util/IntExpiringCache", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
	public abstract partial class IntExpiringCache : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache.Wrapper']"
		[global::Android.Runtime.Register ("net/optifine/util/IntExpiringCache$Wrapper", DoNotGenerateAcw=true)]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public partial class Wrapper : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/util/IntExpiringCache$Wrapper", typeof (Wrapper));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected Wrapper (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache.Wrapper']/constructor[@name='IntExpiringCache.Wrapper' and count(parameter)=1 and parameter[1][@type='T']]"
			[Register (".ctor", "(Ljava/lang/Object;)V", "")]
			public unsafe Wrapper (global::Java.Lang.Object? value) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/Object;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_value = JNIEnv.ToLocalJniHandle (value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
					global::System.GC.KeepAlive (value);
				}
			}

			static Delegate? cb_getAccessTimeMs;
#pragma warning disable 0169
			static Delegate GetGetAccessTimeMsHandler ()
			{
				if (cb_getAccessTimeMs == null)
					cb_getAccessTimeMs = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_GetAccessTimeMs));
				return cb_getAccessTimeMs;
			}

			static long n_GetAccessTimeMs (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntExpiringCache.Wrapper> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.AccessTimeMs;
			}
#pragma warning restore 0169

			static Delegate? cb_setAccessTimeMs_J;
#pragma warning disable 0169
			static Delegate GetSetAccessTimeMs_JHandler ()
			{
				if (cb_setAccessTimeMs_J == null)
					cb_setAccessTimeMs_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_V (n_SetAccessTimeMs_J));
				return cb_setAccessTimeMs_J;
			}

			static void n_SetAccessTimeMs_J (IntPtr jnienv, IntPtr native__this, long accessTimeMs)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntExpiringCache.Wrapper> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.AccessTimeMs = accessTimeMs;
			}
#pragma warning restore 0169

			public virtual unsafe long AccessTimeMs {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache.Wrapper']/method[@name='getAccessTimeMs' and count(parameter)=0]"
				[Register ("getAccessTimeMs", "()J", "GetGetAccessTimeMsHandler")]
				get {
					const string __id = "getAccessTimeMs.()J";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
						return __rm;
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache.Wrapper']/method[@name='setAccessTimeMs' and count(parameter)=1 and parameter[1][@type='long']]"
				[Register ("setAccessTimeMs", "(J)V", "GetSetAccessTimeMs_JHandler")]
				set {
					const string __id = "setAccessTimeMs.(J)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue (value);
						_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
					} finally {
					}
				}
			}

			static Delegate? cb_getValue;
#pragma warning disable 0169
			static Delegate GetGetValueHandler ()
			{
				if (cb_getValue == null)
					cb_getValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetValue));
				return cb_getValue;
			}

			static IntPtr n_GetValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntExpiringCache.Wrapper> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.Value);
			}
#pragma warning restore 0169

			public virtual unsafe global::Java.Lang.Object? Value {
				// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache.Wrapper']/method[@name='getValue' and count(parameter)=0]"
				[Register ("getValue", "()Ljava/lang/Object;", "GetGetValueHandler")]
				get {
					const string __id = "getValue.()Ljava/lang/Object;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return (global::Java.Lang.Object?) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/util/IntExpiringCache", typeof (IntExpiringCache));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected IntExpiringCache (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache']/constructor[@name='IntExpiringCache' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register (".ctor", "(I)V", "")]
		public unsafe IntExpiringCache (int intervalMs) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (intervalMs);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_get_I;
#pragma warning disable 0169
		static Delegate GetGet_IHandler ()
		{
			if (cb_get_I == null)
				cb_get_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Get_I));
			return cb_get_I;
		}

		static IntPtr n_Get_I (IntPtr jnienv, IntPtr native__this, int key)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntExpiringCache> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Get (key));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache']/method[@name='get' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("get", "(I)Ljava/lang/Object;", "GetGet_IHandler")]
		public virtual unsafe global::Java.Lang.Object? Get (int key)
		{
			const string __id = "get.(I)Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (key);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object?) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_make;
#pragma warning disable 0169
		static Delegate GetMakeHandler ()
		{
			if (cb_make == null)
				cb_make = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Make));
			return cb_make;
		}

		static IntPtr n_Make (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.IntExpiringCache> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Make ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache']/method[@name='make' and count(parameter)=0]"
		[Register ("make", "()Ljava/lang/Object;", "GetMakeHandler")]
		protected abstract global::Java.Lang.Object? Make ();

	}

	[global::Android.Runtime.Register ("net/optifine/util/IntExpiringCache", DoNotGenerateAcw=true)]
	internal partial class IntExpiringCacheInvoker : IntExpiringCache {
		public IntExpiringCacheInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/util/IntExpiringCache", typeof (IntExpiringCacheInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='IntExpiringCache']/method[@name='make' and count(parameter)=0]"
		[Register ("make", "()Ljava/lang/Object;", "GetMakeHandler")]
		protected override unsafe global::Java.Lang.Object? Make ()
		{
			const string __id = "make.()Ljava/lang/Object;";
			try {
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, null);
				return (global::Java.Lang.Object?) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}

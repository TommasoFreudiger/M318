//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Util {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.util']/class[@name='LockCounter']"
	[global::Android.Runtime.Register ("net/optifine/util/LockCounter", DoNotGenerateAcw=true)]
	public partial class LockCounter : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/util/LockCounter", typeof (LockCounter));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected LockCounter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.util']/class[@name='LockCounter']/constructor[@name='LockCounter' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe LockCounter () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_isLocked;
#pragma warning disable 0169
		static Delegate GetIsLockedHandler ()
		{
			if (cb_isLocked == null)
				cb_isLocked = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsLocked));
			return cb_isLocked;
		}

		static bool n_IsLocked (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.LockCounter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsLocked;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsLocked {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='LockCounter']/method[@name='isLocked' and count(parameter)=0]"
			[Register ("isLocked", "()Z", "GetIsLockedHandler")]
			get {
				const string __id = "isLocked.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getLockCount;
#pragma warning disable 0169
		static Delegate GetGetLockCountHandler ()
		{
			if (cb_getLockCount == null)
				cb_getLockCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetLockCount));
			return cb_getLockCount;
		}

		static int n_GetLockCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.LockCounter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.LockCount;
		}
#pragma warning restore 0169

		public virtual unsafe int LockCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='LockCounter']/method[@name='getLockCount' and count(parameter)=0]"
			[Register ("getLockCount", "()I", "GetGetLockCountHandler")]
			get {
				const string __id = "getLockCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_lock;
#pragma warning disable 0169
		static Delegate GetLockHandler ()
		{
			if (cb_lock == null)
				cb_lock = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_Lock));
			return cb_lock;
		}

		static bool n_Lock (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.LockCounter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Lock ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='LockCounter']/method[@name='lock' and count(parameter)=0]"
		[Register ("lock", "()Z", "GetLockHandler")]
		public virtual unsafe bool Lock ()
		{
			const string __id = "lock.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_unlock;
#pragma warning disable 0169
		static Delegate GetUnlockHandler ()
		{
			if (cb_unlock == null)
				cb_unlock = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_Unlock));
			return cb_unlock;
		}

		static bool n_Unlock (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Util.LockCounter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Unlock ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='LockCounter']/method[@name='unlock' and count(parameter)=0]"
		[Register ("unlock", "()Z", "GetUnlockHandler")]
		public virtual unsafe bool Unlock ()
		{
			const string __id = "unlock.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

	}
}

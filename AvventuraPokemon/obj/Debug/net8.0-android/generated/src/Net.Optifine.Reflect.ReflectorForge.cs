//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Reflect {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']"
	[global::Android.Runtime.Register ("net/optifine/reflect/ReflectorForge", DoNotGenerateAcw=true)]
	public partial class ReflectorForge : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/field[@name='FORGE_ENTITY_CAN_UPDATE']"
		[Register ("FORGE_ENTITY_CAN_UPDATE")]
		public static bool ForgeEntityCanUpdate {
			get {
				const string __id = "FORGE_ENTITY_CAN_UPDATE.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/reflect/ReflectorForge", typeof (ReflectorForge));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ReflectorForge (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/constructor[@name='ReflectorForge' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ReflectorForge () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe bool ForgeCalculateAllNormals {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='getForgeCalculateAllNormals' and count(parameter)=0]"
			[Register ("getForgeCalculateAllNormals", "()Z", "")]
			get {
				const string __id = "getForgeCalculateAllNormals.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool ForgeUseCombinedDepthStencilAttachment {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='getForgeUseCombinedDepthStencilAttachment' and count(parameter)=0]"
			[Register ("getForgeUseCombinedDepthStencilAttachment", "()Z", "")]
			get {
				const string __id = "getForgeUseCombinedDepthStencilAttachment.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe global::Net.Optifine.Reflect.ReflectorClass? ReflectorClassOptiFineResourceLocator {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='getReflectorClassOptiFineResourceLocator' and count(parameter)=0]"
			[Register ("getReflectorClassOptiFineResourceLocator", "()Lnet/optifine/reflect/ReflectorClass;", "")]
			get {
				const string __id = "getReflectorClassOptiFineResourceLocator.()Lnet/optifine/reflect/ReflectorClass;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Reflect.ReflectorClass> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='getConfigClientBoolean' and count(parameter)=2 and parameter[1][@type='net.optifine.reflect.ReflectorField'] and parameter[2][@type='boolean']]"
		[Register ("getConfigClientBoolean", "(Lnet/optifine/reflect/ReflectorField;Z)Z", "")]
		public static unsafe bool GetConfigClientBoolean (global::Net.Optifine.Reflect.ReflectorField? configField, bool def)
		{
			const string __id = "getConfigClientBoolean.(Lnet/optifine/reflect/ReflectorField;Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((configField == null) ? IntPtr.Zero : ((global::Java.Lang.Object) configField).Handle);
				__args [1] = new JniArgumentValue (def);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (configField);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='getForgeModIds' and count(parameter)=0]"
		[Register ("getForgeModIds", "()[Ljava/lang/String;", "")]
		public static unsafe string[]? GetForgeModIds ()
		{
			const string __id = "getForgeModIds.()[Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (string[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='getOptiFineResourceStream' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getOptiFineResourceStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "")]
		public static unsafe global::System.IO.Stream? GetOptiFineResourceStream (string? path)
		{
			const string __id = "getOptiFineResourceStream.(Ljava/lang/String;)Ljava/io/InputStream;";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_path);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.InputStreamInvoker.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='postModLoaderEvent' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
		[Register ("postModLoaderEvent", "(Ljava/lang/Object;)V", "")]
		public static unsafe void PostModLoaderEvent (global::Java.Lang.Object? e)
		{
			const string __id = "postModLoaderEvent.(Ljava/lang/Object;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((e == null) ? IntPtr.Zero : ((global::Java.Lang.Object) e).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (e);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='postModLoaderEvent' and count(parameter)=2 and parameter[1][@type='net.optifine.reflect.ReflectorConstructor'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("postModLoaderEvent", "(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)V", "")]
		public static unsafe void PostModLoaderEvent (global::Net.Optifine.Reflect.ReflectorConstructor? constr, params global::Java.Lang.Object[]? @params)
		{
			const string __id = "postModLoaderEvent.(Lnet/optifine/reflect/ReflectorConstructor;[Ljava/lang/Object;)V";
			IntPtr native__params = JNIEnv.NewArray (@params);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((constr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) constr).Handle);
				__args [1] = new JniArgumentValue (native__params);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (@params != null) {
					JNIEnv.CopyArray (native__params, @params);
					JNIEnv.DeleteLocalRef (native__params);
				}
				global::System.GC.KeepAlive (constr);
				global::System.GC.KeepAlive (@params);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='putLaunchBlackboard' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]"
		[Register ("putLaunchBlackboard", "(Ljava/lang/String;Ljava/lang/Object;)V", "")]
		public static unsafe void PutLaunchBlackboard (string? key, global::Java.Lang.Object? value)
		{
			const string __id = "putLaunchBlackboard.(Ljava/lang/String;Ljava/lang/Object;)V";
			IntPtr native_key = JNIEnv.NewString ((string?)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.reflect']/class[@name='ReflectorForge']/method[@name='setForgeLightPipelineEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setForgeLightPipelineEnabled", "(Z)V", "")]
		public static unsafe void SetForgeLightPipelineEnabled (bool value)
		{
			const string __id = "setForgeLightPipelineEnabled.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (value);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

	}
}

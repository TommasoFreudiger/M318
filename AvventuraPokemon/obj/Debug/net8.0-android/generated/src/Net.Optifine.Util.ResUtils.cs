//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Util {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.util']/class[@name='ResUtils']"
	[global::Android.Runtime.Register ("net/optifine/util/ResUtils", DoNotGenerateAcw=true)]
	public partial class ResUtils : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/util/ResUtils", typeof (ResUtils));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ResUtils (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.util']/class[@name='ResUtils']/constructor[@name='ResUtils' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ResUtils () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='ResUtils']/method[@name='collectFiles' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("collectFiles", "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;", "")]
		public static unsafe string[]? CollectFiles (string? prefix, string? suffix)
		{
			const string __id = "collectFiles.(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;";
			IntPtr native_prefix = JNIEnv.NewString ((string?)prefix);
			IntPtr native_suffix = JNIEnv.NewString ((string?)suffix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_prefix);
				__args [1] = new JniArgumentValue (native_suffix);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (string[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
				JNIEnv.DeleteLocalRef (native_prefix);
				JNIEnv.DeleteLocalRef (native_suffix);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='ResUtils']/method[@name='collectFiles' and count(parameter)=2 and parameter[1][@type='java.lang.String[]'] and parameter[2][@type='java.lang.String[]']]"
		[Register ("collectFiles", "([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;", "")]
		public static unsafe string[]? CollectFiles (string[]? prefixes, string[]? suffixes)
		{
			const string __id = "collectFiles.([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;";
			IntPtr native_prefixes = JNIEnv.NewArray (prefixes);
			IntPtr native_suffixes = JNIEnv.NewArray (suffixes);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_prefixes);
				__args [1] = new JniArgumentValue (native_suffixes);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (string[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
				if (prefixes != null) {
					JNIEnv.CopyArray (native_prefixes, prefixes);
					JNIEnv.DeleteLocalRef (native_prefixes);
				}
				if (suffixes != null) {
					JNIEnv.CopyArray (native_suffixes, suffixes);
					JNIEnv.DeleteLocalRef (native_suffixes);
				}
				global::System.GC.KeepAlive (prefixes);
				global::System.GC.KeepAlive (suffixes);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='ResUtils']/method[@name='readProperties' and count(parameter)=2 and parameter[1][@type='java.io.InputStream'] and parameter[2][@type='java.lang.String']]"
		[Register ("readProperties", "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/Properties;", "")]
		public static unsafe global::Java.Util.Properties? ReadProperties (global::System.IO.Stream? @in, string? module)
		{
			const string __id = "readProperties.(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/Properties;";
			IntPtr native__in = global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (@in);
			IntPtr native_module = JNIEnv.NewString ((string?)module);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native__in);
				__args [1] = new JniArgumentValue (native_module);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Util.Properties> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native__in);
				JNIEnv.DeleteLocalRef (native_module);
				global::System.GC.KeepAlive (@in);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.util']/class[@name='ResUtils']/method[@name='readProperties' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("readProperties", "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;", "")]
		public static unsafe global::Java.Util.Properties? ReadProperties (string? path, string? module)
		{
			const string __id = "readProperties.(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			IntPtr native_module = JNIEnv.NewString ((string?)module);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_path);
				__args [1] = new JniArgumentValue (native_module);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Util.Properties> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
				JNIEnv.DeleteLocalRef (native_module);
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Http {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']"
	[global::Android.Runtime.Register ("net/optifine/http/HttpPipelineConnection", DoNotGenerateAcw=true)]
	public partial class HttpPipelineConnection : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/field[@name='TIMEOUT_CONNECT_MS']"
		[Register ("TIMEOUT_CONNECT_MS")]
		public const int TimeoutConnectMs = (int) 5000;

		// Metadata.xml XPath field reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/field[@name='TIMEOUT_READ_MS']"
		[Register ("TIMEOUT_READ_MS")]
		public const int TimeoutReadMs = (int) 5000;

		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/http/HttpPipelineConnection", typeof (HttpPipelineConnection));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected HttpPipelineConnection (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/constructor[@name='HttpPipelineConnection' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register (".ctor", "(Ljava/lang/String;I)V", "")]
		public unsafe HttpPipelineConnection (string? host, int port) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_host = JNIEnv.NewString ((string?)host);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_host);
				__args [1] = new JniArgumentValue (port);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_host);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/constructor[@name='HttpPipelineConnection' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.net.Proxy']]"
		[Register (".ctor", "(Ljava/lang/String;ILjava/net/Proxy;)V", "")]
		public unsafe HttpPipelineConnection (string? host, int port, global::Java.Net.Proxy? proxy) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;ILjava/net/Proxy;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_host = JNIEnv.NewString ((string?)host);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_host);
				__args [1] = new JniArgumentValue (port);
				__args [2] = new JniArgumentValue ((proxy == null) ? IntPtr.Zero : ((global::Java.Lang.Object) proxy).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_host);
				global::System.GC.KeepAlive (proxy);
			}
		}

		static Delegate? cb_getCountRequests;
#pragma warning disable 0169
		static Delegate GetGetCountRequestsHandler ()
		{
			if (cb_getCountRequests == null)
				cb_getCountRequests = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetCountRequests));
			return cb_getCountRequests;
		}

		static int n_GetCountRequests (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.CountRequests;
		}
#pragma warning restore 0169

		public virtual unsafe int CountRequests {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getCountRequests' and count(parameter)=0]"
			[Register ("getCountRequests", "()I", "GetGetCountRequestsHandler")]
			get {
				const string __id = "getCountRequests.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_hasActiveRequests;
#pragma warning disable 0169
		static Delegate GetHasActiveRequestsHandler ()
		{
			if (cb_hasActiveRequests == null)
				cb_hasActiveRequests = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_HasActiveRequests));
			return cb_hasActiveRequests;
		}

		static bool n_HasActiveRequests (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.HasActiveRequests;
		}
#pragma warning restore 0169

		public virtual unsafe bool HasActiveRequests {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='hasActiveRequests' and count(parameter)=0]"
			[Register ("hasActiveRequests", "()Z", "GetHasActiveRequestsHandler")]
			get {
				const string __id = "hasActiveRequests.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getHost;
#pragma warning disable 0169
		static Delegate GetGetHostHandler ()
		{
			if (cb_getHost == null)
				cb_getHost = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHost));
			return cb_getHost;
		}

		static IntPtr n_GetHost (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Host);
		}
#pragma warning restore 0169

		public virtual unsafe string? Host {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getHost' and count(parameter)=0]"
			[Register ("getHost", "()Ljava/lang/String;", "GetGetHostHandler")]
			get {
				const string __id = "getHost.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getInputStream;
#pragma warning disable 0169
		static Delegate GetGetInputStreamHandler ()
		{
			if (cb_getInputStream == null)
				cb_getInputStream = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetInputStream));
			return cb_getInputStream;
		}

		static IntPtr n_GetInputStream (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (__this.InputStream);
		}
#pragma warning restore 0169

		public virtual unsafe global::System.IO.Stream? InputStream {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getInputStream' and count(parameter)=0]"
			[Register ("getInputStream", "()Ljava/io/InputStream;", "GetGetInputStreamHandler")]
			get {
				const string __id = "getInputStream.()Ljava/io/InputStream;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.InputStreamInvoker.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_isClosed;
#pragma warning disable 0169
		static Delegate GetIsClosedHandler ()
		{
			if (cb_isClosed == null)
				cb_isClosed = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsClosed));
			return cb_isClosed;
		}

		static bool n_IsClosed (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsClosed;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsClosed {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='isClosed' and count(parameter)=0]"
			[Register ("isClosed", "()Z", "GetIsClosedHandler")]
			get {
				const string __id = "isClosed.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getNextRequestReceive;
#pragma warning disable 0169
		static Delegate GetGetNextRequestReceiveHandler ()
		{
			if (cb_getNextRequestReceive == null)
				cb_getNextRequestReceive = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetNextRequestReceive));
			return cb_getNextRequestReceive;
		}

		static IntPtr n_GetNextRequestReceive (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.NextRequestReceive);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Http.HttpPipelineRequest? NextRequestReceive {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getNextRequestReceive' and count(parameter)=0]"
			[Register ("getNextRequestReceive", "()Lnet/optifine/http/HttpPipelineRequest;", "GetGetNextRequestReceiveHandler")]
			get {
				const string __id = "getNextRequestReceive.()Lnet/optifine/http/HttpPipelineRequest;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getNextRequestSend;
#pragma warning disable 0169
		static Delegate GetGetNextRequestSendHandler ()
		{
			if (cb_getNextRequestSend == null)
				cb_getNextRequestSend = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetNextRequestSend));
			return cb_getNextRequestSend;
		}

		static IntPtr n_GetNextRequestSend (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.NextRequestSend);
		}
#pragma warning restore 0169

		public virtual unsafe global::Net.Optifine.Http.HttpPipelineRequest? NextRequestSend {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getNextRequestSend' and count(parameter)=0]"
			[Register ("getNextRequestSend", "()Lnet/optifine/http/HttpPipelineRequest;", "GetGetNextRequestSendHandler")]
			get {
				const string __id = "getNextRequestSend.()Lnet/optifine/http/HttpPipelineRequest;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getOutputStream;
#pragma warning disable 0169
		static Delegate GetGetOutputStreamHandler ()
		{
			if (cb_getOutputStream == null)
				cb_getOutputStream = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetOutputStream));
			return cb_getOutputStream;
		}

		static IntPtr n_GetOutputStream (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return global::Android.Runtime.OutputStreamAdapter.ToLocalJniHandle (__this.OutputStream);
		}
#pragma warning restore 0169

		public virtual unsafe global::System.IO.Stream? OutputStream {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getOutputStream' and count(parameter)=0]"
			[Register ("getOutputStream", "()Ljava/io/OutputStream;", "GetGetOutputStreamHandler")]
			get {
				const string __id = "getOutputStream.()Ljava/io/OutputStream;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.OutputStreamInvoker.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getPort;
#pragma warning disable 0169
		static Delegate GetGetPortHandler ()
		{
			if (cb_getPort == null)
				cb_getPort = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetPort));
			return cb_getPort;
		}

		static int n_GetPort (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Port;
		}
#pragma warning restore 0169

		public virtual unsafe int Port {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getPort' and count(parameter)=0]"
			[Register ("getPort", "()I", "GetGetPortHandler")]
			get {
				const string __id = "getPort.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getProxy;
#pragma warning disable 0169
		static Delegate GetGetProxyHandler ()
		{
			if (cb_getProxy == null)
				cb_getProxy = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetProxy));
			return cb_getProxy;
		}

		static IntPtr n_GetProxy (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Proxy);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Net.Proxy? Proxy {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='getProxy' and count(parameter)=0]"
			[Register ("getProxy", "()Ljava/net/Proxy;", "GetGetProxyHandler")]
			get {
				const string __id = "getProxy.()Ljava/net/Proxy;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Net.Proxy> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_addRequest_Lnet_optifine_http_HttpPipelineRequest_;
#pragma warning disable 0169
		static Delegate GetAddRequest_Lnet_optifine_http_HttpPipelineRequest_Handler ()
		{
			if (cb_addRequest_Lnet_optifine_http_HttpPipelineRequest_ == null)
				cb_addRequest_Lnet_optifine_http_HttpPipelineRequest_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_AddRequest_Lnet_optifine_http_HttpPipelineRequest_));
			return cb_addRequest_Lnet_optifine_http_HttpPipelineRequest_;
		}

		static bool n_AddRequest_Lnet_optifine_http_HttpPipelineRequest_ (IntPtr jnienv, IntPtr native__this, IntPtr native_pr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var pr = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (native_pr, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.AddRequest (pr);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='addRequest' and count(parameter)=1 and parameter[1][@type='net.optifine.http.HttpPipelineRequest']]"
		[Register ("addRequest", "(Lnet/optifine/http/HttpPipelineRequest;)Z", "GetAddRequest_Lnet_optifine_http_HttpPipelineRequest_Handler")]
		public virtual unsafe bool AddRequest (global::Net.Optifine.Http.HttpPipelineRequest? pr)
		{
			const string __id = "addRequest.(Lnet/optifine/http/HttpPipelineRequest;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((pr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) pr).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (pr);
			}
		}

		static Delegate? cb_onExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetOnExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_Handler ()
		{
			if (cb_onExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_ == null)
				cb_onExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OnExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_));
			return cb_onExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_;
		}

		static void n_OnExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_pr, IntPtr native_e)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var pr = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (native_pr, JniHandleOwnership.DoNotTransfer);
			var e = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_e, JniHandleOwnership.DoNotTransfer);
			__this.OnExceptionReceive (pr, e);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='onExceptionReceive' and count(parameter)=2 and parameter[1][@type='net.optifine.http.HttpPipelineRequest'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("onExceptionReceive", "(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V", "GetOnExceptionReceive_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_Handler")]
		public virtual unsafe void OnExceptionReceive (global::Net.Optifine.Http.HttpPipelineRequest? pr, global::Java.Lang.Exception? e)
		{
			const string __id = "onExceptionReceive.(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((pr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) pr).Handle);
				__args [1] = new JniArgumentValue ((e == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) e).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (pr);
				global::System.GC.KeepAlive (e);
			}
		}

		static Delegate? cb_onExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetOnExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_Handler ()
		{
			if (cb_onExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_ == null)
				cb_onExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OnExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_));
			return cb_onExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_;
		}

		static void n_OnExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_pr, IntPtr native_e)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var pr = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (native_pr, JniHandleOwnership.DoNotTransfer);
			var e = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_e, JniHandleOwnership.DoNotTransfer);
			__this.OnExceptionSend (pr, e);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='onExceptionSend' and count(parameter)=2 and parameter[1][@type='net.optifine.http.HttpPipelineRequest'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("onExceptionSend", "(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V", "GetOnExceptionSend_Lnet_optifine_http_HttpPipelineRequest_Ljava_lang_Exception_Handler")]
		public virtual unsafe void OnExceptionSend (global::Net.Optifine.Http.HttpPipelineRequest? pr, global::Java.Lang.Exception? e)
		{
			const string __id = "onExceptionSend.(Lnet/optifine/http/HttpPipelineRequest;Ljava/lang/Exception;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((pr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) pr).Handle);
				__args [1] = new JniArgumentValue ((e == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) e).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (pr);
				global::System.GC.KeepAlive (e);
			}
		}

		static Delegate? cb_onRequestSent_Lnet_optifine_http_HttpPipelineRequest_;
#pragma warning disable 0169
		static Delegate GetOnRequestSent_Lnet_optifine_http_HttpPipelineRequest_Handler ()
		{
			if (cb_onRequestSent_Lnet_optifine_http_HttpPipelineRequest_ == null)
				cb_onRequestSent_Lnet_optifine_http_HttpPipelineRequest_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnRequestSent_Lnet_optifine_http_HttpPipelineRequest_));
			return cb_onRequestSent_Lnet_optifine_http_HttpPipelineRequest_;
		}

		static void n_OnRequestSent_Lnet_optifine_http_HttpPipelineRequest_ (IntPtr jnienv, IntPtr native__this, IntPtr native_pr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var pr = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (native_pr, JniHandleOwnership.DoNotTransfer);
			__this.OnRequestSent (pr);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='onRequestSent' and count(parameter)=1 and parameter[1][@type='net.optifine.http.HttpPipelineRequest']]"
		[Register ("onRequestSent", "(Lnet/optifine/http/HttpPipelineRequest;)V", "GetOnRequestSent_Lnet_optifine_http_HttpPipelineRequest_Handler")]
		public virtual unsafe void OnRequestSent (global::Net.Optifine.Http.HttpPipelineRequest? pr)
		{
			const string __id = "onRequestSent.(Lnet/optifine/http/HttpPipelineRequest;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((pr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) pr).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (pr);
			}
		}

		static Delegate? cb_onResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_;
#pragma warning disable 0169
		static Delegate GetOnResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_Handler ()
		{
			if (cb_onResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_ == null)
				cb_onResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OnResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_));
			return cb_onResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_;
		}

		static void n_OnResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_ (IntPtr jnienv, IntPtr native__this, IntPtr native_pr, IntPtr native_resp)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var pr = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineRequest> (native_pr, JniHandleOwnership.DoNotTransfer);
			var resp = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpResponse> (native_resp, JniHandleOwnership.DoNotTransfer);
			__this.OnResponseReceived (pr, resp);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='onResponseReceived' and count(parameter)=2 and parameter[1][@type='net.optifine.http.HttpPipelineRequest'] and parameter[2][@type='net.optifine.http.HttpResponse']]"
		[Register ("onResponseReceived", "(Lnet/optifine/http/HttpPipelineRequest;Lnet/optifine/http/HttpResponse;)V", "GetOnResponseReceived_Lnet_optifine_http_HttpPipelineRequest_Lnet_optifine_http_HttpResponse_Handler")]
		public virtual unsafe void OnResponseReceived (global::Net.Optifine.Http.HttpPipelineRequest? pr, global::Net.Optifine.Http.HttpResponse? resp)
		{
			const string __id = "onResponseReceived.(Lnet/optifine/http/HttpPipelineRequest;Lnet/optifine/http/HttpResponse;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((pr == null) ? IntPtr.Zero : ((global::Java.Lang.Object) pr).Handle);
				__args [1] = new JniArgumentValue ((resp == null) ? IntPtr.Zero : ((global::Java.Lang.Object) resp).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (pr);
				global::System.GC.KeepAlive (resp);
			}
		}

		static Delegate? cb_setSocket_Ljava_net_Socket_;
#pragma warning disable 0169
		static Delegate GetSetSocket_Ljava_net_Socket_Handler ()
		{
			if (cb_setSocket_Ljava_net_Socket_ == null)
				cb_setSocket_Ljava_net_Socket_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetSocket_Ljava_net_Socket_));
			return cb_setSocket_Ljava_net_Socket_;
		}

		static void n_SetSocket_Ljava_net_Socket_ (IntPtr jnienv, IntPtr native__this, IntPtr native_s)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Http.HttpPipelineConnection> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var s = global::Java.Lang.Object.GetObject<global::Java.Net.Socket> (native_s, JniHandleOwnership.DoNotTransfer);
			__this.SetSocket (s);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.http']/class[@name='HttpPipelineConnection']/method[@name='setSocket' and count(parameter)=1 and parameter[1][@type='java.net.Socket']]"
		[Register ("setSocket", "(Ljava/net/Socket;)V", "GetSetSocket_Ljava_net_Socket_Handler")]
		public virtual unsafe void SetSocket (global::Java.Net.Socket? s)
		{
			const string __id = "setSocket.(Ljava/net/Socket;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((s == null) ? IntPtr.Zero : ((global::Java.Lang.Object) s).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (s);
			}
		}

	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Net.Optifine.Shaders {

	// Metadata.xml XPath class reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']"
	[global::Android.Runtime.Register ("net/optifine/shaders/DrawBuffers", DoNotGenerateAcw=true)]
	public partial class DrawBuffers : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("net/optifine/shaders/DrawBuffers", typeof (DrawBuffers));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DrawBuffers (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/constructor[@name='DrawBuffers' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register (".ctor", "(Ljava/lang/String;II)V", "")]
		public unsafe DrawBuffers (string? name, int maxColorBuffers, int maxDrawBuffers) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;II)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (maxColorBuffers);
				__args [2] = new JniArgumentValue (maxDrawBuffers);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_getGlDrawBuffers;
#pragma warning disable 0169
		static Delegate GetGetGlDrawBuffersHandler ()
		{
			if (cb_getGlDrawBuffers == null)
				cb_getGlDrawBuffers = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetGlDrawBuffers));
			return cb_getGlDrawBuffers;
		}

		static IntPtr n_GetGlDrawBuffers (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.GlDrawBuffers);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Nio.IntBuffer? GlDrawBuffers {
			// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='getGlDrawBuffers' and count(parameter)=0]"
			[Register ("getGlDrawBuffers", "()Ljava/nio/IntBuffer;", "GetGetGlDrawBuffersHandler")]
			get {
				const string __id = "getGlDrawBuffers.()Ljava/nio/IntBuffer;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Nio.IntBuffer> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_capacity;
#pragma warning disable 0169
		static Delegate GetCapacityHandler ()
		{
			if (cb_capacity == null)
				cb_capacity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Capacity));
			return cb_capacity;
		}

		static int n_Capacity (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Capacity ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='capacity' and count(parameter)=0]"
		[Register ("capacity", "()I", "GetCapacityHandler")]
		public virtual unsafe int Capacity ()
		{
			const string __id = "capacity.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_fill_I;
#pragma warning disable 0169
		static Delegate GetFill_IHandler ()
		{
			if (cb_fill_I == null)
				cb_fill_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Fill_I));
			return cb_fill_I;
		}

		static IntPtr n_Fill_I (IntPtr jnienv, IntPtr native__this, int val)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Fill (val));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='fill' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("fill", "(I)Lnet/optifine/shaders/DrawBuffers;", "GetFill_IHandler")]
		public virtual unsafe global::Net.Optifine.Shaders.DrawBuffers? Fill (int val)
		{
			const string __id = "fill.(I)Lnet/optifine/shaders/DrawBuffers;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (val);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_get_I;
#pragma warning disable 0169
		static Delegate GetGet_IHandler ()
		{
			if (cb_get_I == null)
				cb_get_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_I (n_Get_I));
			return cb_get_I;
		}

		static int n_Get_I (IntPtr jnienv, IntPtr native__this, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Get (index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='get' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("get", "(I)I", "GetGet_IHandler")]
		public virtual unsafe int Get (int index)
		{
			const string __id = "get.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getAttachmentMappings;
#pragma warning disable 0169
		static Delegate GetGetAttachmentMappingsHandler ()
		{
			if (cb_getAttachmentMappings == null)
				cb_getAttachmentMappings = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAttachmentMappings));
			return cb_getAttachmentMappings;
		}

		static IntPtr n_GetAttachmentMappings (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetAttachmentMappings ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='getAttachmentMappings' and count(parameter)=0]"
		[Register ("getAttachmentMappings", "()[I", "GetGetAttachmentMappingsHandler")]
		public virtual unsafe int[]? GetAttachmentMappings ()
		{
			const string __id = "getAttachmentMappings.()[I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
			}
		}

		static Delegate? cb_getInfo_Z;
#pragma warning disable 0169
		static Delegate GetGetInfo_ZHandler ()
		{
			if (cb_getInfo_Z == null)
				cb_getInfo_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_L (n_GetInfo_Z));
			return cb_getInfo_Z;
		}

		static IntPtr n_GetInfo_Z (IntPtr jnienv, IntPtr native__this, bool glBuffers)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.GetInfo (glBuffers));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='getInfo' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("getInfo", "(Z)Ljava/lang/String;", "GetGetInfo_ZHandler")]
		public virtual unsafe string? GetInfo (bool glBuffers)
		{
			const string __id = "getInfo.(Z)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (glBuffers);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_indexOf_I;
#pragma warning disable 0169
		static Delegate GetIndexOf_IHandler ()
		{
			if (cb_indexOf_I == null)
				cb_indexOf_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_I (n_IndexOf_I));
			return cb_indexOf_I;
		}

		static int n_IndexOf_I (IntPtr jnienv, IntPtr native__this, int att)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IndexOf (att);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='indexOf' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("indexOf", "(I)I", "GetIndexOf_IHandler")]
		public virtual unsafe int IndexOf (int att)
		{
			const string __id = "indexOf.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (att);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_limit;
#pragma warning disable 0169
		static Delegate GetLimitHandler ()
		{
			if (cb_limit == null)
				cb_limit = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Limit));
			return cb_limit;
		}

		static int n_Limit (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Limit ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='limit' and count(parameter)=0]"
		[Register ("limit", "()I", "GetLimitHandler")]
		public virtual unsafe int Limit ()
		{
			const string __id = "limit.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_limit_I;
#pragma warning disable 0169
		static Delegate GetLimit_IHandler ()
		{
			if (cb_limit_I == null)
				cb_limit_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Limit_I));
			return cb_limit_I;
		}

		static IntPtr n_Limit_I (IntPtr jnienv, IntPtr native__this, int newLimit)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Limit (newLimit));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='limit' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("limit", "(I)Lnet/optifine/shaders/DrawBuffers;", "GetLimit_IHandler")]
		public virtual unsafe global::Net.Optifine.Shaders.DrawBuffers? Limit (int newLimit)
		{
			const string __id = "limit.(I)Lnet/optifine/shaders/DrawBuffers;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (newLimit);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_position;
#pragma warning disable 0169
		static Delegate GetPositionHandler ()
		{
			if (cb_position == null)
				cb_position = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Position));
			return cb_position;
		}

		static int n_Position (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Position ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='position' and count(parameter)=0]"
		[Register ("position", "()I", "GetPositionHandler")]
		public virtual unsafe int Position ()
		{
			const string __id = "position.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_position_I;
#pragma warning disable 0169
		static Delegate GetPosition_IHandler ()
		{
			if (cb_position_I == null)
				cb_position_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Position_I));
			return cb_position_I;
		}

		static IntPtr n_Position_I (IntPtr jnienv, IntPtr native__this, int newPosition)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Position (newPosition));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='position' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("position", "(I)Lnet/optifine/shaders/DrawBuffers;", "GetPosition_IHandler")]
		public virtual unsafe global::Net.Optifine.Shaders.DrawBuffers? Position (int newPosition)
		{
			const string __id = "position.(I)Lnet/optifine/shaders/DrawBuffers;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (newPosition);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_put_I;
#pragma warning disable 0169
		static Delegate GetPut_IHandler ()
		{
			if (cb_put_I == null)
				cb_put_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Put_I));
			return cb_put_I;
		}

		static IntPtr n_Put_I (IntPtr jnienv, IntPtr native__this, int attachment)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Put (attachment));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='put' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("put", "(I)Lnet/optifine/shaders/DrawBuffers;", "GetPut_IHandler")]
		public virtual unsafe global::Net.Optifine.Shaders.DrawBuffers? Put (int attachment)
		{
			const string __id = "put.(I)Lnet/optifine/shaders/DrawBuffers;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (attachment);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_put_II;
#pragma warning disable 0169
		static Delegate GetPut_IIHandler ()
		{
			if (cb_put_II == null)
				cb_put_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_Put_II));
			return cb_put_II;
		}

		static IntPtr n_Put_II (IntPtr jnienv, IntPtr native__this, int index, int attachment)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Put (index, attachment));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='net.optifine.shaders']/class[@name='DrawBuffers']/method[@name='put' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("put", "(II)Lnet/optifine/shaders/DrawBuffers;", "GetPut_IIHandler")]
		public virtual unsafe global::Net.Optifine.Shaders.DrawBuffers? Put (int index, int attachment)
		{
			const string __id = "put.(II)Lnet/optifine/shaders/DrawBuffers;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (index);
				__args [1] = new JniArgumentValue (attachment);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Net.Optifine.Shaders.DrawBuffers> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}
